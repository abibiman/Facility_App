{"version":3,"file":"static/js/7112.b4e4bedf.chunk.js","mappings":"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","sources":["components/chart/use-chart.js","components/chart/chart.js","components/empty-content/empty-content.js","components/table/utils.js","components/table/use-table.js","components/table/table-no-data.js","components/table/table-skeleton.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","sections/mycare/medication/risk-assessment.js","sections/mycare/medication/condition-details-table.js","sections/mycare/medication/condition-summary.js","sections/mycare/medication/viewCondition.js","utils/format-number.js"],"sourcesContent":["import merge from 'lodash/merge';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useChart(options) {\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.typography.subtitle2.fontSize,\r\n    fontWeight: theme.typography.subtitle2.fontWeight,\r\n    lineHeight: theme.typography.subtitle2.lineHeight,\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    fontSize: theme.typography.h3.fontSize,\r\n    fontWeight: theme.typography.h3.fontWeight,\r\n    lineHeight: theme.typography.h3.lineHeight,\r\n  };\r\n\r\n  const baseOptions = {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.warning.main,\r\n      theme.palette.info.main,\r\n      theme.palette.error.main,\r\n      theme.palette.success.main,\r\n      theme.palette.warning.dark,\r\n      theme.palette.success.darker,\r\n      theme.palette.info.dark,\r\n      theme.palette.info.darker,\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily,\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04,\r\n        },\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round',\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false },\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper,\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      theme: false,\r\n      x: {\r\n        show: true,\r\n      },\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: {\r\n        radius: 12,\r\n      },\r\n      fontWeight: 500,\r\n      itemMargin: {\r\n        horizontal: 8,\r\n      },\r\n      labels: {\r\n        colors: theme.palette.text.primary,\r\n      },\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Bar\r\n      bar: {\r\n        borderRadius: 4,\r\n        columnWidth: '28%',\r\n        borderRadiusApplication: 'end',\r\n        borderRadiusWhenStacked: 'last',\r\n      },\r\n\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL,\r\n          },\r\n        },\r\n      },\r\n\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: alpha(theme.palette.grey[500], 0.16),\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL,\r\n        },\r\n      },\r\n\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n\r\n      // polarArea\r\n      polarArea: {\r\n        rings: {\r\n          strokeColor: theme.palette.divider,\r\n        },\r\n        spokes: {\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Responsive\r\n    responsive: [\r\n      {\r\n        // sm\r\n        breakpoint: theme.breakpoints.values.sm,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '40%' } },\r\n        },\r\n      },\r\n      {\r\n        // md\r\n        breakpoint: theme.breakpoints.values.md,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '32%' } },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return merge(baseOptions, options);\r\n}\r\n","import { memo } from 'react';\r\nimport ApexChart from 'react-apexcharts';\r\n// @mui\r\nimport { alpha, styled } from '@mui/material/styles';\r\n// theme\r\nimport { bgBlur } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Chart = styled(ApexChart)(({ theme }) => ({\r\n  '& .apexcharts-canvas': {\r\n    // Tooltip\r\n    '& .apexcharts-tooltip': {\r\n      ...bgBlur({\r\n        color: theme.palette.background.default,\r\n      }),\r\n      color: theme.palette.text.primary,\r\n      boxShadow: theme.customShadows.dropdown,\r\n      borderRadius: theme.shape.borderRadius * 1.25,\r\n      '&.apexcharts-theme-light': {\r\n        borderColor: 'transparent',\r\n        ...bgBlur({\r\n          color: theme.palette.background.default,\r\n        }),\r\n      },\r\n    },\r\n    '& .apexcharts-xaxistooltip': {\r\n      ...bgBlur({\r\n        color: theme.palette.background.default,\r\n      }),\r\n      borderColor: 'transparent',\r\n      color: theme.palette.text.primary,\r\n      boxShadow: theme.customShadows.dropdown,\r\n      borderRadius: theme.shape.borderRadius * 1.25,\r\n      '&:before': {\r\n        borderBottomColor: alpha(theme.palette.grey[500], 0.24),\r\n      },\r\n      '&:after': {\r\n        borderBottomColor: alpha(theme.palette.background.default, 0.8),\r\n      },\r\n    },\r\n    '& .apexcharts-tooltip-title': {\r\n      textAlign: 'center',\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      backgroundColor: alpha(theme.palette.grey[500], 0.08),\r\n      color: theme.palette.text[theme.palette.mode === 'light' ? 'secondary' : 'primary'],\r\n    },\r\n\r\n    // LEGEND\r\n    '& .apexcharts-legend': {\r\n      padding: 0,\r\n    },\r\n    '& .apexcharts-legend-series': {\r\n      display: 'inline-flex !important',\r\n      alignItems: 'center',\r\n    },\r\n    '& .apexcharts-legend-marker': {\r\n      marginRight: 8,\r\n    },\r\n    '& .apexcharts-legend-text': {\r\n      lineHeight: '18px',\r\n      textTransform: 'capitalize',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default memo(Chart);\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EmptyContent({ title, imgUrl, action, filled, description, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      flexGrow={1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        px: 3,\r\n        height: 1,\r\n        ...(filled && {\r\n          borderRadius: 2,\r\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"empty content\"\r\n        src={imgUrl || '/assets/icons/empty/ic_content.svg'}\r\n        sx={{ width: 1, maxWidth: 160 }}\r\n      />\r\n\r\n      {title && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {description && (\r\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nEmptyContent.propTypes = {\r\n  action: PropTypes.node,\r\n  description: PropTypes.string,\r\n  filled: PropTypes.bool,\r\n  imgUrl: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] === null) {\r\n    return 1;\r\n  }\r\n  if (b[orderBy] === null) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n//\r\nimport EmptyContent from '../empty-content';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ notFound, sx }) {\r\n  return (\r\n    <TableRow>\r\n      {notFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n              ...sx,\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  notFound: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSkeleton({ ...other }) {\r\n  return (\r\n    <TableRow {...other}>\r\n      <TableCell colSpan={12}>\r\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\r\n          <Skeleton sx={{ borderRadius: 1.5, width: 48, height: 48, flexShrink: 0 }} />\r\n          <Skeleton sx={{ width: 1, height: 12 }} />\r\n          <Skeleton sx={{ width: 180, height: 12 }} />\r\n          <Skeleton sx={{ width: 160, height: 12 }} />\r\n          <Skeleton sx={{ width: 140, height: 12 }} />\r\n          <Skeleton sx={{ width: 120, height: 12 }} />\r\n        </Stack>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: \"1px\",\r\n  height: \"1px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  whiteSpace: \"nowrap\",\r\n  clip: \"rect(0 0 0 0)\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {/* {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )} */}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{\r\n              width: headCell.width,\r\n              minWidth: headCell.minWidth,\r\n              background: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"#e8effb !important\" : \"\",\r\n            }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  dense,\r\n  onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n// theme\r\nimport { bgGradient } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function RiskAssessment({ sx, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Stack\r\n      alignItems=\"center\"\r\n      sx={{\r\n        ...bgGradient({\r\n          direction: '135deg',\r\n          startColor: alpha(theme.palette.primary.light, 0.2),\r\n          endColor: alpha(theme.palette.primary.main, 0.2),\r\n        }),\r\n        p: 5,\r\n        borderRadius: 2,\r\n        backgroundColor: 'common.white',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Button\r\n        size=\"large\"\r\n        color=\"inherit\"\r\n        variant=\"contained\"\r\n        sx={{\r\n          mt: 5,\r\n          mb: 2,\r\n          color: 'common.white',\r\n          bgcolor: 'grey.800',\r\n          '&:hover': {\r\n            bgcolor: 'grey.700',\r\n          },\r\n        }}\r\n      >\r\n        Assess Health Risk\r\n      </Button>\r\n\r\n      <Typography variant=\"caption\" sx={{ color: 'primary.dark', textAlign: 'center' }}>\r\n        Check Diabetes/High Blood Pressure Risk Score\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nRiskAssessment.propTypes = {\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Table from '@mui/material/Table';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Card from '@mui/material/Card';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { usePopover } from 'src/components/custom-popover';\r\nimport { TableHeadCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst medications = [\r\n  {\r\n    id: '1',\r\n    name: 'Metrabindazole',\r\n    dosage: '3',\r\n    started: '21-07-2023',\r\n    ended: '21-11-2023',\r\n    status: 'Finished',\r\n  },\r\n\r\n  {\r\n    id: '2',\r\n    name: 'Abitranadazole',\r\n    dosage: '3',\r\n    started: '21-03-2023',\r\n    ended: '',\r\n    status: 'In-Progress',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Abitranadazole',\r\n    dosage: '3',\r\n    started: '',\r\n    ended: '',\r\n    status: 'Not Started',\r\n  },\r\n];\r\n\r\nexport default function ConditionDetailsTable({\r\n  title,\r\n  subheader,\r\n  tableData,\r\n  tableLabels,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 3 }} />\r\n\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 680 }}>\r\n            <TableHeadCustom headLabel={tableLabels} />\r\n\r\n            <TableBody>\r\n              {tableData.map((row) => (\r\n                <ConditionDetailsTableRow key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nConditionDetailsTable.propTypes = {\r\n  subheader: PropTypes.string,\r\n  tableData: PropTypes.array,\r\n  tableLabels: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ConditionDetailsTableRow({ row }) {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        {/* {row.medication} */}\r\n        Cold\r\n      </TableCell>\r\n\r\n      <TableCell>18/05/1800</TableCell>\r\n\r\n      <TableCell>50%</TableCell>\r\n\r\n      <TableCell>Your score is okay</TableCell>\r\n\r\n      {/* <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (row.status === 'In-Progress' && 'warning') ||\r\n            (row.status === 'Finished' && 'success') ||\r\n            'error'\r\n          }\r\n        >\r\n          {row.status}\r\n        </Label>\r\n      </TableCell> */}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nConditionDetailsTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\n// utils\r\nimport { fNumber, fPercent } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Chart from 'src/components/chart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ConditionSummary({ title, percent, total, chart, sx, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const {\r\n    colors = [theme.palette.primary.light, theme.palette.primary.main],\r\n    series,\r\n    options,\r\n  } = chart;\r\n\r\n  const chartOptions = {\r\n    colors: colors.map((colr) => colr[1]),\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        colorStops: [\r\n          { offset: 0, color: colors[0] },\r\n          { offset: 100, color: colors[1] },\r\n        ],\r\n      },\r\n    },\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '68%',\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (value) => fNumber(value),\r\n        title: {\r\n          formatter: () => '',\r\n        },\r\n      },\r\n      marker: { show: false },\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, ...sx }} {...other}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n\r\n        <Typography variant=\"h3\">{total}</Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nConditionSummary.propTypes = {\r\n  chart: PropTypes.object,\r\n  percent: PropTypes.number,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import { useEffect, useContext, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport customAxios from 'src/utils/customAxios';\r\n// assets\r\nimport RiskAssessment from './risk-assessment';\r\nimport ConditionDetailsTable from './condition-details-table';\r\nimport ConditionSummary from './condition-summary';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ViewCondition() {\r\n  const { id } = useParams();\r\n  const theme = useTheme();\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [conditionDetails, setConditionDetails] = useState({});\r\n\r\n  const fetchConditionDetails = async () => {\r\n    try {\r\n      const {\r\n        data: { data },\r\n      } = await customAxios.get(`/conditions/detail/${id}`);\r\n\r\n      setConditionDetails(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  useEffect(() => {\r\n    fetchConditionDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} md={4}>\r\n          <ConditionSummary\r\n            title=\"Condition\"\r\n            percent={2.6}\r\n            total={conditionDetails?.name || ''}\r\n            chart={{\r\n              series: [5, 18, 12, 51, 68, 11, 39, 37, 27, 20],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <ConditionSummary\r\n            title=\"Date Added\"\r\n            percent={0.2}\r\n            total=\"18/05/1800\"\r\n            chart={{\r\n              colors: [theme.palette.info.light, theme.palette.info.main],\r\n              series: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <ConditionSummary\r\n            title=\"Average Score\"\r\n            percent={-0.1}\r\n            total=\"40%\"\r\n            chart={{\r\n              colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n              series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} lg={12}>\r\n          <ConditionDetailsTable\r\n            title=\"Condition Assessment History\"\r\n            tableData={conditionDetails?.medications || []}\r\n            tableLabels={[\r\n              { id: 'id', label: 'Condition' },\r\n              { id: 'category', label: 'Date Recorded' },\r\n              { id: 'price', label: 'Assessment Score' },\r\n              { id: 'prices', label: 'Assessment Remark' },\r\n            ]}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={12} lg={12}>\r\n          <Paper variant=\"outlined\" sx={{ p: 3, borderRadius: 1 }}>\r\n            <Typography gutterBottom variant=\"subtitle1\" sx={{ color: 'Primary' }}>\r\n              Doctors Notes\r\n            </Typography>\r\n\r\n            <Typography gutterBottom variant=\"body2\" sx={{ color: 'Primary' }}>\r\n              Cras ultricies mi eu turpis hendrerit fringilla. Fusce vel dui. Pellentesque auctor\r\n              neque nec urna. Sed cursus turpis vitae tortor. Curabitur suscipit suscipit tellus.\r\n              Cras ultricies mi eu turpis hendrerit fringilla. Fusce vel dui. Pellentesque auctor\r\n              neque nec urna. Sed cursus turpis vitae tortor. Curabitur suscipit suscipit tellus.\r\n              Cras ultricies mi eu turpis hendrerit fringilla. Fusce vel dui. Pellentesque suscipit\r\n              tellus.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={12} lg={12}>\r\n          <RiskAssessment sx={{ mt: 1 }} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["useChart","options","theme","useTheme","LABEL_TOTAL","show","label","color","palette","text","secondary","fontSize","typography","subtitle2","fontWeight","lineHeight","LABEL_VALUE","offsetY","primary","h3","baseOptions","colors","main","warning","info","error","success","dark","darker","chart","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","lines","axisBorder","axisTicks","markers","size","strokeColors","background","paper","tooltip","x","legend","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","borderRadius","columnWidth","borderRadiusApplication","borderRadiusWhenStacked","pie","donut","total","radialBar","track","strokeWidth","alpha","grey","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","values","sm","md","merge","Chart","styled","ApexChart","_ref","_objectSpread","bgBlur","default","boxShadow","customShadows","dropdown","shape","borderBottomColor","textAlign","fontWeightBold","backgroundColor","mode","padding","display","alignItems","marginRight","textTransform","memo","EmptyContent","title","imgUrl","action","filled","description","sx","other","_objectWithoutProperties","_excluded","_jsxs","Stack","flexGrow","justifyContent","px","height","bgcolor","border","concat","children","_jsx","Box","component","alt","src","maxWidth","Typography","variant","mt","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","_useState","useState","defaultDense","_useState2","_slicedToArray","dense","setDense","_useState3","defaultCurrentPage","_useState4","setPage","_useState5","defaultOrderBy","_useState6","setOrderBy","_useState7","defaultRowsPerPage","_useState8","setRowsPerPage","_useState9","defaultOrder","_useState10","setOrder","_useState11","defaultSelected","_useState12","selected","setSelected","onSort","useCallback","id","onSelectRow","inputValue","newSelected","includes","_toConsumableArray","onChangeRowsPerPage","event","parseInt","target","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","length","ceil","TableNoData","notFound","TableRow","TableCell","colSpan","py","p","TableSkeleton","Object","assign","_objectDestructuringEmpty","spacing","direction","Skeleton","flexShrink","TableEmptyRows","visuallyHidden","margin","overflow","whiteSpace","clip","TableHeadCustom","headLabel","rowCount","numSelected","TableHead","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","onClick","TableSelectedAction","pl","pr","top","left","zIndex","Checkbox","indeterminate","onChange","ml","TablePaginationCustom","_ref$rowsPerPageOptio","rowsPerPageOptions","TablePagination","borderTopColor","FormControlLabel","control","Switch","RiskAssessment","bgGradient","startColor","light","endColor","Button","mb","ConditionDetailsTable","subheader","tableData","tableLabels","Card","CardHeader","TableContainer","Scrollbar","Table","TableBody","row","ConditionDetailsTableRow","Divider","borderStyle","_ref2","ConditionSummary","percent","_chart$colors","series","colr","colorStops","offset","sparkline","y","formatter","fNumber","marker","ViewCondition","useParams","useContext","AuthContext","user","conditionDetails","setConditionDetails","fetchConditionDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$customAxios$ge","data","wrap","_context","prev","next","customAxios","get","sent","t0","console","log","abrupt","stop","apply","arguments","settings","useSettingsContext","useEffect","Container","themeStretch","Grid","container","xs","name","lg","medications","Paper","gutterBottom","number","numeral","format","fCurrency","result","fPercent","Number","fShortenNumber","fData","key","undefined","replace"],"sourceRoot":""}