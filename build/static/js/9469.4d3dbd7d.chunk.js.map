{"version":3,"file":"static/js/9469.4d3dbd7d.chunk.js","mappings":"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","sources":["sections/appointments/appointment-pdf.js","sections/appointments/appointment-toolbar.js","sections/appointments/appointment-details.js","sections/appointments/view/appointment-details-view.js","sections/appointments/completed-order-table-row.js","sections/appointments/completed-table-toolbar.js","sections/appointments/completed-order-table-filters-result.js","sections/appointments/view/completed-list-view.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\nimport { Page, View, Text, Image, Document, Font, StyleSheet } from '@react-pdf/renderer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFont.register({\r\n  family: 'Roboto',\r\n  fonts: [{ src: '/fonts/Roboto-Regular.ttf' }, { src: '/fonts/Roboto-Bold.ttf' }],\r\n});\r\n\r\nconst useStyles = () =>\r\n  useMemo(\r\n    () =>\r\n      StyleSheet.create({\r\n        col4: { width: '25%' },\r\n        col8: { width: '75%' },\r\n        col6: { width: '50%' },\r\n        mb4: { marginBottom: 4 },\r\n        mb8: { marginBottom: 8 },\r\n        mb40: { marginBottom: 40 },\r\n        h3: { fontSize: 16, fontWeight: 700 },\r\n        h4: { fontSize: 13, fontWeight: 700 },\r\n        body1: { fontSize: 10 },\r\n        body2: { fontSize: 9 },\r\n        subtitle1: { fontSize: 10, fontWeight: 700 },\r\n        subtitle2: { fontSize: 9, fontWeight: 700 },\r\n        alignRight: { textAlign: 'right' },\r\n        page: {\r\n          fontSize: 9,\r\n          lineHeight: 1.6,\r\n          fontFamily: 'Roboto',\r\n          backgroundColor: '#FFFFFF',\r\n          textTransform: 'capitalize',\r\n          padding: '40px 24px 120px 24px',\r\n        },\r\n        footer: {\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          padding: 24,\r\n          margin: 'auto',\r\n          borderTopWidth: 1,\r\n          borderStyle: 'solid',\r\n          position: 'absolute',\r\n          borderColor: '#DFE3E8',\r\n        },\r\n        gridContainer: {\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n        },\r\n        table: {\r\n          display: 'flex',\r\n          width: 'auto',\r\n        },\r\n        tableRow: {\r\n          padding: '8px 0',\r\n          flexDirection: 'row',\r\n          borderBottomWidth: 1,\r\n          borderStyle: 'solid',\r\n          borderColor: '#DFE3E8',\r\n        },\r\n        noBorder: {\r\n          paddingTop: 8,\r\n          paddingBottom: 0,\r\n          borderBottomWidth: 0,\r\n        },\r\n        tableCell_1: {\r\n          width: '5%',\r\n        },\r\n        tableCell_2: {\r\n          width: '50%',\r\n          paddingRight: 16,\r\n        },\r\n        tableCell_3: {\r\n          width: '15%',\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentPDF({ invoice, currentStatus }) {\r\n  const {\r\n    items,\r\n    taxes,\r\n    dueDate,\r\n    discount,\r\n    shipping,\r\n    invoiceTo,\r\n    createDate,\r\n    totalAmount,\r\n    invoiceFrom,\r\n    invoiceNumber,\r\n    subTotal,\r\n  } = invoice;\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <Image source=\"/logo/logo_single.png\" style={{ width: 48, height: 48 }} />\r\n\r\n          <View style={{ alignItems: 'flex-end', flexDirection: 'column' }}>\r\n            <Text style={styles.h3}>{currentStatus}</Text>\r\n            <Text> {invoiceNumber} </Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice from</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.name}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.phoneNumber}</Text>\r\n          </View>\r\n\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice to</Text>\r\n            <Text style={styles.body2}>{invoiceTo.name}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.phoneNumber}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Date create</Text>\r\n            <Text style={styles.body2}>{fDate(createDate)}</Text>\r\n          </View>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Due date</Text>\r\n            <Text style={styles.body2}>{fDate(dueDate)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={[styles.subtitle1, styles.mb8]}>Invoice Details</Text>\r\n\r\n        <View style={styles.table}>\r\n          <View>\r\n            <View style={styles.tableRow}>\r\n              <View style={styles.tableCell_1}>\r\n                <Text style={styles.subtitle2}>#</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_2}>\r\n                <Text style={styles.subtitle2}>Description</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Qty</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Unit price</Text>\r\n              </View>\r\n\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.subtitle2}>Total</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View>\r\n            {items.map((item, index) => (\r\n              <View style={styles.tableRow} key={item.id}>\r\n                <View style={styles.tableCell_1}>\r\n                  <Text>{index + 1}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_2}>\r\n                  <Text style={styles.subtitle2}>{item.title}</Text>\r\n                  <Text>{item.description}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.quantity}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.price}</Text>\r\n                </View>\r\n\r\n                <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                  <Text>{fCurrency(item.price * item.quantity)}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Subtotal</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(subTotal)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Shipping</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-shipping)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Discount</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-discount)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Taxes</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(taxes)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.h4}>Total</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.h4}>{fCurrency(totalAmount)}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.footer]} fixed>\r\n          <View style={styles.col8}>\r\n            <Text style={styles.subtitle2}>NOTES</Text>\r\n            <Text>\r\n              We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n            </Text>\r\n          </View>\r\n          <View style={[styles.col4, styles.alignRight]}>\r\n            <Text style={styles.subtitle2}>Have a Question?</Text>\r\n            <Text>support@abcapp.com</Text>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n}\r\n\r\nAppointmentPDF.propTypes = {\r\n  currentStatus: PropTypes.string,\r\n  invoice: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport InvoicePDF from './appointment-pdf';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentToolbar({ invoice, currentStatus, statusOptions, onChangeStatus }) {\r\n  const router = useRouter();\r\n\r\n  const view = useBoolean();\r\n\r\n  const handleEdit = useCallback(() => {\r\n    router.push(paths.dashboard.invoice.edit(invoice.id));\r\n  }, [invoice.id, router]);\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={3}\r\n        direction={{ xs: 'column', sm: 'row' }}\r\n        alignItems={{ xs: 'flex-end', sm: 'center' }}\r\n        sx={{ mb: { xs: 3, md: 5 } }}\r\n      >\r\n        <Stack direction=\"row\" spacing={1} flexGrow={1} sx={{ width: 1 }}>\r\n          <Tooltip title=\"Edit\">\r\n            <IconButton onClick={handleEdit}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"View\">\r\n            <IconButton onClick={view.onTrue}>\r\n              <Iconify icon=\"solar:eye-bold\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <PDFDownloadLink\r\n            document={<InvoicePDF invoice={invoice} currentStatus={currentStatus} />}\r\n            fileName={invoice.invoiceNumber}\r\n            style={{ textDecoration: 'none' }}\r\n          >\r\n            {({ loading }) => (\r\n              <Tooltip title=\"Download\">\r\n                <IconButton>\r\n                  {loading ? (\r\n                    <CircularProgress size={24} color=\"inherit\" />\r\n                  ) : (\r\n                    <Iconify icon=\"eva:cloud-download-fill\" />\r\n                  )}\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n          </PDFDownloadLink>\r\n\r\n          <Tooltip title=\"Print\">\r\n            <IconButton>\r\n              <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Send\">\r\n            <IconButton>\r\n              <Iconify icon=\"iconamoon:send-fill\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Share\">\r\n            <IconButton>\r\n              <Iconify icon=\"solar:share-bold\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n\r\n        <TextField\r\n          fullWidth\r\n          select\r\n          label=\"Status\"\r\n          value={currentStatus}\r\n          onChange={onChangeStatus}\r\n          sx={{\r\n            maxWidth: 160,\r\n          }}\r\n        >\r\n          {statusOptions.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Stack>\r\n\r\n      <Dialog fullScreen open={view.value}>\r\n        <Box sx={{ height: 1, display: 'flex', flexDirection: 'column' }}>\r\n          <DialogActions\r\n            sx={{\r\n              p: 1.5,\r\n            }}\r\n          >\r\n            <Button color=\"inherit\" variant=\"contained\" onClick={view.onFalse}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n\r\n          <Box sx={{ flexGrow: 1, height: 1, overflow: 'hidden' }}>\r\n            <PDFViewer width=\"100%\" height=\"100%\" style={{ border: 'none' }}>\r\n              <InvoicePDF invoice={invoice} currentStatus={currentStatus} />\r\n            </PDFViewer>\r\n          </Box>\r\n        </Box>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nAppointmentToolbar.propTypes = {\r\n  currentStatus: PropTypes.string,\r\n  invoice: PropTypes.object,\r\n  onChangeStatus: PropTypes.func,\r\n  statusOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport InvoiceToolbar from './appointment-toolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    textAlign: 'right',\r\n    borderBottom: 'none',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentDetails({ invoice }) {\r\n  const [currentStatus, setCurrentStatus] = useState(invoice.status);\r\n\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  const renderTotal = (\r\n    <>\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          Subtotal\r\n        </TableCell>\r\n        <TableCell width={120} sx={{ typography: 'subtitle2' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          {fCurrency(invoice.subTotal)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Shipping</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.shipping)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Discount</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.discount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Taxes</TableCell>\r\n        <TableCell width={120}>{fCurrency(invoice.taxes)}</TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ typography: 'subtitle1' }}>Total</TableCell>\r\n        <TableCell width={140} sx={{ typography: 'subtitle1' }}>\r\n          {fCurrency(invoice.totalAmount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n    </>\r\n  );\r\n\r\n  const renderFooter = (\r\n    <Grid container>\r\n      <Grid xs={12} md={9} sx={{ py: 3 }}>\r\n        <Typography variant=\"subtitle2\">NOTES</Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\r\n        <Typography variant=\"subtitle2\">Have a Question?</Typography>\r\n\r\n        <Typography variant=\"body2\">support@minimals.cc</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const renderList = (\r\n    <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 960 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={40}>#</TableCell>\r\n\r\n              <TableCell sx={{ typography: 'subtitle2' }}>Description</TableCell>\r\n\r\n              <TableCell>Qty</TableCell>\r\n\r\n              <TableCell align=\"right\">Unit price</TableCell>\r\n\r\n              <TableCell align=\"right\">Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {invoice.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n\r\n                <TableCell>\r\n                  <Box sx={{ maxWidth: 560 }}>\r\n                    <Typography variant=\"subtitle2\">{row.title}</Typography>\r\n\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                      {row.description}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell>{row.quantity}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price)}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price * row.quantity)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {renderTotal}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <InvoiceToolbar\r\n        invoice={invoice}\r\n        currentStatus={currentStatus || ''}\r\n        onChangeStatus={handleChangeStatus}\r\n        statusOptions={INVOICE_STATUS_OPTIONS}\r\n      />\r\n\r\n      <Card sx={{ pt: 5, px: 5 }}>\r\n        <Box\r\n          rowGap={5}\r\n          display=\"grid\"\r\n          alignItems=\"center\"\r\n          gridTemplateColumns={{\r\n            xs: 'repeat(1, 1fr)',\r\n            sm: 'repeat(2, 1fr)',\r\n          }}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"logo\"\r\n            src=\"/logo/logo_single.svg\"\r\n            sx={{ width: 48, height: 48 }}\r\n          />\r\n\r\n          <Stack spacing={1} alignItems={{ xs: 'flex-start', md: 'flex-end' }}>\r\n            <Label\r\n              variant=\"soft\"\r\n              color={\r\n                (currentStatus === 'paid' && 'success') ||\r\n                (currentStatus === 'pending' && 'warning') ||\r\n                (currentStatus === 'overdue' && 'error') ||\r\n                'default'\r\n              }\r\n            >\r\n              {currentStatus}\r\n            </Label>\r\n\r\n            <Typography variant=\"h6\">{invoice.invoiceNumber}</Typography>\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice From\r\n            </Typography>\r\n            {invoice.invoiceFrom.name}\r\n            <br />\r\n            {invoice.invoiceFrom.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceFrom.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice To\r\n            </Typography>\r\n            {invoice.invoiceTo.name}\r\n            <br />\r\n            {invoice.invoiceTo.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceTo.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Date Create\r\n            </Typography>\r\n            {fDate(invoice.createDate)}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Due Date\r\n            </Typography>\r\n            {fDate(invoice.dueDate)}\r\n          </Stack>\r\n        </Box>\r\n\r\n        {renderList}\r\n\r\n        <Divider sx={{ mt: 5, borderStyle: 'dashed' }} />\r\n\r\n        {renderFooter}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nAppointmentDetails.propTypes = {\r\n  invoice: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _invoices } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceDetails from '../appointment-details';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentDetailsView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  const currentInvoice = _invoices.filter((invoice) => invoice.id === id)[0];\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading={currentInvoice?.invoiceNumber}\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          { name: currentInvoice?.invoiceNumber },\r\n        ]}\r\n        sx={{ mb: { xs: 3, md: 5 } }}\r\n      />\r\n\r\n      <InvoiceDetails invoice={currentInvoice} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nAppointmentDetailsView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport { useSnackbar } from \"src/components/snackbar\";\r\n// import DetailsPopup from \"./components/details-popup\";\r\n// import AppointmentPopup from \"./components/appointment-popup\";\r\n// import UploadPopup from \"./components/upload-popup\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { format } from \"date-fns\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CompletedOrderTableRow({\r\n  row,\r\n  selected,\r\n  onViewRow,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n}) {\r\n  const {\r\n    orderType,\r\n    priority,\r\n    status,\r\n    // appointmentTime,\r\n    // _id,\r\n    // providerID,\r\n    // userID,\r\n    appointmentDate,\r\n\r\n    patientName,\r\n    _id,\r\n    dateOrdered,\r\n    // facilityID,\r\n    // description,\r\n    // appointmentID,\r\n    // dateOrdered,\r\n    // result,\r\n    // feeAmount,\r\n    // paid,\r\n    labItems,\r\n    labOrderId,\r\n  } = row;\r\n\r\n  const uniqueCategories = [...new Set(labItems.map((lab) => lab.category))];\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n  const [openUploadBox, setOpenUploadBox] = useState(false);\r\n  const [openAppointmentBox, setOpenAppointmentBox] = useState(false);\r\n  const [openCompleteBox, setOpenCompleteBox] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const markAsCompletedFunc = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await customAxios.patch(\r\n        `/medical-labs/facility/result/complete/${labOrderId}`\r\n      );\r\n      if (res) {\r\n        enqueueSnackbar(\"Successfully marked as completed\");\r\n        fetchAllOrders();\r\n      }\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderPrimary = (\r\n    <TableRow hover selected={selected}>\r\n      <TableCell>\r\n        <Box\r\n          onClick={onViewRow}\r\n          sx={{\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n              textDecoration: \"underline\",\r\n            },\r\n          }}\r\n        >\r\n          {`${labOrderId}`}\r\n        </Box>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <ListItemText\r\n          primary={patientName}\r\n          // secondary=\"0234521425\"\r\n          primaryTypographyProps={{ typography: \"body2\" }}\r\n          secondaryTypographyProps={{\r\n            component: \"span\",\r\n            color: \"text.disabled\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <ListItemText\r\n          // primary={format(new Date(createdAt), 'dd MMM yyyy')}\r\n          // secondary={format(new Date(createdAt), 'p')}\r\n          // primary=\"2023-08-21\"\r\n          // secondary=\"14:32\"\r\n          primary={format(new Date(dateOrdered), \"dd/MM/yyyy\")}\r\n          primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n          secondaryTypographyProps={{\r\n            mt: 0.5,\r\n            component: \"span\",\r\n            typography: \"caption\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell align=\"center\"> {uniqueCategories.join(\", \")} </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (status === \"approved\" && \"success\") ||\r\n            (status === \"pending\" && \"warning\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {/* {status} */}\r\n          Completed\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (priority === \"regular\" && \"success\") ||\r\n            (priority === \"urgent\" && \"warning\") ||\r\n            (priority === \"emergency\" && \"error\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {priority}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"right\" sx={{ px: 1, whiteSpace: \"nowrap\" }}>\r\n        <IconButton\r\n          color={popover.open ? \"inherit\" : \"default\"}\r\n          onClick={popover.onOpen}\r\n        >\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderPrimary}\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ maxWidth: 200 }}\r\n      >\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            setOpenDialogBox(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem> */}\r\n\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            setOpenUploadBox(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols-light:upload-sharp\" />\r\n          Upload Results\r\n        </MenuItem> */}\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenCompleteBox(true);\r\n            // onViewRow();\r\n            // popover.onClose();\r\n            // markAsCompletedFunc();\r\n          }}\r\n        >\r\n          <Iconify icon=\"fluent-mdl2:completed-solid\" />\r\n          Mark as completed\r\n        </MenuItem>\r\n\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            alert(\"Cancel Order\");\r\n          }}\r\n        >\r\n          <Iconify icon=\"flat-color-icons:cancel\" />\r\n          Cancel\r\n        </MenuItem> */}\r\n      </CustomPopover>\r\n      {/* <DetailsPopup\r\n        row={row}\r\n        openDialogBox={openDialogBox}\r\n        setOpenDialogBox={setOpenDialogBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n      />\r\n\r\n      <AppointmentPopup\r\n        openAppointmentBox={openAppointmentBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n        id={row?._id}\r\n      />\r\n\r\n      <UploadPopup\r\n        openUploadBox={openUploadBox}\r\n        handleClose={() => setOpenUploadBox(false)}\r\n        id={row?._id}\r\n      /> */}\r\n      <ConfirmDialog\r\n        open={openCompleteBox}\r\n        onClose={() => setOpenCompleteBox(false)}\r\n        title=\"Complete Upload of Lab Result\"\r\n        content=\"Are you sure you want to set order to complete?\"\r\n        action={\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            loading={isLoading}\r\n            onClick={() => markAsCompletedFunc()}\r\n          >\r\n            Complete\r\n          </LoadingButton>\r\n        }\r\n      />{\" \"}\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nCompletedOrderTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  fetchAllOrders: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useCallback } from \"react\";\r\n// @mui\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CompletedOrderTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  canReset,\r\n  onResetFilters,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters(\"orderType\", event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"startDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"endDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: \"flex-end\", md: \"center\" }}\r\n        direction={{\r\n          xs: \"column\",\r\n          md: \"row\",\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 200 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 200 },\r\n          }}\r\n        />\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          flexGrow={1}\r\n          sx={{ width: 1 }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            value={filters.orderType}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search by order type...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify\r\n                    icon=\"eva:search-fill\"\r\n                    sx={{ color: \"text.disabled\" }}\r\n                  />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        {canReset && (\r\n          <Button\r\n            color=\"error\"\r\n            sx={{ flexShrink: 0 }}\r\n            onClick={onResetFilters}\r\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n          >\r\n            Clear\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem> */}\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nCompletedOrderTableToolbar.propTypes = {\r\n  canReset: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport { shortDateLabel } from \"src/components/custom-date-range-picker\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CompletedTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveStatus = () => {\r\n    onFilters(\"status\", \"all\");\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters(\"startDate\", null);\r\n    onFilters(\"endDate\", null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: \"body2\" }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: \"text.secondary\", ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack\r\n        flexGrow={1}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        flexWrap=\"wrap\"\r\n        alignItems=\"center\"\r\n      >\r\n        {filters.status !== \"all\" && (\r\n          <Block label=\"Status:\">\r\n            <Chip\r\n              size=\"small\"\r\n              label={filters.status}\r\n              onDelete={handleRemoveStatus}\r\n            />\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nCompletedTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: \"hidden\",\r\n        borderStyle: \"dashed\",\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: \"subtitle2\" }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n// @mui\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from \"src/_mock\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport CompletedOrderTableRow from \"../completed-order-table-row\";\r\nimport CompletedOrderTableToolbar from \"../completed-table-toolbar\";\r\nimport CompletedTableFiltersResult from \"../completed-order-table-filters-result\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS_OPTIONS = [\r\n  { value: \"all\", label: \"All\" },\r\n  ...ORDER_STATUS_OPTIONS,\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"orderNumber\", label: \"Appointment ID\", width: 180 },\r\n  { id: \"name\", label: \"Patient\", width: 120 },\r\n  { id: \"createdAt\", label: \"Date\", width: 120 },\r\n  { id: \"totalQuantity\", label: \"Order Type\", width: 200 },\r\n  { id: \"totalAmount\", label: \"Status\", width: 140 },\r\n  { id: \"status\", label: \"Priority\", width: 110 },\r\n  { id: \"\", width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: \"\",\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n  orderType: \"\",\r\n  labOrderId: \"\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CompletedListView() {\r\n  const table = useTable({ defaultOrderBy: \"orderNumber\" });\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const { user } = useAuthContext();\r\n\r\n  const fetchAllOrders = async () => {\r\n    try {\r\n      const { data } = await customAxios.get(\r\n        // `/medical-labs/facility/approved/${user?.facilityID}`\r\n        `/medical-labs/facility/result/uncompleted/${user?.facilityID}`\r\n        // `/medical-labs/facility/approved/lnGkszsOkvUi`\r\n      );\r\n\r\n      setTableData(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllOrders();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.order.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <CustomBreadcrumbs\r\n          heading=\"All Lab Results\"\r\n          links={[\r\n            {\r\n              name: \"Dashboard\",\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: \"Appointments\",\r\n              href: paths.dashboard.order.root,\r\n            },\r\n            { name: \"List\" },\r\n          ]}\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card>\r\n          {/* <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: (theme) =>\r\n                `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                iconPosition=\"end\"\r\n                value={tab.value}\r\n                label={tab.label}\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={\r\n                      (tab.value === \"completed\" && \"success\") ||\r\n                      (tab.value === \"pending\" && \"warning\") ||\r\n                      (tab.value === \"cancelled\" && \"error\") ||\r\n                      \"default\"\r\n                    }\r\n                  >\r\n                    {tab.value === \"all\" && tableData.length}\r\n                    {tab.value === \"completed\" &&\r\n                      tableData.filter((order) => order.status === \"Completed\")\r\n                        .length}\r\n\r\n                    {tab.value === \"pending\" &&\r\n                      tableData.filter((order) => order.status === \"Pending\")\r\n                        .length}\r\n                    {tab.value === \"cancelled\" &&\r\n                      tableData.filter((order) => order.status === \"Cancelled\")\r\n                        .length}\r\n                    {tab.value === \"refunded\" &&\r\n                      tableData.filter((order) => order.status === \"Refunded\")\r\n                        .length}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs> */}\r\n\r\n          <CompletedOrderTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            canReset={canReset}\r\n            onResetFilters={handleResetFilters}\r\n          />\r\n\r\n          {canReset && (\r\n            <CompletedTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 960 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .sort(\r\n                      (a, b) =>\r\n                        new Date(b.dateOrdered) - new Date(a.dateOrdered)\r\n                    )\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <CompletedOrderTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        fetchAllOrders={fetchAllOrders}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      {/* <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete{\" \"}\r\n            <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { status, name, startDate, endDate, orderType, labOrderId } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (orderType) {\r\n    inputData = inputData.filter(\r\n      (order) =>\r\n        order.orderType.toLowerCase().indexOf(orderType.toLowerCase()) !== -1\r\n      // order.customer.name.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n      // order.customer.email.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((order) => order.status === status);\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (order) =>\r\n          fTimestamp(order.createdAt) >= fTimestamp(startDate) &&\r\n          fTimestamp(order.createdAt) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n"],"names":["Font","register","family","fonts","src","useStyles","useMemo","StyleSheet","create","col4","width","col8","col6","mb4","marginBottom","mb8","mb40","h3","fontSize","fontWeight","h4","body1","body2","subtitle1","subtitle2","alignRight","textAlign","page","lineHeight","fontFamily","backgroundColor","textTransform","padding","footer","left","right","bottom","margin","borderTopWidth","borderStyle","position","borderColor","gridContainer","flexDirection","justifyContent","table","display","tableRow","borderBottomWidth","noBorder","paddingTop","paddingBottom","tableCell_1","tableCell_2","paddingRight","tableCell_3","AppointmentPDF","_ref","invoice","currentStatus","items","taxes","dueDate","discount","shipping","invoiceTo","createDate","totalAmount","invoiceFrom","invoiceNumber","subTotal","styles","_jsx","Document","children","_jsxs","Page","size","style","View","Image","source","height","alignItems","Text","name","fullAddress","phoneNumber","fDate","map","item","index","title","description","quantity","price","fCurrency","id","fixed","AppointmentToolbar","statusOptions","onChangeStatus","router","useRouter","view","useBoolean","handleEdit","useCallback","push","paths","dashboard","edit","_Fragment","Stack","spacing","direction","xs","sm","sx","mb","md","flexGrow","Tooltip","IconButton","onClick","Iconify","icon","onTrue","PDFDownloadLink","document","InvoicePDF","fileName","textDecoration","_ref2","loading","CircularProgress","color","TextField","fullWidth","select","label","value","onChange","maxWidth","option","MenuItem","Dialog","fullScreen","open","Box","DialogActions","p","Button","variant","onFalse","overflow","PDFViewer","border","StyledTableRow","styled","TableRow","theme","borderBottom","AppointmentDetails","_useState","useState","status","_useState2","_slicedToArray","setCurrentStatus","handleChangeStatus","event","target","renderTotal","TableCell","colSpan","mt","typography","renderFooter","Grid","container","py","Typography","renderList","TableContainer","Scrollbar","Table","minWidth","TableHead","align","TableBody","row","noWrap","InvoiceToolbar","INVOICE_STATUS_OPTIONS","Card","pt","px","rowGap","gridTemplateColumns","component","alt","Label","Divider","AppointmentDetailsView","settings","useSettingsContext","currentInvoice","_invoices","filter","Container","themeStretch","CustomBreadcrumbs","heading","links","href","root","InvoiceDetails","CompletedOrderTableRow","selected","onViewRow","onDeleteRow","onSelectRow","fetchAllOrders","priority","orderType","patientName","appointmentDate","dateOrdered","_id","labItems","labOrderId","uniqueCategories","_toConsumableArray","Set","lab","category","confirm","popover","usePopover","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","openCompleteBox","setOpenCompleteBox","_useState9","_useState10","isLoading","setIsLoading","enqueueSnackbar","useSnackbar","markAsCompletedFunc","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","customAxios","patch","concat","sent","console","log","t0","finish","stop","apply","arguments","renderPrimary","hover","cursor","ListItemText","primary","primaryTypographyProps","secondaryTypographyProps","format","Date","join","whiteSpace","onOpen","CustomPopover","onClose","arrow","ConfirmDialog","content","action","LoadingButton","CompletedOrderTableToolbar","filters","onFilters","canReset","onResetFilters","handleFilterName","handleFilterStartDate","newValue","handleFilterEndDate","pr","DatePicker","startDate","slotProps","textField","endDate","placeholder","InputProps","startAdornment","InputAdornment","flexShrink","startIcon","CompletedTableFiltersResult","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","_objectSpread","ml","flexWrap","Block","Chip","onDelete","_excluded2","Paper","borderRadius","TABLE_HEAD","ORDER_STATUS_OPTIONS","defaultFilters","CompletedListView","useTable","defaultOrderBy","tableData","setTableData","setFilters","user","useAuthContext","_yield$customAxios$ge","data","get","facilityID","useEffect","dateError","getTime","dataFiltered","inputData","comparator","stabilizedThis","el","sort","a","b","order","toLowerCase","indexOf","fTimestamp","createdAt","applyFilter","getComparator","orderBy","dataInPage","slice","rowsPerPage","denseHeight","dense","notFound","length","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleResetFilters","deleteRows","includes","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleViewRow","details","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","TableHeadCustom","headLabel","onSort","TableEmptyRows","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense"],"sourceRoot":""}