{"version":3,"file":"static/js/2970.9fa60496.chunk.js","mappings":"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","sources":["sections/invoice/earning.js","sections/invoice/transaction-analytic.js","sections/invoice/invoice-pdf.js","sections/invoice/invoice-table-toolbar.js","sections/invoice/invoice-table-filters-result.js","sections/invoice/transaction-table-row.js","sections/invoice/view/pending.js","sections/invoice/payout-request-table-row.js","sections/invoice/view/payout-request.js","sections/invoice/payout-history-table-row.js","sections/invoice/view/payout-history.js","sections/invoice/view/transaction.js","sections/invoice/invoice-new-edit-details.js","sections/invoice/invoice-new-edit-address.js","sections/invoice/invoice-new-edit-status-date.js","sections/invoice/invoice-new-edit-form.js","sections/invoice/view/appointment-edit-view.js","sections/invoice/view/appointment-create-view.js","sections/invoice/invoice-details.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  TextField,\r\n  Typography,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  MenuItem,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport EarningIllustration from \"src/assets/images/earning.jpg\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useSnackbar } from \"src/components/snackbar\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\n\r\nexport default function EarningApproval({ openDialog, setOpenDialog, data }) {\r\n  const handleCloseDialog = () => setOpenDialog(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { user } = useAuthContext(AuthContext);\r\n  const { facilityID } = user || \"\";\r\n\r\n  const handlePayoutRequest = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      await customAxios.post(\"/transactions/labs/payout\", {\r\n        facilityID,\r\n      });\r\n      enqueueSnackbar(\"Payout request successful\");\r\n      handleCloseDialog();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  return (\r\n    <Dialog open={!!openDialog} onClose={handleCloseDialog}>\r\n      <DialogContent\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          width: { xs: \"100%\", sm: \"425px\" },\r\n          pb: 5,\r\n        }}\r\n      >\r\n        <Box\r\n          component=\"img\"\r\n          src={EarningIllustration}\r\n          alt=\"mission\"\r\n          sx={{\r\n            mx: \"auto\",\r\n            my: \"15px\",\r\n            width: { xs: \"100%\", sm: 250 },\r\n            height: { xs: \"100%\", sm: 250 },\r\n            borderRadius: \"50%\",\r\n          }}\r\n        />\r\n\r\n        <Typography variant=\"body1\" textAlign=\"center\">\r\n          Net Amount (after 20% deduction) <br />\r\n          <span style={{ fontWeight: 700, fontSize: \"18px\" }}>\r\n            GH₵ {data?.amount}\r\n          </span>\r\n        </Typography>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <LoadingButton\r\n          loading={isSubmitting}\r\n          onClick={handlePayoutRequest}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Proceed\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nEarningApproval.propTypes = {\r\n  setOpenDialog: PropTypes.func,\r\n  openDialog: PropTypes.bool,\r\n  data: PropTypes.object,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n// utils\r\nimport { fShortenNumber, fCurrency } from \"src/utils/format-number\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport Image from \"src/components/image\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TransactionAnalytic({\r\n  title,\r\n  total,\r\n  icon,\r\n  color,\r\n  percent,\r\n  price,\r\n}) {\r\n  return (\r\n    <Stack\r\n      spacing={2.5}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{ width: 1, minWidth: 200 }}\r\n    >\r\n      <Stack\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        sx={{ position: \"relative\" }}\r\n      >\r\n        {/* <Iconify icon={icon} width={32} sx={{ color, position: \"absolute\" }} /> */}\r\n        {/* <Box variant=\"img\" src={icon} height={25} width={25} /> */}\r\n        <Image\r\n          alt={title}\r\n          src={icon}\r\n          height={45}\r\n          width={45}\r\n          // sx={{ borderRadius: 2 }}\r\n        />\r\n\r\n        {/* <CircularProgress\r\n          variant=\"determinate\"\r\n          value={percent}\r\n          size={56}\r\n          thickness={2}\r\n          // sx={{ color, opacity: 0.48 }}\r\n          sx={{\r\n            top: 0,\r\n            left: 0,\r\n            opacity: 0.48,\r\n            position: \"absolute\",\r\n            color,\r\n          }}\r\n        /> */}\r\n\r\n        {/* <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={56}\r\n          thickness={3}\r\n          sx={{\r\n            top: 0,\r\n            left: 0,\r\n            opacity: 0.48,\r\n            position: \"absolute\",\r\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\r\n          }}\r\n        /> */}\r\n      </Stack>\r\n\r\n      <Stack spacing={0.5}>\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n\r\n        <Box\r\n          component=\"span\"\r\n          sx={{ color: \"text.disabled\", typography: \"body2\" }}\r\n        >\r\n          {fShortenNumber(total)} lab orders\r\n        </Box>\r\n\r\n        <Typography variant=\"subtitle2\">GH₵ {fCurrency(price) || 0}</Typography>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTransactionAnalytic.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  percent: PropTypes.number,\r\n  price: PropTypes.number,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useMemo } from \"react\";\r\nimport {\r\n  Page,\r\n  View,\r\n  Text,\r\n  Image,\r\n  Document,\r\n  Font,\r\n  StyleSheet,\r\n} from \"@react-pdf/renderer\";\r\n// utils\r\nimport { fDate } from \"src/utils/format-time\";\r\nimport { fCurrency } from \"src/utils/format-number\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFont.register({\r\n  family: \"Roboto\",\r\n  fonts: [\r\n    { src: \"/fonts/Roboto-Regular.ttf\" },\r\n    { src: \"/fonts/Roboto-Bold.ttf\" },\r\n  ],\r\n});\r\n\r\nconst useStyles = () =>\r\n  useMemo(\r\n    () =>\r\n      StyleSheet.create({\r\n        col4: { width: \"25%\" },\r\n        col8: { width: \"75%\" },\r\n        col6: { width: \"50%\" },\r\n        mb4: { marginBottom: 4 },\r\n        mb8: { marginBottom: 8 },\r\n        mb40: { marginBottom: 40 },\r\n        h3: { fontSize: 16, fontWeight: 700 },\r\n        h4: { fontSize: 13, fontWeight: 700 },\r\n        body1: { fontSize: 10 },\r\n        body2: { fontSize: 9 },\r\n        subtitle1: { fontSize: 10, fontWeight: 700 },\r\n        subtitle2: { fontSize: 9, fontWeight: 700 },\r\n        alignRight: { textAlign: \"right\" },\r\n        page: {\r\n          fontSize: 9,\r\n          lineHeight: 1.6,\r\n          fontFamily: \"Roboto\",\r\n          backgroundColor: \"#FFFFFF\",\r\n          textTransform: \"capitalize\",\r\n          padding: \"40px 24px 120px 24px\",\r\n        },\r\n        footer: {\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          padding: 24,\r\n          margin: \"auto\",\r\n          borderTopWidth: 1,\r\n          borderStyle: \"solid\",\r\n          position: \"absolute\",\r\n          borderColor: \"#DFE3E8\",\r\n        },\r\n        gridContainer: {\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        },\r\n        table: {\r\n          display: \"flex\",\r\n          width: \"auto\",\r\n        },\r\n        tableRow: {\r\n          padding: \"8px 0\",\r\n          flexDirection: \"row\",\r\n          borderBottomWidth: 1,\r\n          borderStyle: \"solid\",\r\n          borderColor: \"#DFE3E8\",\r\n        },\r\n        noBorder: {\r\n          paddingTop: 8,\r\n          paddingBottom: 0,\r\n          borderBottomWidth: 0,\r\n        },\r\n        tableCell_1: {\r\n          width: \"5%\",\r\n        },\r\n        tableCell_2: {\r\n          width: \"50%\",\r\n          paddingRight: 16,\r\n        },\r\n        tableCell_3: {\r\n          width: \"15%\",\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoicePDF({ invoice, currentStatus }) {\r\n  const {\r\n    items,\r\n    taxes,\r\n    dueDate,\r\n    discount,\r\n    shipping,\r\n    invoiceTo,\r\n    createDate,\r\n    totalAmount,\r\n    invoiceFrom,\r\n    invoiceNumber,\r\n    subTotal,\r\n  } = invoice;\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <Image\r\n            source=\"../../components/logo/logo-icon.png\"\r\n            style={{ width: 48, height: 48 }}\r\n          />\r\n\r\n          <View style={{ alignItems: \"flex-end\", flexDirection: \"column\" }}>\r\n            <Text style={styles.h3}>{currentStatus}</Text>\r\n            <Text> {invoiceNumber} </Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice from</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.name}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.phoneNumber}</Text>\r\n          </View>\r\n\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice to</Text>\r\n            <Text style={styles.body2}>{invoiceTo.name}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.phoneNumber}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Date create</Text>\r\n            <Text style={styles.body2}>{fDate(createDate)}</Text>\r\n          </View>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Due date</Text>\r\n            <Text style={styles.body2}>{fDate(dueDate)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={[styles.subtitle1, styles.mb8]}>Invoice Details</Text>\r\n\r\n        <View style={styles.table}>\r\n          <View>\r\n            <View style={styles.tableRow}>\r\n              <View style={styles.tableCell_1}>\r\n                <Text style={styles.subtitle2}>#</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_2}>\r\n                <Text style={styles.subtitle2}>Description</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Qty</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Unit price</Text>\r\n              </View>\r\n\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.subtitle2}>Total</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View>\r\n            {items.map((item, index) => (\r\n              <View style={styles.tableRow} key={item.id}>\r\n                <View style={styles.tableCell_1}>\r\n                  <Text>{index + 1}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_2}>\r\n                  <Text style={styles.subtitle2}>{item.title}</Text>\r\n                  <Text>{item.description}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.quantity}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.price}</Text>\r\n                </View>\r\n\r\n                <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                  <Text>{fCurrency(item.price * item.quantity)}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Subtotal</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(subTotal)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Shipping</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-shipping)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Discount</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-discount)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Taxes</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(taxes)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.h4}>Total</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.h4}>{fCurrency(totalAmount)}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.footer]} fixed>\r\n          <View style={styles.col8}>\r\n            <Text style={styles.subtitle2}>NOTES</Text>\r\n            <Text>\r\n              We appreciate your business. Should you need us to add VAT or\r\n              extra notes let us know!\r\n            </Text>\r\n          </View>\r\n          <View style={[styles.col4, styles.alignRight]}>\r\n            <Text style={styles.subtitle2}>Have a Question?</Text>\r\n            <Text>support@abcapp.com</Text>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n}\r\n\r\nInvoicePDF.propTypes = {\r\n  currentStatus: PropTypes.string,\r\n  invoice: PropTypes.object,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useCallback } from \"react\";\r\n// @mui\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\nimport { PDFDownloadLink, PDFViewer } from \"@react-pdf/renderer\";\r\nimport InvoicePDF from \"./invoice-pdf\";\r\nimport { _invoices } from \"src/_mock\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  dateError,\r\n  serviceOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters(\"name\", event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterService = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        \"service\",\r\n        typeof event.target.value === \"string\"\r\n          ? event.target.value.split(\",\")\r\n          : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"startDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"endDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const view = useBoolean();\r\n\r\n  const currentInvoice = _invoices.filter(\r\n    (invoice) => invoice.id === \"e99f09a7-dd88-49d5-b1c8-1daf80c2d7b20\"\r\n  )[0];\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: \"flex-end\", md: \"center\" }}\r\n        direction={{\r\n          xs: \"column\",\r\n          md: \"row\",\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        {/* <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 180 },\r\n          }}\r\n        >\r\n          <InputLabel>Service</InputLabel>\r\n\r\n          <Select\r\n            multiple\r\n            value={filters.service}\r\n            onChange={handleFilterService}\r\n            input={<OutlinedInput label=\"Service\" />}\r\n            renderValue={(selected) =>\r\n              selected.map((value) => value).join(\", \")\r\n            }\r\n            sx={{ textTransform: \"capitalize\" }}\r\n          >\r\n            {serviceOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox\r\n                  disableRipple\r\n                  size=\"small\"\r\n                  checked={filters.service.includes(option)}\r\n                />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl> */}\r\n\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        />\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          flexGrow={1}\r\n          sx={{ width: 1 }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search customer or invoice number...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify\r\n                    icon=\"eva:search-fill\"\r\n                    sx={{ color: \"text.disabled\" }}\r\n                  />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: \"auto\" }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n            view.onTrue();\r\n          }}\r\n        >\r\n          <Iconify icon=\"carbon:view-filled\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <PDFDownloadLink\r\n          document={\r\n            <InvoicePDF invoice={currentInvoice} currentStatus=\"paid\" />\r\n          }\r\n          fileName={currentInvoice.invoiceNumber}\r\n          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              popover.onClose();\r\n            }}\r\n          >\r\n            <Iconify icon=\"vscode-icons:file-type-pdf2\" />\r\n            Download PDF\r\n          </MenuItem>\r\n        </PDFDownloadLink>\r\n      </CustomPopover>\r\n\r\n      <Dialog fullScreen open={view.value}>\r\n        <Box sx={{ height: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n          <DialogActions\r\n            sx={{\r\n              p: 1.5,\r\n            }}\r\n          >\r\n            <Button color=\"inherit\" variant=\"contained\" onClick={view.onFalse}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n\r\n          <Box sx={{ flexGrow: 1, height: 1, overflow: \"hidden\" }}>\r\n            <PDFViewer width=\"100%\" height=\"100%\" style={{ border: \"none\" }}>\r\n              <InvoicePDF invoice={currentInvoice} currentStatus=\"paid\" />\r\n            </PDFViewer>\r\n          </Box>\r\n        </Box>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  serviceOptions: PropTypes.array,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport { shortDateLabel } from \"src/components/custom-date-range-picker\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveService = (inputValue) => {\r\n    const newValue = filters.service.filter((item) => item !== inputValue);\r\n    onFilters(\"service\", newValue);\r\n  };\r\n\r\n  const handleRemoveStatus = () => {\r\n    onFilters(\"status\", \"all\");\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters(\"startDate\", null);\r\n    onFilters(\"endDate\", null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: \"body2\" }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: \"text.secondary\", ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack\r\n        flexGrow={1}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        flexWrap=\"wrap\"\r\n        alignItems=\"center\"\r\n      >\r\n        {!!filters.service.length && (\r\n          <Block label=\"Service:\">\r\n            {filters.service.map((item) => (\r\n              <Chip\r\n                key={item}\r\n                label={item}\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveService(item)}\r\n              />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {filters.status !== \"all\" && (\r\n          <Block label=\"Status:\">\r\n            <Chip\r\n              size=\"small\"\r\n              label={filters.status}\r\n              onDelete={handleRemoveStatus}\r\n            />\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: \"hidden\",\r\n        borderStyle: \"dashed\",\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: \"subtitle2\" }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { format } from \"date-fns\";\r\n// @mui\r\nimport Link from \"@mui/material/Link\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fCurrency } from \"src/utils/format-number\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TransactionTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n}) {\r\n  const {\r\n    patientName,\r\n    appointmentDate,\r\n    orderType,\r\n    price,\r\n    userID,\r\n    feeAmount,\r\n    stringDate,\r\n    // status,\r\n    // invoiceTo,\r\n    // totalAmount,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell> */}\r\n\r\n        <TableCell sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Avatar alt={patientName} sx={{ mr: 2 }}>\r\n            {patientName.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {patientName}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: \"text.disabled\", cursor: \"pointer\" }}\r\n              >\r\n                {userID}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(stringDate), \"dd MMM yyyy\")}\r\n            // secondary={format(new Date(createDate), \"p\")}\r\n            primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: \"span\",\r\n              typography: \"caption\",\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        {/* <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(dueDate), \"dd MMM yyyy\")}\r\n            secondary={format(new Date(dueDate), \"p\")}\r\n            primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: \"span\",\r\n              typography: \"caption\",\r\n            }}\r\n          />\r\n        </TableCell> */}\r\n\r\n        <TableCell sx={{ textTransform: \"capitalize\" }}>{orderType}</TableCell>\r\n        <TableCell>{fCurrency(feeAmount)}</TableCell>\r\n\r\n        {/* <TableCell align=\"center\">{sent}</TableCell> */}\r\n\r\n        {/* <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === \"paid\" && \"success\") ||\r\n              (status === \"pending\" && \"warning\") ||\r\n              (status === \"overdue\" && \"error\") ||\r\n              \"default\"\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell> */}\r\n\r\n        {/* <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton\r\n            color={popover.open ? \"inherit\" : \"default\"}\r\n            onClick={popover.onOpen}\r\n          >\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell> */}\r\n      </TableRow>\r\n\r\n      {/* <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:pen-bold\" />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: \"dashed\" }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: \"error.main\" }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover> */}\r\n\r\n      {/* <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nTransactionTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import sumBy from \"lodash/sumBy\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n// @mui\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from \"src/_mock\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport TranscationAnalytic from \"../transaction-analytic\";\r\nimport InvoiceTableToolbar from \"../invoice-table-toolbar\";\r\nimport InvoiceTableFiltersResult from \"../invoice-table-filters-result\";\r\nimport TransactionTableRow from \"../transaction-table-row\";\r\nimport FilteredTransactionView from \"./transaction-filtered\";\r\nimport { Box, Dialog, DialogActions } from \"@mui/material\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\nimport NetEarning from \"src/assets/images/net.png\";\r\nimport TotalEarning from \"src/assets/images/total.png\";\r\nimport Deduction from \"src/assets/images/deduction.png\";\r\nimport EarningApproval from \"../earning\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"patient\", label: \"Patient Name\" },\r\n  { id: \"createDate\", label: \"Date\" },\r\n  { id: \"type\", label: \"Order Type\" },\r\n  // { id: \"dueDate\", label: \"Due\" },\r\n  { id: \"price\", label: \"Amount (GH₵)\" },\r\n  // { id: \"sent\", label: \"Sent\", align: \"center\" },\r\n  // { id: \"status\", label: \"Status\" },\r\n  // { id: \"\" },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: \"\",\r\n  service: [],\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Pending({ data, extraData }) {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: \"createDate\" });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { user } = useAuthContext(AuthContext);\r\n  const { providerID } = user;\r\n\r\n  const [tableData, setTableData] = useState(data);\r\n  const [otherData, setOtherData] = useState(extraData);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  // const [openEarningPopup, setOpenEarningPopup] = useState(false);\r\n\r\n  const { startDate, endDate } = filters;\r\n  const openDialog = startDate !== null && endDate !== null;\r\n\r\n  // const fetchData = async () => {\r\n  //   const { data: resData } = await customAxios.get(\r\n  //     `/transactions/appointments/pending/${providerID}`\r\n  //   );\r\n  //   console.log(resData);\r\n  //   const newData = resData.data.map((data) => {\r\n  //     return { ...data, price: Number(data.price) };\r\n  //   });\r\n  //   setOtherData(resData);\r\n  //   setTableData(newData);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n    setOtherData(extraData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [providerID]);\r\n\r\n  const handleClose = () => {\r\n    setFilters((prev) => {\r\n      return { ...prev, startDate: null, endDate: null };\r\n    });\r\n  };\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) =>\r\n    tableData.filter((item) => item.status === status).length;\r\n\r\n  const TABS = [\r\n    { value: \"all\", label: \"All\", color: \"default\", count: tableData.length },\r\n    {\r\n      value: \"paid\",\r\n      label: \"Paid\",\r\n      color: \"success\",\r\n      count: getInvoiceLength(\"paid\"),\r\n    },\r\n    {\r\n      value: \"pending\",\r\n      label: \"Pending\",\r\n      color: \"warning\",\r\n      count: getInvoiceLength(\"pending\"),\r\n    },\r\n    {\r\n      value: \"overdue\",\r\n      label: \"Overdue\",\r\n      color: \"error\",\r\n      count: getInvoiceLength(\"overdue\"),\r\n    },\r\n    {\r\n      value: \"draft\",\r\n      label: \"Draft\",\r\n      color: \"default\",\r\n      count: getInvoiceLength(\"draft\"),\r\n    },\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  flexItem\r\n                  sx={{ borderStyle: \"dashed\" }}\r\n                />\r\n              }\r\n              sx={{ py: 2 }}\r\n            >\r\n              <TranscationAnalytic\r\n                title=\"Gross Earnings\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={otherData?.total}\r\n                icon={TotalEarning}\r\n                color={theme.palette.primary.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Total Deduction\"\r\n                // total={dataFiltered.length}\r\n                percent={20}\r\n                price={otherData?.charges}\r\n                icon={Deduction}\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Net Earnings\"\r\n                // total={getInvoiceLength(\"paid\")}\r\n                percent={80}\r\n                price={otherData?.amount}\r\n                icon={NetEarning}\r\n                color={theme.palette.success.main}\r\n              />\r\n\r\n              {/* <TranscationAnalytic\r\n                title=\"Overdue\"\r\n                total={getInvoiceLength(\"overdue\")}\r\n                percent={getPercentByStatus(\"overdue\")}\r\n                price={getTotalAmount(\"overdue\")}\r\n                icon=\"solar:bell-bing-bold-duotone\"\r\n                color={theme.palette.error.main}\r\n              /> */}\r\n\r\n              {/* <TranscationAnalytic\r\n                title=\"Draft\"\r\n                total={getInvoiceLength(\"draft\")}\r\n                percent={getPercentByStatus(\"draft\")}\r\n                price={getTotalAmount(\"draft\")}\r\n                icon=\"solar:file-corrupted-bold-duotone\"\r\n                color={theme.palette.text.secondary}\r\n              /> */}\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: `inset 0 -2px 0 0 ${alpha(\r\n                theme.palette.grey[500],\r\n                0.08\r\n              )}`,\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={tab.label}\r\n                iconPosition=\"end\"\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={tab.color}\r\n                  >\r\n                    {tab.count}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            dateError={dateError}\r\n            serviceOptions={INVOICE_SERVICE_OPTIONS.map(\r\n              (option) => option.name\r\n            )}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 800 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <TransactionTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { name, status, service, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (invoice) =>\r\n        invoice.invoiceNumber.toLowerCase().indexOf(name.toLowerCase()) !==\r\n          -1 ||\r\n        invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((invoice) => invoice.status === status);\r\n  }\r\n\r\n  if (service.length) {\r\n    inputData = inputData.filter((invoice) =>\r\n      invoice.items.some((filterItem) => service.includes(filterItem.service))\r\n    );\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (transaction) =>\r\n          fTimestamp(transaction.appointmentDate) >= fTimestamp(startDate) &&\r\n          fTimestamp(transaction.appointmentDate) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { format } from \"date-fns\";\r\n// @mui\r\nimport Link from \"@mui/material/Link\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fCurrency } from \"src/utils/format-number\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PayoutRequestTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n}) {\r\n  const {\r\n    type,\r\n    appointmentDate,\r\n    total,\r\n    charges,\r\n    amount,\r\n    status,\r\n    requestDate,\r\n    // status,\r\n    // invoiceTo,\r\n    // totalAmount,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell> */}\r\n\r\n        <TableCell sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {/* <Avatar alt={patientName} sx={{ mr: 2 }}>\r\n            {patientName.charAt(0).toUpperCase()}\r\n          </Avatar> */}\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography\r\n                variant=\"body2\"\r\n                noWrap\r\n                sx={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {type}\r\n              </Typography>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(requestDate), \"dd MMM yyyy\")}\r\n            // secondary={format(new Date(createDate), \"p\")}\r\n            primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: \"span\",\r\n              typography: \"caption\",\r\n            }}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{fCurrency(total)}</TableCell>\r\n        <TableCell>{fCurrency(charges)}</TableCell>\r\n        <TableCell>{fCurrency(amount)}</TableCell>\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === \"approved\" && \"success\") ||\r\n              (status === \"pending\" && \"warning\") ||\r\n              (status === \"cancelled\" && \"error\") ||\r\n              \"default\"\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nPayoutRequestTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import sumBy from \"lodash/sumBy\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n// @mui\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from \"src/_mock\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport TranscationAnalytic from \"../transaction-analytic\";\r\nimport InvoiceTableToolbar from \"../invoice-table-toolbar\";\r\nimport InvoiceTableFiltersResult from \"../invoice-table-filters-result\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\nimport NetEarning from \"src/assets/images/net.png\";\r\nimport TotalEarning from \"src/assets/images/total.png\";\r\nimport Deduction from \"src/assets/images/deduction.png\";\r\nimport PayoutRequestTableRow from \"../payout-request-table-row\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"service\", label: \"Service Type\" },\r\n  { id: \"createDate\", label: \"Request Date\" },\r\n  { id: \"gross\", label: \"Gross Earning (GH₵)\" },\r\n  // { id: \"dueDate\", label: \"Due\" },\r\n  { id: \"charge\", label: \"Charge (GH₵)\" },\r\n  { id: \"net\", label: \"Net Earning (GH₵)\" },\r\n  { id: \"status\", label: \"Status\" },\r\n  // { id: \"sent\", label: \"Sent\", align: \"center\" },\r\n  // { id: \"status\", label: \"Status\" },\r\n  // { id: \"\" },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: \"\",\r\n  service: [],\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PayoutRequest() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: \"createDate\" });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { user } = useAuthContext(AuthContext);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [otherData, setOtherData] = useState({});\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  // const [openEarningPopup, setOpenEarningPopup] = useState(false);\r\n\r\n  const { startDate, endDate } = filters;\r\n  const openDialog = startDate !== null && endDate !== null;\r\n\r\n  const fetchData = async () => {\r\n    const { data: resData } = await customAxios.get(\r\n      `/transactions/labs/requested/${user?.facilityID}`\r\n    );\r\n    setTableData(resData?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user?.providerID]);\r\n\r\n  const handleClose = () => {\r\n    setFilters((prev) => {\r\n      return { ...prev, startDate: null, endDate: null };\r\n    });\r\n  };\r\n  const newData = tableData.map((data) => {\r\n    return {\r\n      ...data,\r\n      total: Number(data.total),\r\n      charges: Number(data.charges),\r\n      amount: Number(data.amount),\r\n    };\r\n  });\r\n  console.log(newData);\r\n  const getGross = sumBy(newData, \"total\");\r\n  const getCharges = sumBy(newData, \"charges\");\r\n  const getNet = sumBy(newData, \"amount\");\r\n\r\n  console.log(getGross, getCharges, getNet);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) =>\r\n    tableData.filter((item) => item.status === status).length;\r\n\r\n  const TABS = [\r\n    { value: \"all\", label: \"All\", color: \"default\", count: tableData.length },\r\n    {\r\n      value: \"paid\",\r\n      label: \"Paid\",\r\n      color: \"success\",\r\n      count: getInvoiceLength(\"paid\"),\r\n    },\r\n    {\r\n      value: \"pending\",\r\n      label: \"Pending\",\r\n      color: \"warning\",\r\n      count: getInvoiceLength(\"pending\"),\r\n    },\r\n    {\r\n      value: \"overdue\",\r\n      label: \"Overdue\",\r\n      color: \"error\",\r\n      count: getInvoiceLength(\"overdue\"),\r\n    },\r\n    {\r\n      value: \"draft\",\r\n      label: \"Draft\",\r\n      color: \"default\",\r\n      count: getInvoiceLength(\"draft\"),\r\n    },\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  flexItem\r\n                  sx={{ borderStyle: \"dashed\" }}\r\n                />\r\n              }\r\n              sx={{ py: 2 }}\r\n            >\r\n              <TranscationAnalytic\r\n                title=\"Gross Earnings\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={getGross}\r\n                icon={TotalEarning}\r\n                color={theme.palette.primary.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Total Deduction\"\r\n                // total={dataFiltered.length}\r\n                percent={20}\r\n                price={getCharges}\r\n                icon={Deduction}\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Net Earnings\"\r\n                // total={getInvoiceLength(\"paid\")}\r\n                percent={80}\r\n                price={getNet}\r\n                icon={NetEarning}\r\n                color={theme.palette.success.main}\r\n              />\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: `inset 0 -2px 0 0 ${alpha(\r\n                theme.palette.grey[500],\r\n                0.08\r\n              )}`,\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={tab.label}\r\n                iconPosition=\"end\"\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={tab.color}\r\n                  >\r\n                    {tab.count}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            dateError={dateError}\r\n            serviceOptions={INVOICE_SERVICE_OPTIONS.map(\r\n              (option) => option.name\r\n            )}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 800 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <PayoutRequestTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { name, status, service, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (invoice) =>\r\n        invoice.invoiceNumber.toLowerCase().indexOf(name.toLowerCase()) !==\r\n          -1 ||\r\n        invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((invoice) => invoice.status === status);\r\n  }\r\n\r\n  if (service.length) {\r\n    inputData = inputData.filter((invoice) =>\r\n      invoice.items.some((filterItem) => service.includes(filterItem.service))\r\n    );\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (transaction) =>\r\n          fTimestamp(transaction.appointmentDate) >= fTimestamp(startDate) &&\r\n          fTimestamp(transaction.appointmentDate) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { format } from \"date-fns\";\r\n// @mui\r\nimport Link from \"@mui/material/Link\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fCurrency } from \"src/utils/format-number\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PayoutHistoryTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onEditRow,\r\n  onDeleteRow,\r\n}) {\r\n  const {\r\n    type,\r\n    appointmentDate,\r\n    total,\r\n    charges,\r\n    amount,\r\n    status,\r\n    requestDate,\r\n    // status,\r\n    // invoiceTo,\r\n    // totalAmount,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell> */}\r\n\r\n        <TableCell sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {/* <Avatar alt={patientName} sx={{ mr: 2 }}>\r\n            {patientName.charAt(0).toUpperCase()}\r\n          </Avatar> */}\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography\r\n                variant=\"body2\"\r\n                noWrap\r\n                sx={{ textTransform: \"capitalize\" }}\r\n              >\r\n                {type}\r\n              </Typography>\r\n            }\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ListItemText\r\n            primary={format(new Date(requestDate), \"dd MMM yyyy\")}\r\n            // appointmentDate\r\n            // secondary={format(new Date(createDate), \"p\")}\r\n            primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: \"span\",\r\n              typography: \"caption\",\r\n            }}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{fCurrency(total)}</TableCell>\r\n        <TableCell>{fCurrency(charges)}</TableCell>\r\n        <TableCell>{fCurrency(amount)}</TableCell>\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === \"approved\" && \"success\") ||\r\n              (status === \"pending\" && \"warning\") ||\r\n              (status === \"cancelled\" && \"error\") ||\r\n              \"default\"\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nPayoutHistoryTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import sumBy from \"lodash/sumBy\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n// @mui\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from \"src/_mock\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport TranscationAnalytic from \"../transaction-analytic\";\r\nimport InvoiceTableToolbar from \"../invoice-table-toolbar\";\r\nimport InvoiceTableFiltersResult from \"../invoice-table-filters-result\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\nimport NetEarning from \"src/assets/images/net.png\";\r\nimport TotalEarning from \"src/assets/images/total.png\";\r\nimport Deduction from \"src/assets/images/deduction.png\";\r\nimport PayoutRequestTableRow from \"../payout-request-table-row\";\r\nimport PayoutHistoryTableRow from \"../payout-history-table-row\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"service\", label: \"Service Type\" },\r\n  { id: \"createDate\", label: \"Request Date\" },\r\n  { id: \"gross\", label: \"Gross Earning (GH₵)\" },\r\n  // { id: \"dueDate\", label: \"Due\" },\r\n  { id: \"charge\", label: \"Charge (GH₵)\" },\r\n  { id: \"net\", label: \"Net Earning (GH₵)\" },\r\n  { id: \"status\", label: \"Status\" },\r\n  // { id: \"sent\", label: \"Sent\", align: \"center\" },\r\n  // { id: \"status\", label: \"Status\" },\r\n  // { id: \"\" },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: \"\",\r\n  service: [],\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PayoutHistory() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: \"createDate\" });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const { user } = useAuthContext(AuthContext);\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [otherData, setOtherData] = useState({});\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  // const [openEarningPopup, setOpenEarningPopup] = useState(false);\r\n\r\n  const { startDate, endDate } = filters;\r\n  const openDialog = startDate !== null && endDate !== null;\r\n\r\n  const fetchData = async () => {\r\n    const { data: resData } = await customAxios.get(\r\n      // `/transactions/appointments/requested/${providerID}`\r\n      `/transactions/labs/history/${user?.facilityID}`\r\n    );\r\n    setTableData(resData?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user?.providerID]);\r\n\r\n  const handleClose = () => {\r\n    setFilters((prev) => {\r\n      return { ...prev, startDate: null, endDate: null };\r\n    });\r\n  };\r\n  const newData = tableData.map((data) => {\r\n    return {\r\n      ...data,\r\n      total: Number(data.total),\r\n      charges: Number(data.charges),\r\n      amount: Number(data.amount),\r\n    };\r\n  });\r\n  console.log(newData);\r\n  const getGross = sumBy(newData, \"total\");\r\n  const getCharges = sumBy(newData, \"charges\");\r\n  const getNet = sumBy(newData, \"amount\");\r\n\r\n  console.log(getGross, getCharges, getNet);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (status) =>\r\n    tableData.filter((item) => item.status === status).length;\r\n\r\n  const TABS = [\r\n    { value: \"all\", label: \"All\", color: \"default\", count: tableData.length },\r\n    {\r\n      value: \"paid\",\r\n      label: \"Paid\",\r\n      color: \"success\",\r\n      count: getInvoiceLength(\"paid\"),\r\n    },\r\n    {\r\n      value: \"pending\",\r\n      label: \"Pending\",\r\n      color: \"warning\",\r\n      count: getInvoiceLength(\"pending\"),\r\n    },\r\n    {\r\n      value: \"overdue\",\r\n      label: \"Overdue\",\r\n      color: \"error\",\r\n      count: getInvoiceLength(\"overdue\"),\r\n    },\r\n    {\r\n      value: \"draft\",\r\n      label: \"Draft\",\r\n      color: \"default\",\r\n      count: getInvoiceLength(\"draft\"),\r\n    },\r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.edit(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.invoice.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  flexItem\r\n                  sx={{ borderStyle: \"dashed\" }}\r\n                />\r\n              }\r\n              sx={{ py: 2 }}\r\n            >\r\n              <TranscationAnalytic\r\n                title=\"Gross Earnings\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={getGross}\r\n                icon={TotalEarning}\r\n                color={theme.palette.primary.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Total Deduction\"\r\n                // total={dataFiltered.length}\r\n                percent={20}\r\n                price={getCharges}\r\n                icon={Deduction}\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              <TranscationAnalytic\r\n                title=\"Net Earnings\"\r\n                // total={getInvoiceLength(\"paid\")}\r\n                percent={80}\r\n                price={getNet}\r\n                icon={NetEarning}\r\n                color={theme.palette.success.main}\r\n              />\r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: `inset 0 -2px 0 0 ${alpha(\r\n                theme.palette.grey[500],\r\n                0.08\r\n              )}`,\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={tab.label}\r\n                iconPosition=\"end\"\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={tab.color}\r\n                  >\r\n                    {tab.count}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            dateError={dateError}\r\n            serviceOptions={INVOICE_SERVICE_OPTIONS.map(\r\n              (option) => option.name\r\n            )}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 800 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <PayoutHistoryTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { name, status, service, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (invoice) =>\r\n        invoice.invoiceNumber.toLowerCase().indexOf(name.toLowerCase()) !==\r\n          -1 ||\r\n        invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((invoice) => invoice.status === status);\r\n  }\r\n\r\n  if (service.length) {\r\n    inputData = inputData.filter((invoice) =>\r\n      invoice.items.some((filterItem) => service.includes(filterItem.service))\r\n    );\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (transaction) =>\r\n          fTimestamp(transaction.appointmentDate) >= fTimestamp(startDate) &&\r\n          fTimestamp(transaction.appointmentDate) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n// @mui\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\n//\r\n\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\n\r\nimport EarningApproval from \"../earning\";\r\nimport Pending from \"./pending\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { Tab, Tabs } from \"@mui/material\";\r\nimport PayoutRequest from \"./payout-request\";\r\nimport PayoutHistory from \"./payout-history\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABS = [\r\n  {\r\n    value: \"pending\",\r\n    label: \"Pending Transaction\",\r\n    icon: <Iconify icon=\"mdi:receipt-text-pending\" width={24} />,\r\n  },\r\n  {\r\n    value: \"request\",\r\n    label: \"Payout Request\",\r\n    icon: <Iconify icon=\"material-symbols:request-page-rounded\" width={24} />,\r\n  },\r\n  {\r\n    value: \"history\",\r\n    label: \"Payout History\",\r\n    icon: <Iconify icon=\"uis:history-alt\" width={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TransactionListView() {\r\n  const settings = useSettingsContext();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [otherData, setOtherData] = useState({});\r\n\r\n  // tabs\r\n\r\n  const [currentTab, setCurrentTab] = useState(\"pending\");\r\n\r\n  const handleChangeTab = useCallback((event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }, []);\r\n\r\n  const [openEarningPopup, setOpenEarningPopup] = useState(false);\r\n  const { user } = useAuthContext(AuthContext);\r\n  const { facilityID } = user;\r\n\r\n  const fetchData = async () => {\r\n    const { data: resData } = await customAxios.get(\r\n      `/transactions/labs/pending/${facilityID}`\r\n    );\r\n    console.log(resData);\r\n    const newData = resData.data.map((data) => {\r\n      return { ...data, price: Number(data.price) };\r\n    });\r\n    setOtherData(resData);\r\n    setTableData(newData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [facilityID]);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Transactions\"\r\n          links={[\r\n            {\r\n              name: \"Dashboard\",\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: \"Transactions\",\r\n              // href: paths.dashboard.invoice.root,\r\n            },\r\n            // {\r\n            //   name: \"List\",\r\n            // },\r\n          ]}\r\n          action={\r\n            <Button\r\n              component={RouterLink}\r\n              onClick={() => setOpenEarningPopup(true)}\r\n              variant=\"contained\"\r\n              // startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            >\r\n              Request Payout\r\n            </Button>\r\n          }\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleChangeTab}\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          {TABS.map((tab) => (\r\n            <Tab\r\n              key={tab.value}\r\n              label={tab.label}\r\n              icon={tab.icon}\r\n              value={tab.value}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n\r\n        {currentTab === \"pending\" && (\r\n          <Pending data={tableData} extraData={otherData} />\r\n        )}\r\n        {currentTab === \"history\" && <PayoutHistory />}\r\n        {currentTab === \"request\" && <PayoutRequest />}\r\n      </Container>\r\n\r\n      <EarningApproval\r\n        openDialog={openEarningPopup}\r\n        setOpenDialog={setOpenEarningPopup}\r\n        data={otherData}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import sum from 'lodash/sum';\r\nimport { useCallback, useEffect } from 'react';\r\nimport { useFormContext, useFieldArray } from 'react-hook-form';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport { inputBaseClasses } from '@mui/material/InputBase';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from 'src/_mock';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditDetails() {\r\n  const { control, setValue, watch, resetField } = useFormContext();\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'items',\r\n  });\r\n\r\n  const values = watch();\r\n\r\n  const totalOnRow = values.items.map((item) => item.quantity * item.price);\r\n\r\n  const subTotal = sum(totalOnRow);\r\n\r\n  const totalAmount = subTotal - values.discount - values.shipping + values.taxes;\r\n\r\n  useEffect(() => {\r\n    setValue('totalAmount', totalAmount);\r\n  }, [setValue, totalAmount]);\r\n\r\n  const handleAdd = () => {\r\n    append({\r\n      title: '',\r\n      description: '',\r\n      service: '',\r\n      quantity: 1,\r\n      price: 0,\r\n      total: 0,\r\n    });\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    remove(index);\r\n  };\r\n\r\n  const handleClearService = useCallback(\r\n    (index) => {\r\n      resetField(`items[${index}].quantity`);\r\n      resetField(`items[${index}].price`);\r\n      resetField(`items[${index}].total`);\r\n    },\r\n    [resetField]\r\n  );\r\n\r\n  const handleSelectService = useCallback(\r\n    (index, option) => {\r\n      setValue(\r\n        `items[${index}].price`,\r\n        INVOICE_SERVICE_OPTIONS.find((service) => service.name === option)?.price\r\n      );\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const handleChangeQuantity = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].quantity`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const handleChangePrice = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].price`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const renderTotal = (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems=\"flex-end\"\r\n      sx={{ mt: 3, textAlign: 'right', typography: 'body2' }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Subtotal</Box>\r\n        <Box sx={{ width: 160, typography: 'subtitle2' }}>{fCurrency(subTotal) || '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Shipping</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(values.shipping && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {values.shipping ? `- ${fCurrency(values.shipping)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Discount</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(values.discount && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {values.discount ? `- ${fCurrency(values.discount)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Taxes</Box>\r\n        <Box sx={{ width: 160 }}>{values.taxes ? fCurrency(values.taxes) : '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\" sx={{ typography: 'subtitle1' }}>\r\n        <Box>Total</Box>\r\n        <Box sx={{ width: 160 }}>{fCurrency(totalAmount) || '-'}</Box>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\r\n        Details:\r\n      </Typography>\r\n\r\n      <Stack divider={<Divider flexItem sx={{ borderStyle: 'dashed' }} />} spacing={3}>\r\n        {fields.map((item, index) => (\r\n          <Stack key={item.id} alignItems=\"flex-end\" spacing={1.5}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ width: 1 }}>\r\n              <RHFTextField\r\n                size=\"small\"\r\n                name={`items[${index}].title`}\r\n                label=\"Title\"\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                name={`items[${index}].description`}\r\n                label=\"Description\"\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n\r\n              <RHFSelect\r\n                name={`items[${index}].service`}\r\n                size=\"small\"\r\n                label=\"Service\"\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  maxWidth: { md: 160 },\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  value=\"\"\r\n                  onClick={() => handleClearService(index)}\r\n                  sx={{ fontStyle: 'italic', color: 'text.secondary' }}\r\n                >\r\n                  None\r\n                </MenuItem>\r\n\r\n                <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n                {INVOICE_SERVICE_OPTIONS.map((service) => (\r\n                  <MenuItem\r\n                    key={service.id}\r\n                    value={service.name}\r\n                    onClick={() => handleSelectService(index, service.name)}\r\n                  >\r\n                    {service.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].quantity`}\r\n                label=\"Quantity\"\r\n                placeholder=\"0\"\r\n                onChange={(event) => handleChangeQuantity(event, index)}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].price`}\r\n                label=\"Price\"\r\n                placeholder=\"0.00\"\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>$</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                disabled\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].total`}\r\n                label=\"Total\"\r\n                placeholder=\"0.00\"\r\n                value={values.items[index].total === 0 ? '' : values.items[index].total.toFixed(2)}\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>$</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  maxWidth: { md: 104 },\r\n                  [`& .${inputBaseClasses.input}`]: {\r\n                    textAlign: { md: 'right' },\r\n                  },\r\n                }}\r\n              />\r\n            </Stack>\r\n\r\n            <Button\r\n              size=\"small\"\r\n              color=\"error\"\r\n              startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n              onClick={() => handleRemove(index)}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 3, borderStyle: 'dashed' }} />\r\n\r\n      <Stack\r\n        spacing={3}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n      >\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n          onClick={handleAdd}\r\n          sx={{ flexShrink: 0 }}\r\n        >\r\n          Add Item\r\n        </Button>\r\n\r\n        <Stack\r\n          spacing={2}\r\n          justifyContent=\"flex-end\"\r\n          direction={{ xs: 'column', md: 'row' }}\r\n          sx={{ width: 1 }}\r\n        >\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Shipping($)\"\r\n            name=\"shipping\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Discount($)\"\r\n            name=\"discount\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Taxes(%)\"\r\n            name=\"taxes\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {renderTotal}\r\n    </Box>\r\n  );\r\n}\r\n","import { useFormContext } from 'react-hook-form';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport { AddressListDialog } from '../address';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditAddress() {\r\n  const {\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const upMd = useResponsive('up', 'md');\r\n\r\n  const values = watch();\r\n\r\n  const { invoiceFrom, invoiceTo } = values;\r\n\r\n  const from = useBoolean();\r\n\r\n  const to = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={{ xs: 3, md: 5 }}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        divider={\r\n          <Divider\r\n            flexItem\r\n            orientation={upMd ? 'vertical' : 'horizontal'}\r\n            sx={{ borderStyle: 'dashed' }}\r\n          />\r\n        }\r\n        sx={{ p: 3 }}\r\n      >\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              From:\r\n            </Typography>\r\n\r\n            <IconButton onClick={from.onTrue}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\">{invoiceFrom.name}</Typography>\r\n            <Typography variant=\"body2\">{invoiceFrom.fullAddress}</Typography>\r\n            <Typography variant=\"body2\"> {invoiceFrom.phoneNumber}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              To:\r\n            </Typography>\r\n\r\n            <IconButton onClick={to.onTrue}>\r\n              <Iconify icon={invoiceTo ? 'solar:pen-bold' : 'mingcute:add-line'} />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {invoiceTo ? (\r\n            <Stack spacing={1}>\r\n              <Typography variant=\"subtitle2\">{invoiceTo.name}</Typography>\r\n              <Typography variant=\"body2\">{invoiceTo.fullAddress}</Typography>\r\n              <Typography variant=\"body2\"> {invoiceTo.phoneNumber}</Typography>\r\n            </Stack>\r\n          ) : (\r\n            <Typography typography=\"caption\" sx={{ color: 'error.main' }}>\r\n              {errors.invoiceTo?.message}\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={from.value}\r\n        onClose={from.onFalse}\r\n        selected={(selectedId) => invoiceFrom?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceFrom', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={to.value}\r\n        onClose={to.onFalse}\r\n        selected={(selectedId) => invoiceTo?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceTo', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useFormContext, Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n// components\r\nimport { RHFSelect, RHFTextField } from \"src/components/hook-form\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditStatusDate() {\r\n  const { control, watch } = useFormContext();\r\n\r\n  const values = watch();\r\n\r\n  return (\r\n    <Stack\r\n      spacing={2}\r\n      direction={{ xs: \"column\", sm: \"row\" }}\r\n      sx={{ p: 3, bgcolor: \"background.neutral\" }}\r\n    >\r\n      <RHFTextField\r\n        disabled\r\n        name=\"invoiceNumber\"\r\n        label=\"Invoice number\"\r\n        value={values.invoiceNumber}\r\n      />\r\n\r\n      <RHFSelect\r\n        fullWidth\r\n        name=\"status\"\r\n        label=\"Status\"\r\n        InputLabelProps={{ shrink: true }}\r\n        PaperPropsSx={{ textTransform: \"capitalize\" }}\r\n      >\r\n        {[\"paid\", \"pending\", \"overdue\", \"draft\"].map((option) => (\r\n          <MenuItem key={option} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </RHFSelect>\r\n\r\n      <Controller\r\n        name=\"createDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"Date create\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        name=\"dueDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"Due date\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport FormProvider from 'src/components/hook-form';\r\n//\r\nimport InvoiceNewEditDetails from './invoice-new-edit-details';\r\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\r\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditForm({ currentInvoice }) {\r\n  const router = useRouter();\r\n\r\n  const loadingSave = useBoolean();\r\n\r\n  const loadingSend = useBoolean();\r\n\r\n  const NewInvoiceSchema = Yup.object().shape({\r\n    invoiceTo: Yup.mixed().nullable().required('Invoice to is required'),\r\n    createDate: Yup.mixed().nullable().required('Create date is required'),\r\n    dueDate: Yup.mixed()\r\n      .required('Due date is required')\r\n      .test(\r\n        'date-min',\r\n        'Due date must be later than create date',\r\n        (value, { parent }) => value.getTime() > parent.createDate.getTime()\r\n      ),\r\n    // not required\r\n    taxes: Yup.number(),\r\n    status: Yup.string(),\r\n    discount: Yup.number(),\r\n    shipping: Yup.number(),\r\n    invoiceFrom: Yup.mixed(),\r\n    totalAmount: Yup.number(),\r\n    invoiceNumber: Yup.string(),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      invoiceNumber: currentInvoice?.invoiceNumber || 'INV-1990',\r\n      createDate: currentInvoice?.createDate || new Date(),\r\n      dueDate: currentInvoice?.dueDate || null,\r\n      taxes: currentInvoice?.taxes || 0,\r\n      shipping: currentInvoice?.shipping || 0,\r\n      status: currentInvoice?.status || 'draft',\r\n      discount: currentInvoice?.discount || 0,\r\n      invoiceFrom: currentInvoice?.invoiceFrom || _addressBooks[0],\r\n      invoiceTo: currentInvoice?.invoiceTo || null,\r\n      items: currentInvoice?.items || [\r\n        {\r\n          title: '',\r\n          description: '',\r\n          service: '',\r\n          quantity: 1,\r\n          price: 0,\r\n          total: 0,\r\n        },\r\n      ],\r\n      totalAmount: currentInvoice?.totalAmount || 0,\r\n    }),\r\n    [currentInvoice]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewInvoiceSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const handleSaveAsDraft = handleSubmit(async (data) => {\r\n    loadingSave.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSave.onFalse();\r\n      router.push(paths.dashboard.invoice.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSave.onFalse();\r\n    }\r\n  });\r\n\r\n  const handleCreateAndSend = handleSubmit(async (data) => {\r\n    loadingSend.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSend.onFalse();\r\n      router.push(paths.dashboard.invoice.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSend.onFalse();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormProvider methods={methods}>\r\n      <Card>\r\n        <InvoiceNewEditAddress />\r\n\r\n        <InvoiceNewEditStatusDate />\r\n\r\n        <InvoiceNewEditDetails />\r\n      </Card>\r\n\r\n      <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n        <LoadingButton\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          loading={loadingSave.value && isSubmitting}\r\n          onClick={handleSaveAsDraft}\r\n        >\r\n          Save as Draft\r\n        </LoadingButton>\r\n\r\n        <LoadingButton\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          loading={loadingSend.value && isSubmitting}\r\n          onClick={handleCreateAndSend}\r\n        >\r\n          {currentInvoice ? 'Update' : 'Create'} & Send\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nInvoiceNewEditForm.propTypes = {\r\n  currentInvoice: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _invoices } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from '../invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppoinmentEditView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  const currentInvoice = _invoices.find((invoice) => invoice.id === id);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Edit\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          { name: currentInvoice?.invoiceNumber },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm currentInvoice={currentInvoice} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nAppoinmentEditView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from '../invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentCreateView() {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Create a new invoice\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          {\r\n            name: 'New Invoice',\r\n          },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm />\r\n    </Container>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport InvoiceToolbar from './invoice-toolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    textAlign: 'right',\r\n    borderBottom: 'none',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceDetails({ invoice }) {\r\n  const [currentStatus, setCurrentStatus] = useState(invoice.status);\r\n\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  const renderTotal = (\r\n    <>\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          Subtotal\r\n        </TableCell>\r\n        <TableCell width={120} sx={{ typography: 'subtitle2' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          {fCurrency(invoice.subTotal)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Shipping</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.shipping)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Discount</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.discount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Taxes</TableCell>\r\n        <TableCell width={120}>{fCurrency(invoice.taxes)}</TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ typography: 'subtitle1' }}>Total</TableCell>\r\n        <TableCell width={140} sx={{ typography: 'subtitle1' }}>\r\n          {fCurrency(invoice.totalAmount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n    </>\r\n  );\r\n\r\n  const renderFooter = (\r\n    <Grid container>\r\n      <Grid xs={12} md={9} sx={{ py: 3 }}>\r\n        <Typography variant=\"subtitle2\">NOTES</Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\r\n        <Typography variant=\"subtitle2\">Have a Question?</Typography>\r\n\r\n        <Typography variant=\"body2\">support@minimals.cc</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const renderList = (\r\n    <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 960 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={40}>#</TableCell>\r\n\r\n              <TableCell sx={{ typography: 'subtitle2' }}>Description</TableCell>\r\n\r\n              <TableCell>Qty</TableCell>\r\n\r\n              <TableCell align=\"right\">Unit price</TableCell>\r\n\r\n              <TableCell align=\"right\">Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {invoice.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n\r\n                <TableCell>\r\n                  <Box sx={{ maxWidth: 560 }}>\r\n                    <Typography variant=\"subtitle2\">{row.title}</Typography>\r\n\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                      {row.description}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell>{row.quantity}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price)}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price * row.quantity)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {renderTotal}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <InvoiceToolbar\r\n        invoice={invoice}\r\n        currentStatus={currentStatus || ''}\r\n        onChangeStatus={handleChangeStatus}\r\n        statusOptions={INVOICE_STATUS_OPTIONS}\r\n      />\r\n\r\n      <Card sx={{ pt: 5, px: 5 }}>\r\n        <Box\r\n          rowGap={5}\r\n          display=\"grid\"\r\n          alignItems=\"center\"\r\n          gridTemplateColumns={{\r\n            xs: 'repeat(1, 1fr)',\r\n            sm: 'repeat(2, 1fr)',\r\n          }}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"logo\"\r\n            src=\"/logo/logo_single.svg\"\r\n            sx={{ width: 48, height: 48 }}\r\n          />\r\n\r\n          <Stack spacing={1} alignItems={{ xs: 'flex-start', md: 'flex-end' }}>\r\n            <Label\r\n              variant=\"soft\"\r\n              color={\r\n                (currentStatus === 'paid' && 'success') ||\r\n                (currentStatus === 'pending' && 'warning') ||\r\n                (currentStatus === 'overdue' && 'error') ||\r\n                'default'\r\n              }\r\n            >\r\n              {currentStatus}\r\n            </Label>\r\n\r\n            <Typography variant=\"h6\">{invoice.invoiceNumber}</Typography>\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice From\r\n            </Typography>\r\n            {invoice.invoiceFrom.name}\r\n            <br />\r\n            {invoice.invoiceFrom.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceFrom.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice To\r\n            </Typography>\r\n            {invoice.invoiceTo.name}\r\n            <br />\r\n            {invoice.invoiceTo.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceTo.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Date Create\r\n            </Typography>\r\n            {fDate(invoice.createDate)}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Due Date\r\n            </Typography>\r\n            {fDate(invoice.dueDate)}\r\n          </Stack>\r\n        </Box>\r\n\r\n        {renderList}\r\n\r\n        <Divider sx={{ mt: 5, borderStyle: 'dashed' }} />\r\n\r\n        {renderFooter}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceDetails.propTypes = {\r\n  invoice: PropTypes.object,\r\n};\r\n"],"names":["EarningApproval","_ref","openDialog","setOpenDialog","data","handleCloseDialog","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","enqueueSnackbar","useSnackbar","facilityID","useAuthContext","AuthContext","user","handlePayoutRequest","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","customAxios","post","t0","console","log","finish","stop","apply","arguments","_jsxs","Dialog","open","onClose","children","DialogContent","sx","display","flexDirection","justifyContent","width","xs","sm","pb","_jsx","Box","component","src","EarningIllustration","alt","mx","my","height","borderRadius","Typography","variant","textAlign","style","fontWeight","fontSize","amount","DialogActions","LoadingButton","loading","onClick","color","TransactionAnalytic","title","total","icon","price","percent","Stack","spacing","direction","alignItems","minWidth","position","Image","typography","fShortenNumber","fCurrency","Font","register","family","fonts","useStyles","useMemo","StyleSheet","create","col4","col8","col6","mb4","marginBottom","mb8","mb40","h3","h4","body1","body2","subtitle1","subtitle2","alignRight","page","lineHeight","fontFamily","backgroundColor","textTransform","padding","footer","left","right","bottom","margin","borderTopWidth","borderStyle","borderColor","gridContainer","table","tableRow","borderBottomWidth","noBorder","paddingTop","paddingBottom","tableCell_1","tableCell_2","paddingRight","tableCell_3","InvoicePDF","invoice","currentStatus","items","taxes","dueDate","discount","shipping","invoiceTo","createDate","totalAmount","invoiceFrom","invoiceNumber","subTotal","styles","Document","Page","size","View","source","Text","name","fullAddress","phoneNumber","fDate","map","item","index","description","quantity","id","fixed","InvoiceTableToolbar","filters","onFilters","dateError","popover","serviceOptions","usePopover","handleFilterName","useCallback","event","target","value","handleFilterStartDate","split","newValue","handleFilterEndDate","view","useBoolean","currentInvoice","_invoices","filter","_Fragment","md","p","pr","DatePicker","label","startDate","onChange","slotProps","textField","fullWidth","maxWidth","endDate","error","flexGrow","TextField","placeholder","InputProps","startAdornment","InputAdornment","Iconify","IconButton","onOpen","CustomPopover","arrow","MenuItem","onTrue","PDFDownloadLink","document","fileName","textDecoration","fullScreen","Button","onFalse","overflow","PDFViewer","border","InvoiceTableFiltersResult","onResetFilters","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","_objectSpread","ml","flexWrap","service","length","Block","Chip","onDelete","inputValue","handleRemoveService","status","startIcon","_ref2","_excluded2","Paper","TransactionTableRow","row","selected","onViewRow","onSelectRow","patientName","onEditRow","onDeleteRow","orderType","appointmentDate","userID","feeAmount","stringDate","TableRow","hover","TableCell","Avatar","mr","charAt","toUpperCase","ListItemText","disableTypography","primary","noWrap","secondary","Link","cursor","format","Date","primaryTypographyProps","secondaryTypographyProps","mt","TABLE_HEAD","defaultFilters","Pending","extraData","theme","useTheme","settings","useSettingsContext","router","useRouter","useTable","defaultOrderBy","confirm","providerID","tableData","setTableData","_useState3","_useState4","otherData","setOtherData","_useState5","_useState6","setFilters","useEffect","getTime","dataFiltered","inputData","comparator","stabilizedThis","el","sort","a","b","order","toLowerCase","indexOf","some","filterItem","includes","transaction","fTimestamp","applyFilter","getComparator","orderBy","dataInPage","slice","rowsPerPage","denseHeight","dense","canReset","notFound","getInvoiceLength","TABS","count","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleEditRow","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","push","paths","dashboard","edit","handleViewRow","details","handleFilterStatus","handleResetFilters","Container","themeStretch","Card","mb","Scrollbar","divider","Divider","orientation","flexItem","py","TranscationAnalytic","TotalEarning","palette","main","charges","Deduction","info","NetEarning","success","Tabs","px","boxShadow","concat","alpha","grey","tab","Tab","iconPosition","Label","INVOICE_SERVICE_OPTIONS","option","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","action","Tooltip","Table","TableHeadCustom","headLabel","onSort","TableBody","TableEmptyRows","emptyRows","TableNoData","TablePaginationCustom","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","PayoutRequestTableRow","type","requestDate","PayoutRequest","fetchData","_yield$customAxios$ge","resData","get","sent","newData","Number","getGross","sumBy","getCharges","getNet","PayoutHistoryTableRow","PayoutHistory","TransactionListView","currentTab","setCurrentTab","handleChangeTab","_useState7","_useState8","openEarningPopup","setOpenEarningPopup","CustomBreadcrumbs","heading","links","href","root","RouterLink","InvoiceNewEditDetails","_useFormContext","useFormContext","control","setValue","watch","resetField","_useFieldArray","useFieldArray","fields","append","remove","values","totalOnRow","sum","handleClearService","handleSelectService","_INVOICE_SERVICE_OPTI","find","handleChangeQuantity","handleChangePrice","renderTotal","RHFTextField","InputLabelProps","shrink","RHFSelect","fontStyle","disabled","toFixed","inputBaseClasses","input","handleRemove","flexShrink","InvoiceNewEditAddress","_errors$invoiceTo","errors","formState","upMd","useResponsive","from","to","message","AddressListDialog","selectedId","onSelect","address","list","_addressBooks","alignSelf","InvoiceNewEditStatusDate","bgcolor","PaperPropsSx","Controller","render","field","fieldState","helperText","InvoiceNewEditForm","loadingSave","loadingSend","NewInvoiceSchema","Yup","shape","nullable","required","test","parent","defaultValues","methods","useForm","resolver","yupResolver","reset","handleSubmit","handleSaveAsDraft","Promise","resolve","setTimeout","JSON","stringify","_x","handleCreateAndSend","_ref4","_callee2","_context2","_x2","FormProvider","AppoinmentEditView","AppointmentCreateView","styled","borderBottom"],"sourceRoot":""}