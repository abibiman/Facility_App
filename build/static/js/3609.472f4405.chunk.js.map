{"version":3,"file":"static/js/3609.472f4405.chunk.js","mappings":"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","sources":["components/chart/use-chart.js","components/chart/chart.js","components/empty-content/empty-content.js","components/table/utils.js","components/table/use-table.js","components/table/table-no-data.js","components/table/table-skeleton.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","sections/overview/app/appointments.js","sections/overview/app/device-usage.js","sections/overview/app/app-widget-summary.js","sections/overview/app/view/overview-app-view.js","pages/dashboard/app.js","utils/format-number.js"],"sourcesContent":["import merge from 'lodash/merge';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useChart(options) {\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.typography.subtitle2.fontSize,\r\n    fontWeight: theme.typography.subtitle2.fontWeight,\r\n    lineHeight: theme.typography.subtitle2.lineHeight,\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    fontSize: theme.typography.h3.fontSize,\r\n    fontWeight: theme.typography.h3.fontWeight,\r\n    lineHeight: theme.typography.h3.lineHeight,\r\n  };\r\n\r\n  const baseOptions = {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.warning.main,\r\n      theme.palette.info.main,\r\n      theme.palette.error.main,\r\n      theme.palette.success.main,\r\n      theme.palette.warning.dark,\r\n      theme.palette.success.darker,\r\n      theme.palette.info.dark,\r\n      theme.palette.info.darker,\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily,\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04,\r\n        },\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round',\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider,\r\n      xaxis: {\r\n        lines: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false },\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper,\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      theme: false,\r\n      x: {\r\n        show: true,\r\n      },\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: {\r\n        radius: 12,\r\n      },\r\n      fontWeight: 500,\r\n      itemMargin: {\r\n        horizontal: 8,\r\n      },\r\n      labels: {\r\n        colors: theme.palette.text.primary,\r\n      },\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Bar\r\n      bar: {\r\n        borderRadius: 4,\r\n        columnWidth: '28%',\r\n        borderRadiusApplication: 'end',\r\n        borderRadiusWhenStacked: 'last',\r\n      },\r\n\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL,\r\n          },\r\n        },\r\n      },\r\n\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: alpha(theme.palette.grey[500], 0.16),\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL,\r\n        },\r\n      },\r\n\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n\r\n      // polarArea\r\n      polarArea: {\r\n        rings: {\r\n          strokeColor: theme.palette.divider,\r\n        },\r\n        spokes: {\r\n          connectorColors: theme.palette.divider,\r\n        },\r\n      },\r\n    },\r\n\r\n    // Responsive\r\n    responsive: [\r\n      {\r\n        // sm\r\n        breakpoint: theme.breakpoints.values.sm,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '40%' } },\r\n        },\r\n      },\r\n      {\r\n        // md\r\n        breakpoint: theme.breakpoints.values.md,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '32%' } },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return merge(baseOptions, options);\r\n}\r\n","import { memo } from 'react';\r\nimport ApexChart from 'react-apexcharts';\r\n// @mui\r\nimport { alpha, styled } from '@mui/material/styles';\r\n// theme\r\nimport { bgBlur } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Chart = styled(ApexChart)(({ theme }) => ({\r\n  '& .apexcharts-canvas': {\r\n    // Tooltip\r\n    '& .apexcharts-tooltip': {\r\n      ...bgBlur({\r\n        color: theme.palette.background.default,\r\n      }),\r\n      color: theme.palette.text.primary,\r\n      boxShadow: theme.customShadows.dropdown,\r\n      borderRadius: theme.shape.borderRadius * 1.25,\r\n      '&.apexcharts-theme-light': {\r\n        borderColor: 'transparent',\r\n        ...bgBlur({\r\n          color: theme.palette.background.default,\r\n        }),\r\n      },\r\n    },\r\n    '& .apexcharts-xaxistooltip': {\r\n      ...bgBlur({\r\n        color: theme.palette.background.default,\r\n      }),\r\n      borderColor: 'transparent',\r\n      color: theme.palette.text.primary,\r\n      boxShadow: theme.customShadows.dropdown,\r\n      borderRadius: theme.shape.borderRadius * 1.25,\r\n      '&:before': {\r\n        borderBottomColor: alpha(theme.palette.grey[500], 0.24),\r\n      },\r\n      '&:after': {\r\n        borderBottomColor: alpha(theme.palette.background.default, 0.8),\r\n      },\r\n    },\r\n    '& .apexcharts-tooltip-title': {\r\n      textAlign: 'center',\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      backgroundColor: alpha(theme.palette.grey[500], 0.08),\r\n      color: theme.palette.text[theme.palette.mode === 'light' ? 'secondary' : 'primary'],\r\n    },\r\n\r\n    // LEGEND\r\n    '& .apexcharts-legend': {\r\n      padding: 0,\r\n    },\r\n    '& .apexcharts-legend-series': {\r\n      display: 'inline-flex !important',\r\n      alignItems: 'center',\r\n    },\r\n    '& .apexcharts-legend-marker': {\r\n      marginRight: 8,\r\n    },\r\n    '& .apexcharts-legend-text': {\r\n      lineHeight: '18px',\r\n      textTransform: 'capitalize',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default memo(Chart);\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EmptyContent({ title, imgUrl, action, filled, description, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      flexGrow={1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        px: 3,\r\n        height: 1,\r\n        ...(filled && {\r\n          borderRadius: 2,\r\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"empty content\"\r\n        src={imgUrl || '/assets/icons/empty/ic_content.svg'}\r\n        sx={{ width: 1, maxWidth: 160 }}\r\n      />\r\n\r\n      {title && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {description && (\r\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nEmptyContent.propTypes = {\r\n  action: PropTypes.node,\r\n  description: PropTypes.string,\r\n  filled: PropTypes.bool,\r\n  imgUrl: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] === null) {\r\n    return 1;\r\n  }\r\n  if (b[orderBy] === null) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n//\r\nimport EmptyContent from '../empty-content';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ notFound, sx }) {\r\n  return (\r\n    <TableRow>\r\n      {notFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n              ...sx,\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  notFound: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSkeleton({ ...other }) {\r\n  return (\r\n    <TableRow {...other}>\r\n      <TableCell colSpan={12}>\r\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\r\n          <Skeleton sx={{ borderRadius: 1.5, width: 48, height: 48, flexShrink: 0 }} />\r\n          <Skeleton sx={{ width: 1, height: 12 }} />\r\n          <Skeleton sx={{ width: 180, height: 12 }} />\r\n          <Skeleton sx={{ width: 160, height: 12 }} />\r\n          <Skeleton sx={{ width: 140, height: 12 }} />\r\n          <Skeleton sx={{ width: 120, height: 12 }} />\r\n        </Stack>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: \"1px\",\r\n  height: \"1px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  whiteSpace: \"nowrap\",\r\n  clip: \"rect(0 0 0 0)\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {/* {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )} */}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{\r\n              width: headCell.width,\r\n              minWidth: headCell.minWidth,\r\n              background: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"#e8effb !important\" : \"\",\r\n            }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  dense,\r\n  onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useContext, useState } from \"react\";\r\n\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Card from \"@mui/material/Card\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport FormDialog from \"./form-dialog\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n// utils\r\n\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport { TableHeadCustom } from \"src/components/table\";\r\nimport AppointmentTableRow from \"src/sections/appointments/appointment-table-row\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppAppointments({\r\n  title,\r\n  subheader,\r\n  tableData,\r\n  tableLabels,\r\n  ...other\r\n}) {\r\n  // const currentMonthData = tableData.filter((row) => {\r\n  //   const appointmentDate = new Date(row.appointmentDate);\r\n  //   const currentMonth = new Date().getMonth() + 1; // Months are zero-indexed, so add 1\r\n  //   return appointmentDate.getMonth() + 1 === currentMonth;\r\n  // });\r\n\r\n  return (\r\n    <Card\r\n      {...other}\r\n      sx={{\r\n        boxShadow: (theme) =>\r\n          theme.palette.mode === \"light\"\r\n            ? \"rgb(0 0 0 / 10%) 0px 10px 36px 0px, rgb(0 0 0 / 2%) 0px 0px 0px 1px\"\r\n            : \"\",\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={title}\r\n        subheader={subheader}\r\n        sx={{ mb: 3, textAlign: \"center\" }} // Centering the text\r\n      />\r\n      <TableContainer sx={{ overflow: \"unset\" }}>\r\n        <Scrollbar>\r\n          <Table sx={{ minWidth: 680 }}>\r\n            <TableHeadCustom headLabel={tableLabels} />\r\n\r\n            <TableBody>\r\n              {tableData.slice(0, 5).map((row) => (\r\n                <AppAppointmentTableRow key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <Divider sx={{ borderStyle: \"dashed\" }} />\r\n\r\n      <Box sx={{ p: 2, textAlign: \"right\" }}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"inherit\"\r\n          endIcon={\r\n            <Iconify\r\n              icon=\"eva:arrow-ios-forward-fill\"\r\n              width={18}\r\n              sx={{ ml: -0.5 }}\r\n            />\r\n          }\r\n          href=\"/dashboard/order\"\r\n        >\r\n          View All\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppAppointments.propTypes = {\r\n  subheader: PropTypes.string,\r\n  tableData: PropTypes.array,\r\n  tableLabels: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction AppAppointmentTableRow({ row }) {\r\n  const popover = usePopover();\r\n  const navigate = useNavigate();\r\n  // const handleDownload = () => {\r\n  //   popover.onClose();\r\n  //   console.info('DOWNLOAD', row.id);\r\n  // };\r\n\r\n  // const handlePrint = () => {\r\n  //   popover.onClose();\r\n  //   console.info('PRINT', row.id);\r\n  // };\r\n\r\n  // const handleShare = () => {\r\n  //   popover.onClose();\r\n  //   console.info('SHARE', row.id);\r\n  // };\r\n\r\n  // const handleDelete = () => {\r\n  //   popover.onClose();\r\n  //   console.info('DELETE', row.id);\r\n  // };\r\n\r\n  // console.log(row);\r\n\r\n  const dateTime = new Date(row?.appointmentDate);\r\n  // const currentDate = new Date();\r\n\r\n  // Extract date components\r\n  const year = dateTime.getFullYear();\r\n  const month = dateTime.getMonth() + 1;\r\n  const day = dateTime.getDate();\r\n\r\n  // const currentYear = currentDate.getFullYear();\r\n  // const currentMonth = currentDate.getMonth() + 1;\r\n  // const currentDay = currentDate.getDate();\r\n\r\n  // Extract time components\r\n  const hours = dateTime.getUTCHours();\r\n  const minutes = dateTime.getUTCMinutes();\r\n  const seconds = dateTime.getUTCSeconds();\r\n\r\n  // const currentHours = dateTime.getUTCHours();\r\n  // const currentMinutes = dateTime.getUTCMinutes();\r\n  // const currentSeconds = dateTime.getUTCSeconds();\r\n\r\n  const date = `${year}-${month}-${day}`;\r\n  const time = `${hours}:${minutes}:${seconds}`;\r\n\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n  const confirm = useBoolean();\r\n  const [openPopUp, setOpenPopUp] = useState(false);\r\n  const dialog = useBoolean();\r\n  const redialog = useBoolean();\r\n\r\n  const [appointmentDateInput, setAppointmentDateInput] = useState(\"\");\r\n  const [appointmentTimeInput, setAppointmentTimeInput] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>{`# ${row.orderNo}`}</TableCell>\r\n        <TableCell>{row.patient}</TableCell>\r\n        <TableCell>{row.reqDate}</TableCell>\r\n        <TableCell>{row.orderType}</TableCell>\r\n        {/* <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (row.status === 'Order Confirmed' && 'info') ||\r\n            (row.status === 'Awaiting Confirmation' && 'secondary') ||\r\n\r\n            'default'\r\n          }\r\n        >\r\n          {row.status}\r\n        </Label>\r\n      </TableCell> */}\r\n\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (row.status === \"N\" && \"success\") ||\r\n              (row.priority === \"Urgent\" && \"warning\") ||\r\n              (row.priority === \"Emergency\" && \"error\") ||\r\n              \"default\"\r\n            }\r\n          >\r\n            {row.priority}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ pr: 1 }}>\r\n          <IconButton\r\n            color={popover.open ? \"inherit\" : \"default\"}\r\n            onClick={popover.onOpen}\r\n          >\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenDialogBox(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"carbon:view\" />\r\n          View Order\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: \"dashed\" }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            alert(\"Cancel Order\");\r\n          }}\r\n        >\r\n          <Iconify icon=\"flat-color-icons:cancel\" />\r\n          Cancel Order\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <Dialog\r\n        open={openDialogBox}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            width: \"50%\", // Increase to 90% for a wider dialog\r\n            maxWidth: \"none\", // Optional: Remove the maximum width constraint\r\n            maxHeight: \"90vh\", // Keeping the max height as before\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">{`# LO-32452`}</DialogTitle>\r\n\r\n        {/* <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please find details of your appointment below</Typography>\r\n        </DialogContent> */}\r\n\r\n        <DialogContent>\r\n          <Stack\r\n            spacing={2}\r\n            component={Paper}\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2.5,\r\n              minWidth: 300,\r\n              flexShrink: 0,\r\n              borderRadius: 5,\r\n              typography: \"body1\",\r\n              borderStyle: \"dashed\",\r\n            }}\r\n          >\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Name</Box>\r\n              {row.patient}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Phone Number</Box>\r\n              {row.patientPhone}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Email</Box>\r\n              {row.patientEmail}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Gender</Box>\r\n              {row.gender}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Order Type</Box>\r\n              {row.orderType}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Ordered By</Box>\r\n              {row.doctor}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Doctor Phone Number</Box>\r\n              {row.doctorPhone}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Doctor Email</Box>\r\n              {row.doctorEmail}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Request Date</Box>\r\n              {row.reqDate}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Priority</Box>\r\n              {row.priority}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Fee Paid</Box>\r\n              {row.fee}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Message</Box>\r\n              {row.message}\r\n            </Stack>\r\n          </Stack>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialog.onTrue} variant=\"outlined\" color=\"inherit\">\r\n            {row.status === \"Awaiting Confirmation\" ? \"Schedule\" : \"Reschedule\"}\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => setOpenDialogBox(false)}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={dialog.value}\r\n        onClose={dialog.onFalse}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            width: \"40%\", // Adjust this value to change the width of the dialog\r\n            maxWidth: \"none\", // Optional: This line removes the maximum width constraint\r\n            // maxHeight: '90vh', // You can also adjust the max height if needed\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">Set Appointment</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentDateInput}\r\n            onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"time\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentTimeInput}\r\n            onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={notes}\r\n            onChange={(e) => setNotes(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialog.onFalse} variant=\"outlined\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton\r\n            onClick={() => alert(\"appointment\")}\r\n            variant=\"contained\"\r\n          >\r\n            Book Appointment\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nAppAppointmentTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Card from '@mui/material/Card';\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Chart, { useChart } from 'src/components/chart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_HEIGHT = 400;\r\n\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst StyledChart = styled(Chart)(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  '& .apexcharts-canvas, .apexcharts-inner, svg, foreignObject': {\r\n    height: `100% !important`,\r\n  },\r\n  '& .apexcharts-legend': {\r\n    height: LEGEND_HEIGHT,\r\n    borderTop: `dashed 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DeviceUsage({ title, subheader, chart, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const { colors, series, options } = chart;\r\n\r\n  const chartSeries = series.map((i) => i.value);\r\n\r\n  const chartOptions = useChart({\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    colors,\r\n    labels: series.map((i) => i.label),\r\n    stroke: { colors: [theme.palette.background.paper] },\r\n    legend: {\r\n      offsetY: 0,\r\n      floating: true,\r\n      position: 'bottom',\r\n      horizontalAlign: 'center',\r\n    },\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n      y: {\r\n        formatter: (value) => fNumber(value),\r\n        title: {\r\n          formatter: (seriesName) => `${seriesName}`,\r\n        },\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        donut: {\r\n          size: '90%',\r\n          labels: {\r\n            value: {\r\n              formatter: (value) => fNumber(value),\r\n            },\r\n            total: {\r\n              formatter: (w) => {\r\n                const sum = w.globals.seriesTotals.reduce((a, b) => a + b, 0);\r\n                return `${fNumber(sum)} Tests`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 5 }} />\r\n\r\n      <StyledChart\r\n        dir=\"ltr\"\r\n        type=\"donut\"\r\n        series={chartSeries}\r\n        options={chartOptions}\r\n        height={280}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nDeviceUsage.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\n// utils\r\nimport { fNumber, fPercent } from \"src/utils/format-number\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport Chart from \"src/components/chart\";\r\nimport newOrder from \"src/assets/images/checklist.png\";\r\nimport pendingOrder from \"src/assets/images/work-in-progress.png\";\r\nimport emergency from \"src/assets/images/alarm.png\";\r\nimport delayed from \"src/assets/images/clock.png\";\r\nimport completed from \"src/assets/images/checked.png\";\r\nimport waitOrder from \"src/assets/images/wait.png\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidgetSummary({\r\n  title,\r\n  percent,\r\n  total,\r\n  chart,\r\n  im,\r\n  sx,\r\n  background,\r\n  ...other\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const {\r\n    colors = [theme.palette.primary.light, theme.palette.primary.main],\r\n    series,\r\n    options,\r\n  } = chart;\r\n\r\n  const chartOptions = {\r\n    colors: colors.map((colr) => colr[1]),\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        colorStops: [\r\n          { offset: 0, color: colors[0] },\r\n          { offset: 100, color: colors[1] },\r\n        ],\r\n      },\r\n    },\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: \"68%\",\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (value) => fNumber(value),\r\n        title: {\r\n          formatter: () => \"\",\r\n        },\r\n      },\r\n      marker: { show: false },\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        p: 3,\r\n        backgroundColor: background,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n          <Typography component=\"div\" variant=\"subtitle2\">\r\n            {percent > 0 && \"\"}\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <Typography variant=\"h3\">{fNumber(total)}</Typography>\r\n      </Box>\r\n\r\n      <img alt=\"im\" src={im} width={40} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppWidgetSummary.propTypes = {\r\n  chart: PropTypes.object,\r\n  percent: PropTypes.number,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\n// @mui\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\n// hooks\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\n// _mock\r\nimport { _appFeatured, _appointments } from \"src/_mock\";\r\n// components\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport customAxios from \"src/utils/customAxios\";\r\n// assets\r\nimport { SeoIllustration } from \"src/assets/illustrations\";\r\n//\r\nimport AppWelcome from \"../welcome\";\r\nimport AppAppointments from \"../appointments\";\r\nimport FromOurBlog from \"../from-our-blog\";\r\nimport DeviceUsage from \"../device-usage\";\r\nimport BloodPressureCard from \"../blood-pressure-card\";\r\nimport AppWidgetSummary from \"../app-widget-summary\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport newOrder from \"src/assets/images/checklist.png\";\r\nimport pendingOrder from \"src/assets/images/clockwise.png\";\r\nimport emergency from \"src/assets/images/alarm.png\";\r\nimport delayed from \"src/assets/images/clock.png\";\r\nimport completed from \"src/assets/images/checked.png\";\r\nimport waitOrder from \"src/assets/images/wait.png\";\r\nimport { de } from \"date-fns/locale\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst demoAPI = [\r\n  {\r\n    orderNo: \"LO-21341\",\r\n    patient: \"John Ansah\",\r\n    doctor: \"Dr. Phyllis Dwamenah\",\r\n    reqDate: \"2023-12-22\",\r\n    orderDate: \"2023-12-10\",\r\n    orderType: \"EKG\",\r\n    priority: \"Emergency\",\r\n    fee: \"100\",\r\n    status: \"Order Confirmed\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21342\",\r\n    patient: \"Alice Johnson\",\r\n    doctor: \"Dr. Mark Benson\",\r\n    fee: \"100\",\r\n    orderDate: \"2023-12-10\",\r\n    reqDate: \"2023-12-21\",\r\n    orderType: \"Blood Test\",\r\n    priority: \"Routine\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21343\",\r\n    patient: \"Michael Smith\",\r\n    doctor: \"Dr. Susan Lee\",\r\n    reqDate: \"2023-12-20\",\r\n    orderType: \"MRI\",\r\n    orderDate: \"2023-12-10\",\r\n    priority: \"Urgent\",\r\n    fee: \"100\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21344\",\r\n    patient: \"Karen Davis\",\r\n    doctor: \"Dr. John Okeke\",\r\n    reqDate: \"2023-12-19\",\r\n    orderType: \"CT Scan\",\r\n    fee: \"100\",\r\n    orderDate: \"2023-12-10\",\r\n    priority: \"Emergency\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21345\",\r\n    patient: \"Robert Brown\",\r\n    doctor: \"Dr. Angela Yen\",\r\n    reqDate: \"2023-12-18\",\r\n    fee: \"100\",\r\n    orderType: \"Ultrasound\",\r\n    orderDate: \"2023-12-10\",\r\n    priority: \"Routine\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21346\",\r\n    patient: \"Linda Green\",\r\n    doctor: \"Dr. Mohammed Alvi\",\r\n    fee: \"100\",\r\n    reqDate: \"2023-12-17\",\r\n    orderDate: \"2023-12-10\",\r\n    orderType: \"X-Ray\",\r\n    priority: \"Urgent\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21347\",\r\n    patient: \"Emily Clark\",\r\n    doctor: \"Dr. Lisa Chang\",\r\n    fee: \"100\",\r\n    reqDate: \"2023-12-16\",\r\n    orderType: \"Biopsy\",\r\n    orderDate: \"2023-12-09\",\r\n    priority: \"Emergency\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21348\",\r\n    patient: \"James Wilson\",\r\n    doctor: \"Dr. Kevin Schwartz\",\r\n    reqDate: \"2023-12-15\",\r\n    fee: \"100\",\r\n    orderDate: \"2023-12-08\",\r\n    orderType: \"Echocardiogram\",\r\n    priority: \"Routine\",\r\n    status: \"Awaiting Confirmation\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21349\",\r\n    patient: \"Jessica Miller\",\r\n    doctor: \"Dr. Amy Gupta\",\r\n    orderDate: \"2023-12-09\",\r\n    fee: \"100\",\r\n    reqDate: \"2023-12-14\",\r\n    orderType: \"PET Scan\",\r\n    priority: \"Urgent\",\r\n    status: \"Order Confirmed\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n  {\r\n    orderNo: \"LO-21350\",\r\n    patient: \"William Turner\",\r\n    orderDate: \"2023-12-10\",\r\n    fee: \"100\",\r\n    doctor: \"Dr. Carlos Hernandez\",\r\n    reqDate: \"2023-12-13\",\r\n    orderType: \"Mammogram\",\r\n    priority: \"Emergency\",\r\n    status: \"Order Confirmed\",\r\n    patientEmail: \"something@email.com\",\r\n    patientPhone: \"0232004242\",\r\n    doctorEmail: \"doctor@email.com\",\r\n    doctorPhone: \"0232004242\",\r\n    gender: \"male\",\r\n    message:\r\n      \"lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum \",\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OverviewAppView() {\r\n  const theme = useTheme();\r\n  const { user } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const getAllUserAppointments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const {\r\n        data: { data },\r\n      } = await customAxios.get(`/appointments/user/${user?.userID}`);\r\n\r\n      setTableData(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUserAppointments();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : \"xl\"}>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"primary\"\r\n        sx={{ width: \"30%\", margin: \"15px auto\" }}\r\n      >\r\n        Facility Dashboard\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            title=\"New Orders\"\r\n            percent={2.6}\r\n            background=\"#C2CDF2\"\r\n            total={17}\r\n            im={newOrder}\r\n            chart={{\r\n              series: [5, 18, 12, 51, 68, 11, 39, 37, 27, 20],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            title=\"Order In Progress\"\r\n            im={waitOrder}\r\n            percent={0.2}\r\n            background=\"#f2c2c2\"\r\n            total={12}\r\n            chart={{\r\n              colors: [theme.palette.info.light, theme.palette.info.main],\r\n              series: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            im={completed}\r\n            title=\"Completd Orders\"\r\n            percent={-0.1}\r\n            background=\"#c2f2ec\"\r\n            total={34}\r\n            chart={{\r\n              colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n              series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            title=\"Awaiting Results\"\r\n            im={pendingOrder}\r\n            percent={-0.1}\r\n            background=\"#f2f0c2\"\r\n            total={11}\r\n            chart={{\r\n              colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n              series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            title=\"Delayed Orders\"\r\n            im={delayed}\r\n            percent={-0.1}\r\n            background=\"#c2e5f2\"\r\n            total={9}\r\n            chart={{\r\n              colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n              series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <AppWidgetSummary\r\n            title=\"Urgent Orders\"\r\n            im={emergency}\r\n            percent={-0.1}\r\n            background=\"#ffc7fc\"\r\n            total={5}\r\n            chart={{\r\n              colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n              series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        {/* <Grid xs={12} lg={12}>\r\n          <AppAppointments\r\n            title=\"Emergency Orders\"\r\n            tableData={demoAPI}\r\n            tableLabels={[\r\n              { id: \"id\", label: \"OrderID\" },\r\n              { id: \"pat\", label: \"Patient\" },\r\n              { id: \"dat\", label: \"Date (YYYY-MM-DD)\" },\r\n              { id: \"typ\", label: \"Order Type\" },\r\n              { id: \"prio\", label: \"Priority\" },\r\n            ]}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid xs={12} lg={12}>\r\n          <AppAppointments\r\n            title=\"New Orders\"\r\n            tableData={demoAPI}\r\n            tableLabels={[\r\n              { id: \"id\", label: \"Order ID\" },\r\n              { id: \"pat\", label: \"Patient\" },\r\n              { id: \"dat\", label: \"Date (YYYY-MM-DD)\" },\r\n              { id: \"typ\", label: \"Order Type\" },\r\n              { id: \"prio\", label: \"Priority\" },\r\n              { id: \"prio\", label: \"\" },\r\n            ]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport { OverviewAppView } from 'src/sections/overview/app/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OverviewAppPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Orders</title>\r\n      </Helmet>\r\n\r\n      <OverviewAppView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n"],"names":["useChart","options","theme","useTheme","LABEL_TOTAL","show","label","color","palette","text","secondary","fontSize","typography","subtitle2","fontWeight","lineHeight","LABEL_VALUE","offsetY","primary","h3","baseOptions","colors","main","warning","info","error","success","dark","darker","chart","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","lines","axisBorder","axisTicks","markers","size","strokeColors","background","paper","tooltip","x","legend","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","borderRadius","columnWidth","borderRadiusApplication","borderRadiusWhenStacked","pie","donut","total","radialBar","track","strokeWidth","alpha","grey","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","values","sm","md","merge","Chart","styled","ApexChart","_ref","_objectSpread","bgBlur","default","boxShadow","customShadows","dropdown","shape","borderBottomColor","textAlign","fontWeightBold","backgroundColor","mode","padding","display","alignItems","marginRight","textTransform","memo","EmptyContent","title","imgUrl","action","filled","description","sx","other","_objectWithoutProperties","_excluded","_jsxs","Stack","flexGrow","justifyContent","px","height","bgcolor","border","concat","children","_jsx","Box","component","alt","src","maxWidth","Typography","variant","mt","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","_useState","useState","defaultDense","_useState2","_slicedToArray","dense","setDense","_useState3","defaultCurrentPage","_useState4","setPage","_useState5","defaultOrderBy","_useState6","setOrderBy","_useState7","defaultRowsPerPage","_useState8","setRowsPerPage","_useState9","defaultOrder","_useState10","setOrder","_useState11","defaultSelected","_useState12","selected","setSelected","onSort","useCallback","id","onSelectRow","inputValue","newSelected","includes","_toConsumableArray","onChangeRowsPerPage","event","parseInt","target","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","length","ceil","TableNoData","notFound","TableRow","TableCell","colSpan","py","p","TableSkeleton","Object","assign","_objectDestructuringEmpty","spacing","direction","Skeleton","flexShrink","TableEmptyRows","visuallyHidden","margin","overflow","whiteSpace","clip","TableHeadCustom","headLabel","rowCount","numSelected","TableHead","map","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","onClick","TableSelectedAction","pl","pr","top","left","zIndex","Checkbox","indeterminate","onChange","ml","TablePaginationCustom","_ref$rowsPerPageOptio","rowsPerPageOptions","TablePagination","borderTopColor","FormControlLabel","control","Switch","AppAppointments","subheader","tableData","tableLabels","Card","CardHeader","mb","TableContainer","Scrollbar","Table","TableBody","slice","row","AppAppointmentTableRow","Divider","borderStyle","Button","endIcon","Iconify","icon","href","_ref2","popover","usePopover","dateTime","useNavigate","Date","appointmentDate","year","getFullYear","month","getMonth","day","getDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","openDialogBox","setOpenDialogBox","useBoolean","dialog","appointmentDateInput","setAppointmentDateInput","appointmentTimeInput","setAppointmentTimeInput","notes","setNotes","_Fragment","orderNo","patient","reqDate","orderType","Label","status","priority","IconButton","open","onOpen","CustomPopover","onClose","arrow","MenuItem","alert","Dialog","maxHeight","DialogTitle","DialogContent","Paper","my","patientPhone","patientEmail","gender","doctor","doctorPhone","doctorEmail","fee","message","DialogActions","onTrue","onFalse","TextField","autoFocus","fullWidth","e","LoadingButton","borderTop","CHART_HEIGHT","AppWidgetSummary","percent","im","_chart$colors","light","series","colr","colorStops","offset","sparkline","y","formatter","fNumber","marker","demoAPI","orderDate","OverviewAppView","user","useContext","AuthContext","setLoading","setTableData","settings","useSettingsContext","getAllUserAppointments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$customAxios$ge","data","wrap","_context","prev","next","customAxios","get","userID","sent","t0","console","log","stop","apply","arguments","useEffect","Container","themeStretch","Grid","container","xs","newOrder","waitOrder","completed","pendingOrder","delayed","emergency","lg","OverviewAppPage","Helmet","number","numeral","format","fCurrency","result","fPercent","Number","fShortenNumber","fData","key","undefined","replace"],"sourceRoot":""}