{"version":3,"file":"static/js/2464.8897cc45.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/_examples/mui/checkbox-view.js","pages/components/mui/checkbox.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          '@media (max-width: 475px)': {\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport Masonry from '@mui/lab/Masonry';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Container from '@mui/material/Container';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport ComponentBlock from '../component-block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLORS = ['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\r\n\r\nconst PLACEMENTS = ['top', 'start', 'bottom', 'end'];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CheckboxView() {\r\n  const [checked, setChecked] = useState([true, false]);\r\n\r\n  const handleChange1 = (event) => {\r\n    setChecked([event.target.checked, event.target.checked]);\r\n  };\r\n\r\n  const handleChange2 = (event) => {\r\n    setChecked([event.target.checked, checked[1]]);\r\n  };\r\n\r\n  const handleChange3 = (event) => {\r\n    setChecked([checked[0], event.target.checked]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          py: 5,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"Checkboxes\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: paths.components,\r\n              },\r\n              { name: 'Checkboxes' },\r\n            ]}\r\n            moreLink={['https://mui.com/components/checkboxes']}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\r\n          <ComponentBlock title=\"Basic\">\r\n            <Checkbox size=\"medium\" />\r\n            <Checkbox size=\"medium\" defaultChecked />\r\n            <Checkbox size=\"medium\" defaultChecked indeterminate />\r\n            <Checkbox size=\"medium\" disabled />\r\n            <Checkbox size=\"medium\" disabled defaultChecked />\r\n            <Checkbox size=\"medium\" disabled indeterminate />\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock title=\"Size & Custom Icon\">\r\n            <FormControlLabel label=\"Normal\" control={<Checkbox size=\"medium\" defaultChecked />} />\r\n            <FormControlLabel label=\"Small\" control={<Checkbox size=\"small\" defaultChecked />} />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"info\"\r\n                  size=\"small\"\r\n                  icon={<Iconify icon=\"solar:heart-bold\" />}\r\n                  checkedIcon={<Iconify icon=\"solar:heart-bold\" />}\r\n                />\r\n              }\r\n              label=\"Custom icon\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"error\"\r\n                  size=\"small\"\r\n                  icon={<Iconify icon=\"eva:award-fill\" />}\r\n                  checkedIcon={<Iconify icon=\"eva:award-fill\" />}\r\n                />\r\n              }\r\n              label=\"Custom icon\"\r\n            />\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock title=\"Placement\">\r\n            <FormControl component=\"fieldset\">\r\n              <FormGroup aria-label=\"position\" row>\r\n                {PLACEMENTS.map((placement) => (\r\n                  <FormControlLabel\r\n                    key={placement}\r\n                    value={placement}\r\n                    label={placement}\r\n                    labelPlacement={placement}\r\n                    control={<Checkbox size=\"medium\" />}\r\n                    sx={{ textTransform: 'capitalize' }}\r\n                  />\r\n                ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock title=\"Colors\">\r\n            <FormGroup>\r\n              {COLORS.map((color) => (\r\n                <FormControlLabel\r\n                  key={color}\r\n                  control={<Checkbox size=\"medium\" defaultChecked color={color} />}\r\n                  label={color}\r\n                  sx={{ textTransform: 'capitalize' }}\r\n                />\r\n              ))}\r\n\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox size=\"medium\" defaultChecked color=\"error\" />}\r\n                label=\"Disabled\"\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormControl component=\"fieldset\">\r\n              <FormGroup>\r\n                {COLORS.map((color) => (\r\n                  <FormControlLabel\r\n                    key={color}\r\n                    control={<Checkbox size=\"medium\" defaultChecked indeterminate color={color} />}\r\n                    label={color}\r\n                    sx={{ textTransform: 'capitalize' }}\r\n                  />\r\n                ))}\r\n\r\n                <FormControlLabel\r\n                  disabled\r\n                  control={<Checkbox size=\"medium\" defaultChecked indeterminate color=\"error\" />}\r\n                  label=\"Disabled\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </ComponentBlock>\r\n\r\n          <ComponentBlock title=\"Indeterminate\">\r\n            <div>\r\n              <FormControlLabel\r\n                label=\"Parent\"\r\n                control={\r\n                  <Checkbox\r\n                    size=\"medium\"\r\n                    checked={checked[0] && checked[1]}\r\n                    indeterminate={checked[0] !== checked[1]}\r\n                    onChange={handleChange1}\r\n                  />\r\n                }\r\n              />\r\n              <div>\r\n                <FormControlLabel\r\n                  label=\"Child 1\"\r\n                  control={<Checkbox size=\"medium\" checked={checked[0]} onChange={handleChange2} />}\r\n                />\r\n                <FormControlLabel\r\n                  label=\"Child 2\"\r\n                  control={<Checkbox size=\"medium\" checked={checked[1]} onChange={handleChange3} />}\r\n                />\r\n              </div>\r\n            </div>\r\n          </ComponentBlock>\r\n        </Masonry>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport CheckboxView from 'src/sections/_examples/mui/checkbox-view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CheckboxPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> MUI: Checkbox</title>\r\n      </Helmet>\r\n\r\n      <CheckboxView />\r\n    </>\r\n  );\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexDirection","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","COLORS","PLACEMENTS","CheckboxView","_useState","useState","_useState2","_slicedToArray","checked","setChecked","py","theme","palette","mode","Container","paths","components","my","Masonry","columns","xs","md","spacing","ComponentBlock","title","Checkbox","size","defaultChecked","indeterminate","FormControlLabel","label","control","Iconify","checkedIcon","FormControl","FormGroup","row","placement","value","labelPlacement","textTransform","onChange","event","CheckboxPage","Helmet"],"sourceRoot":""}