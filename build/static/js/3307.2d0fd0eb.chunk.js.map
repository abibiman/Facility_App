{"version":3,"file":"static/js/3307.2d0fd0eb.chunk.js","mappings":"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","sources":["sections/order/components/details-popup.js","sections/order/components/appointment-popup.js","sections/order/components/upload-popup.js","sections/order/components/upload-list.js","sections/order/order-table-row.js","sections/order/order-table-toolbar.js","sections/order/order-table-filters-result.js","sections/order/view/order-list-view.js","sections/order/order-details-info.js","sections/order/order-details-item.js","sections/order/order-details-toolbar.js","sections/order/order-details-history.js","sections/order/view/order-details-view.js","sections/order/all-order-table-row.js","sections/order/view/allorder-list-view.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { format } from \"date-fns\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DetailsPopup({\r\n  row,\r\n  openDialogBox,\r\n  setOpenDialogBox,\r\n  setOpenAppointmentBox,\r\n}) {\r\n  const {\r\n    dateOrdered,\r\n    labOrderId,\r\n    appointmentDate,\r\n    providerContact,\r\n    patientContact,\r\n    providerName,\r\n    labItems,\r\n  } = row;\r\n\r\n  const dateTime = new Date(dateOrdered);\r\n\r\n  const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n\r\n  const formattedDate = dateTime.toLocaleDateString(\"en-US\", options);\r\n  console.log(row);\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openDialogBox}\r\n        onClose={() => setOpenDialogBox(false)}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            width: \"50%\", // Increase to 90% for a wider dialog\r\n            maxWidth: \"none\", // Optional: Remove the maximum width constraint\r\n            maxHeight: \"90vh\", // Keeping the max height as before\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">\r\n          <ListItemText\r\n            // primary={format(new Date(dateOrdered), \"dd MMM yyyy\")}\r\n            // secondary={format(new Date(createdAt), 'p')}\r\n            // primary={formattedDate}\r\n            primary={labOrderId}\r\n            secondary=\"General Laboratory Request Form\"\r\n            primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: \"span\",\r\n              typography: \"caption\",\r\n            }}\r\n          />\r\n        </DialogTitle>\r\n\r\n        {/* <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please find details of your appointment below</Typography>\r\n        </DialogContent> */}\r\n\r\n        <DialogContent>\r\n          <Stack\r\n            spacing={2}\r\n            component={Paper}\r\n            variant=\"outlined\"\r\n            sx={{\r\n              p: 2.5,\r\n              minWidth: 300,\r\n              flexShrink: 0,\r\n              borderRadius: 5,\r\n              typography: \"body1\",\r\n              borderStyle: \"dashed\",\r\n            }}\r\n          >\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Name</Box>\r\n              {row.patientName}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Phone Number</Box>\r\n              {row?.patientContact.phoneNumber}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Patient Email</Box>\r\n              {row?.patientContact.email}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Category and Test Type</Box>\r\n              {labItems.map((lab, index) => {\r\n                return (\r\n                  <Typography key={index}>\r\n                    <Label color={\"success\"}>{lab.category}</Label> -{\" \"}\r\n                    <Label color={\"default\"}>{lab.test}</Label>\r\n                  </Typography>\r\n                );\r\n              })}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Provider Name</Box>\r\n              {row.providerName}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Provider Phone Number</Box>\r\n              {row?.providerContact.phoneNumber}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Provider Email</Box>\r\n              {row?.providerContact.email}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Appointment Date</Box>\r\n\r\n              {format(new Date(appointmentDate), \"dd/MM/yyyy\")}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Priority</Box>\r\n              {row.priority}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Fee Paid</Box>\r\n              {row.feeAmount}\r\n            </Stack>\r\n            <Divider\r\n              sx={{ borderStyle: \"dashed\", my: 1, borderColor: \"primary.main\" }}\r\n            />\r\n\r\n            <Stack spacing={0.5}>\r\n              <Box sx={{ color: \"text.disabled\" }}>Message</Box>\r\n              {row.description}\r\n            </Stack>\r\n          </Stack>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenAppointmentBox(true)}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n          >\r\n            {row.status === \"pending\" ? \"Schedule\" : \"Reschedule\"}\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => setOpenDialogBox(false)}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nDetailsPopup.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  fetchAllOrders: PropTypes.func,\r\n  setOpenAppointmentBox: PropTypes.func,\r\n};\r\n","// import PropTypes from \"prop-types\";\r\n// import { useState } from \"react\";\r\n\r\n// // @mui\r\n\r\n// import Button from \"@mui/material/Button\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import TextField from \"@mui/material/TextField\";\r\n\r\n// import Dialog from \"@mui/material/Dialog\";\r\n// import DialogTitle from \"@mui/material/DialogTitle\";\r\n// import DialogActions from \"@mui/material/DialogActions\";\r\n// import DialogContent from \"@mui/material/DialogContent\";\r\n// // hooks\r\n// import { useBoolean } from \"src/hooks/use-boolean\";\r\n// // components\r\n\r\n// import { ConfirmDialog } from \"src/components/custom-dialog\";\r\n// import { LoadingButton } from \"@mui/lab\";\r\n// import customAxios from \"src/utils/customAxios\";\r\n\r\n// // ----------------------------------------------------------------------\r\n\r\n// export default function AppointmentPopup({\r\n//   row,\r\n//   onDeleteRow,\r\n//   fetchAllOrders,\r\n//   setOpenAppointmentBox,\r\n//   openAppointmentBox,\r\n// }) {\r\n//   const { id, labOrderId, labItems } = row;\r\n//   const confirm = useBoolean();\r\n\r\n//   const [appointmentDateInput, setAppointmentDateInput] = useState(\"\");\r\n//   const [appointmentTimeInput, setAppointmentTimeInput] = useState(\"\");\r\n//   const [notes, setNotes] = useState(\"\");\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n//   const handleClose = () => setOpenAppointmentBox(false);\r\n//   const approveOrder = async () => {\r\n//     setIsSubmitting(true);\r\n//     try {\r\n//       const res = await customAxios.patch(\r\n//         `/medical-labs/facility/approve/${id}`,\r\n//         {\r\n//           appointmentDate: appointmentDateInput,\r\n//           appointmentTime: appointmentDateInput,\r\n//         }\r\n//       );\r\n\r\n//       if (res) {\r\n//         fetchAllOrders();\r\n//       }\r\n//       setIsSubmitting(false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Dialog\r\n//         open={openAppointmentBox}\r\n//         onClose={handleClose}\r\n//         sx={{\r\n//           \"& .MuiDialog-paper\": {\r\n//             width: \"40%\", // Adjust this value to change the width of the dialog\r\n//             maxWidth: \"none\", // Optional: This line removes the maximum width constraint\r\n//             // maxHeight: '90vh', // You can also adjust the max height if needed\r\n//           },\r\n//         }}\r\n//       >\r\n//         <DialogTitle align=\"center\">Set Appointment</DialogTitle>\r\n\r\n//         <DialogContent>\r\n//           <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n//           <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"date\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={appointmentDateInput}\r\n//             onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n//           />\r\n\r\n//           <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"time\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={appointmentTimeInput}\r\n//             onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n//           />\r\n\r\n//           {/* <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"text\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={notes}\r\n//             onChange={(e) => setNotes(e.target.value)}\r\n//           /> */}\r\n//         </DialogContent>\r\n\r\n//         <DialogActions>\r\n//           <Button onClick={handleClose} variant=\"outlined\" color=\"inherit\">\r\n//             Cancel\r\n//           </Button>\r\n//           <LoadingButton\r\n//             onClick={() => approveOrder()}\r\n//             variant=\"contained\"\r\n//             loading={isSubmitting}\r\n//           >\r\n//             Book Appointment\r\n//           </LoadingButton>\r\n//         </DialogActions>\r\n//       </Dialog>\r\n\r\n//       <ConfirmDialog\r\n//         open={confirm.value}\r\n//         onClose={confirm.onFalse}\r\n//         title=\"Delete\"\r\n//         content=\"Are you sure want to delete?\"\r\n//         action={\r\n//           <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n//             Delete\r\n//           </Button>\r\n//         }\r\n//       />\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// AppointmentPopup.propTypes = {\r\n//   onDeleteRow: PropTypes.func,\r\n//   row: PropTypes.object,\r\n//   fetchAllOrders: PropTypes.func,\r\n//   openAppointmentBox: PropTypes.bool,\r\n//   setOpenAppointmentBox: PropTypes.func,\r\n// };\r\n\r\n// */-//////////////////////////////////\r\n\r\n// import PropTypes from \"prop-types\";\r\n// import { useState } from \"react\";\r\n// // @mui\r\n// import Button from \"@mui/material/Button\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Dialog from \"@mui/material/Dialog\";\r\n// import DialogTitle from \"@mui/material/DialogTitle\";\r\n// import DialogActions from \"@mui/material/DialogActions\";\r\n// import DialogContent from \"@mui/material/DialogContent\";\r\n// // hooks\r\n// import { useBoolean } from \"src/hooks/use-boolean\";\r\n// // components\r\n// import { ConfirmDialog } from \"src/components/custom-dialog\";\r\n// import { LoadingButton } from \"@mui/lab\";\r\n// import customAxios from \"src/utils/customAxios\";\r\n\r\n// // ----------------------------------------------------------------------\r\n\r\n// export default function AppointmentPopup({\r\n//   row,\r\n//   onDeleteRow,\r\n//   fetchAllOrders,\r\n//   setOpenAppointmentBox,\r\n//   openAppointmentBox,\r\n// }) {\r\n//   const { id, labOrderId, labItems } = row;\r\n//   const confirm = useBoolean();\r\n\r\n//   const [appointmentDateInput, setAppointmentDateInput] = useState(\"\");\r\n//   const [appointmentTimeInput, setAppointmentTimeInput] = useState(\"\");\r\n//   const [notes, setNotes] = useState(\"\");\r\n\r\n//   const [labItemsCost, setLabItemsCost] = useState(\r\n//     labItems.reduce((acc, labItem) => {\r\n//       acc[labItem._id] = labItem.cost || 0;\r\n//       return acc;\r\n//     }, {})\r\n//   );\r\n\r\n//   console.log(labItemsCost);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n//   const handleClose = () => setOpenAppointmentBox(false);\r\n//   const approveOrder = async () => {\r\n//     setIsSubmitting(true);\r\n//     try {\r\n//       const res = await customAxios.patch(\r\n//         `/medical-labs/facility/approve/${id}`,\r\n//         {\r\n//           appointmentDate: appointmentDateInput,\r\n//           appointmentTime: appointmentDateInput,\r\n//           labItemsCost,\r\n//         }\r\n//       );\r\n\r\n//       if (res) {\r\n//         fetchAllOrders();\r\n//       }\r\n//       setIsSubmitting(false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Dialog\r\n//         open={openAppointmentBox}\r\n//         onClose={handleClose}\r\n//         sx={{\r\n//           \"& .MuiDialog-paper\": {\r\n//             width: \"40%\", // Adjust this value to change the width of the dialog\r\n//             maxWidth: \"none\", // Optional: This line removes the maximum width constraint\r\n//           },\r\n//         }}\r\n//       >\r\n//         <DialogTitle align=\"center\">Set Appointment</DialogTitle>\r\n\r\n//         <DialogContent>\r\n//           <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n//           <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"date\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={appointmentDateInput}\r\n//             onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n//           />\r\n\r\n//           <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"time\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={appointmentTimeInput}\r\n//             onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n//           />\r\n\r\n//           {/* <TextField\r\n//             autoFocus\r\n//             fullWidth\r\n//             type=\"text\"\r\n//             margin=\"dense\"\r\n//             variant=\"outlined\"\r\n//             value={notes}\r\n//             onChange={(e) => setNotes(e.target.value)}\r\n//           /> */}\r\n\r\n//           {labItems.map((labItem) => (\r\n//             <TextField\r\n//               key={labItem._id}\r\n//               fullWidth\r\n//               type=\"number\"\r\n//               margin=\"dense\"\r\n//               variant=\"outlined\"\r\n//               label={`Cost for ${labItem.category} - ${labItem.test}`}\r\n//               value={labItemsCost[labItem._id] || 0}\r\n//               onChange={(e) =>\r\n//                 setLabItemsCost((prevCosts) => ({\r\n//                   ...prevCosts,\r\n//                   [labItem._id]: parseFloat(e.target.value) || 0,\r\n//                 }))\r\n//               }\r\n//             />\r\n//           ))}\r\n//         </DialogContent>\r\n\r\n//         <DialogActions>\r\n//           <Button onClick={handleClose} variant=\"outlined\" color=\"inherit\">\r\n//             Cancel\r\n//           </Button>\r\n//           <LoadingButton\r\n//             onClick={() => approveOrder()}\r\n//             variant=\"contained\"\r\n//             loading={isSubmitting}\r\n//           >\r\n//             Book Appointment\r\n//           </LoadingButton>\r\n//         </DialogActions>\r\n//       </Dialog>\r\n\r\n//       <ConfirmDialog\r\n//         open={confirm.value}\r\n//         onClose={confirm.onFalse}\r\n//         title=\"Delete\"\r\n//         content=\"Are you sure want to delete?\"\r\n//         action={\r\n//           <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n//             Delete\r\n//           </Button>\r\n//         }\r\n//       />\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// AppointmentPopup.propTypes = {\r\n//   onDeleteRow: PropTypes.func,\r\n//   row: PropTypes.object,\r\n//   fetchAllOrders: PropTypes.func,\r\n//   openAppointmentBox: PropTypes.bool,\r\n//   setOpenAppointmentBox: PropTypes.func,\r\n// };\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n// @mui\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentPopup({\r\n  row,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n  setOpenAppointmentBox,\r\n  openAppointmentBox,\r\n}) {\r\n  const { id, labOrderId, labItems } = row;\r\n  const confirm = useBoolean();\r\n  console.log(row);\r\n\r\n  const [appointmentDateInput, setAppointmentDateInput] = useState(\"\");\r\n  const [appointmentTimeInput, setAppointmentTimeInput] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [labItemsCost, setLabItemsCost] = useState(\r\n    labItems.map((labItem) => ({\r\n      listID: labItem._id,\r\n      cost: labItem.cost || 0,\r\n    }))\r\n  );\r\n\r\n  console.log(labItemsCost);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleClose = () => setOpenAppointmentBox(false);\r\n  const approveOrder = async () => {\r\n    setIsSubmitting(true);\r\n    const reqObject = {\r\n      appointmentDate: appointmentDateInput,\r\n      appointmentTime: appointmentDateInput,\r\n      labItems: labItemsCost,\r\n      labOrderId,\r\n    };\r\n    console.log(reqObject);\r\n    try {\r\n      const res = await customAxios.patch(\r\n        `/medical-labs/facility/approve/${id}`,\r\n        reqObject\r\n      );\r\n\r\n      if (res) {\r\n        fetchAllOrders();\r\n      }\r\n      setIsSubmitting(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openAppointmentBox}\r\n        onClose={handleClose}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            width: \"40%\", // Adjust this value to change the width of the dialog\r\n            maxWidth: \"none\", // Optional: This line removes the maximum width constraint\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">Set Appointment</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentDateInput}\r\n            onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"time\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentTimeInput}\r\n            onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n          />\r\n\r\n          {labItems.map((labItem, index) => (\r\n            <TextField\r\n              key={labItem._id}\r\n              fullWidth\r\n              type=\"number\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              label={`Cost for ${labItem.category} - ${labItem.test}`}\r\n              // value={labItemsCost[index].cost || 0}\r\n              value={\r\n                labItemsCost[index].cost === 0\r\n                  ? \"\"\r\n                  : labItemsCost[index].cost || \"\"\r\n              }\r\n              onChange={(e) =>\r\n                setLabItemsCost((prevCosts) => {\r\n                  const newCosts = [...prevCosts];\r\n                  newCosts[index] = {\r\n                    ...newCosts[index],\r\n                    cost: parseFloat(e.target.value) || 0,\r\n                  };\r\n                  return newCosts;\r\n                })\r\n              }\r\n            />\r\n          ))}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton\r\n            onClick={() => approveOrder()}\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n          >\r\n            Book Appointment\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nAppointmentPopup.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  fetchAllOrders: PropTypes.func,\r\n  openAppointmentBox: PropTypes.bool,\r\n  setOpenAppointmentBox: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState, useCallback } from \"react\";\r\n\r\n// @mui\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\n\r\nimport { UploadAvatar, Upload, UploadBox } from \"src/components/upload\";\r\n\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { enqueueSnackbar } from \"notistack\";\r\nimport SingleFilePreview from \"src/components/upload/preview-single-file\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UploadPopup({\r\n  row,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n  setOpenAppointmentBox,\r\n  openAppointmentBox,\r\n  openUploadBox,\r\n  handleClose,\r\n  currentTest: { _id },\r\n  setCompletedTests,\r\n  setDownloadURL,\r\n}) {\r\n  const confirm = useBoolean();\r\n\r\n  const [labNotes, setLabNotes] = useState(\"\");\r\n  const { labOrderId } = row;\r\n  console.log(row);\r\n\r\n  // upload\r\n  const [files, setFiles] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  const [uploadedFiles, setUploadedFiles] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const preview = useBoolean();\r\n\r\n  const handleDropSingleFile = useCallback((acceptedFiles) => {\r\n    const newFile = acceptedFiles[0];\r\n    if (newFile) {\r\n      setFile(\r\n        Object.assign(newFile, {\r\n          preview: URL.createObjectURL(newFile),\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleDropAvatar = useCallback((acceptedFiles) => {\r\n    const newFile = acceptedFiles[0];\r\n    if (newFile) {\r\n      setAvatarUrl(\r\n        Object.assign(newFile, {\r\n          preview: URL.createObjectURL(newFile),\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // const handleDropMultiFile = useCallback(\r\n  //   (acceptedFiles) => {\r\n  //     setFiles([\r\n  //       ...files,\r\n  //       ...acceptedFiles.map((newFile) =>\r\n  //         Object.assign(newFile, {\r\n  //           preview: URL.createObjectURL(newFile),\r\n  //         })\r\n  //       ),\r\n  //     ]);\r\n  //   },\r\n  //   [files]\r\n  // );\r\n  const handleDropMultiFile = useCallback(\r\n    (acceptedFiles) => {\r\n      // Only allow one file to be added\r\n      if (acceptedFiles.length > 0 && files.length === 0) {\r\n        const newFile = acceptedFiles[0];\r\n        setFiles([\r\n          Object.assign(newFile, {\r\n            preview: URL.createObjectURL(newFile),\r\n          }),\r\n        ]);\r\n      }\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const handleRemoveFile = (inputFile) => {\r\n    const filesFiltered = files.filter(\r\n      (fileFiltered) => fileFiltered !== inputFile\r\n    );\r\n    setFiles(filesFiltered);\r\n  };\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([]);\r\n  };\r\n\r\n  console.log(files);\r\n\r\n  const handleUploadFile = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const formData = new FormData();\r\n      // if (uploadedFiles.length > 1) {\r\n      //   uploadedFiles?.map((item, index) =>\r\n      //     formData.append(`image${index}`, uploadedFiles[index])\r\n      //   );\r\n      // } else {\r\n      const singleFile = files[0];\r\n      formData.append(\"image\", singleFile);\r\n      setDownloadURL((prev) => [...prev, { _id, singleFile }]);\r\n      // }\r\n\r\n      formData.append(\"labOrderId\", labOrderId.trim());\r\n\r\n      console.log(formData.get(\"image\"));\r\n      const res = await customAxios.patch(\r\n        `/medical-labs/facility/result/upload/${_id}`,\r\n        formData\r\n      );\r\n      setCompletedTests((prevCompletedTests) => [...prevCompletedTests, _id]);\r\n      handleClose();\r\n      setFiles([]);\r\n      console.log(res);\r\n      enqueueSnackbar(\"Upload successful!\");\r\n      setIsSubmitting(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // const handleInitialUpload = () => {\r\n  //   setUploadedFiles(files);\r\n  //   setFiles([]);\r\n  // };\r\n\r\n  console.log(files);\r\n\r\n  return (\r\n    <>\r\n      {/* upload */}\r\n      <Dialog\r\n        open={openUploadBox}\r\n        onClose={handleClose}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            maxWidth: \"500px\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">Upload Results</DialogTitle>\r\n\r\n        <DialogContent>\r\n          {/* <Typography sx={{ mb: 3 }}>Please fill the form below</Typography> */}\r\n\r\n          <Upload\r\n            multiple\r\n            thumbnail={preview.value}\r\n            files={files}\r\n            onDrop={handleDropMultiFile}\r\n            onRemove={handleRemoveFile}\r\n            // onRemoveAll={handleRemoveAllFiles}\r\n            // onUpload={handleInitialUpload}\r\n            disabled={files.length > 0}\r\n          />\r\n\r\n          {/* <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Lab Notes\"\r\n            multiline\r\n            minRows={3}\r\n            value={labNotes}\r\n            onChange={(e) => setLabNotes(e.target.value)}\r\n            sx={{ mt: \"15px\" }}\r\n          /> */}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\" color=\"inherit\">\r\n            Discard\r\n          </Button>\r\n          <LoadingButton\r\n            onClick={handleUploadFile}\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n            disabled={files.length === 0}\r\n          >\r\n            Upload\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nUploadPopup.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  fetchAllOrders: PropTypes.func,\r\n  openAppointmentBox: PropTypes.bool,\r\n  setOpenAppointmentBox: PropTypes.func,\r\n  currentTest: PropTypes.object,\r\n  setCompletedTests: PropTypes.func,\r\n  setDownloadURL: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n// @mui\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { ListItemText, Stack } from \"@mui/material\";\r\nimport UploadPopup from \"./upload-popup\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UploadList({\r\n  row,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n  handleClose,\r\n  // setOpenUploadBox,\r\n  openUploadList,\r\n}) {\r\n  const { id, labOrderId, labItems } = row;\r\n  const confirm = useBoolean();\r\n  console.log(row);\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [openUploadLabBox, setOpenUploadBox] = useState(false);\r\n  const [currentTest, setCurrentTest] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [completedTests, setCompletedTests] = useState([]);\r\n  const [downloadURL, setDownloadURL] = useState([]);\r\n\r\n  const markAsCompletedFunc = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await customAxios.patch(\r\n        `/medical-labs/facility/result/complete/${labOrderId}`\r\n      );\r\n      if (res) {\r\n        fetchAllOrders();\r\n      }\r\n      setIsLoading(false);\r\n\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = (labItemId) => {\r\n    const fileToDownload = downloadURL.find((item) => item._id === labItemId);\r\n\r\n    if (fileToDownload) {\r\n      // You can use the fileToDownload.singleFile.path or .preview to construct the download link\r\n      // For example, you might want to create an anchor element to initiate the download\r\n      const downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = fileToDownload.singleFile.preview;\r\n      downloadLink.download = fileToDownload.singleFile.path;\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    } else {\r\n      // Handle case when the file is not found\r\n      console.error(`File not found for lab item with id: ${labItemId}`);\r\n    }\r\n  };\r\n\r\n  const previewFile = (labItemId) => {\r\n    const fileToPreview = downloadURL.find((item) => item._id === labItemId);\r\n\r\n    if (fileToPreview) {\r\n      // You can use the fileToPreview.singleFile.path or .preview to construct the preview link\r\n      // For example, you might want to open the preview in a new tab\r\n      window.open(fileToPreview.singleFile.preview, \"_blank\");\r\n    } else {\r\n      // Handle case when the file is not found\r\n      console.error(`File not found for lab item with id: ${labItemId}`);\r\n    }\r\n  };\r\n\r\n  console.log(currentTest);\r\n  console.log(completedTests);\r\n  console.log(downloadURL);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={openUploadList}\r\n        onClose={handleClose}\r\n        sx={{\r\n          \"& .MuiDialog-paper\": {\r\n            width: \"500px\",\r\n            maxWidth: \"none\",\r\n          },\r\n          \"@media (max-width: 500px )\": {\r\n            width: \"100%\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle align=\"center\">Upload Lab Results</DialogTitle>\r\n\r\n        <DialogContent>\r\n          {labItems.map((labItem) => (\r\n            <Stack\r\n              key={labItem.id}\r\n              flexDirection={\"row\"}\r\n              sx={{ margin: \"25px 0\" }}\r\n            >\r\n              <ListItemText\r\n                primary={labItem.category}\r\n                secondary={labItem.test}\r\n                primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n                secondaryTypographyProps={{\r\n                  mt: 0.5,\r\n                  component: \"span\",\r\n                  typography: \"caption\",\r\n                }}\r\n              />\r\n\r\n              {completedTests.includes(labItem._id) ? (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => previewFile(labItem._id)}\r\n                >\r\n                  Preview\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setOpenUploadBox(true);\r\n                    setCurrentTest(labItem);\r\n                  }}\r\n                >\r\n                  Upload Result\r\n                </Button>\r\n              )}\r\n            </Stack>\r\n          ))}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\" color=\"inherit\">\r\n            Close\r\n          </Button>\r\n          <LoadingButton\r\n            onClick={() => markAsCompletedFunc()}\r\n            variant=\"contained\"\r\n            loading={isLoading}\r\n          >\r\n            Mark as Complete\r\n          </LoadingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <UploadPopup\r\n        row={row}\r\n        currentTest={currentTest}\r\n        openUploadBox={openUploadLabBox}\r\n        handleClose={() => setOpenUploadBox(false)}\r\n        setCompletedTests={setCompletedTests}\r\n        setDownloadURL={setDownloadURL}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUploadList.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  fetchAllOrders: PropTypes.func,\r\n  openUploadList: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport DetailsPopup from \"./components/details-popup\";\r\nimport AppointmentPopup from \"./components/appointment-popup\";\r\nimport UploadPopup from \"./components/upload-popup\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { format } from \"date-fns\";\r\nimport UploadList from \"./components/upload-list\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderTableRow({\r\n  row,\r\n  selected,\r\n  onViewRow,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n}) {\r\n  const {\r\n    orderType,\r\n    priority,\r\n    status,\r\n    // appointmentTime,\r\n    // _id,\r\n    // providerID,\r\n    // userID,\r\n    patientName,\r\n    id,\r\n    labItems,\r\n    // facilityID,\r\n    // description,\r\n    // appointmentID,\r\n    dateOrdered,\r\n    // result,\r\n    // feeAmount,\r\n    // paid,\r\n    appointmentDate,\r\n    labOrderId,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n  const [openCompleteBox, setOpenCompleteBox] = useState(false);\r\n  const [openUploadBox, setOpenUploadBox] = useState(false);\r\n  const [openUploadList, setOpenUploadList] = useState(false);\r\n  const [openAppointmentBox, setOpenAppointmentBox] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  console.log(row);\r\n\r\n  const renderPrimary = (\r\n    <TableRow hover selected={selected}>\r\n      {/* <TableCell padding=\"checkbox\">\r\n        <Checkbox checked={selected} onClick={onSelectRow} />\r\n      </TableCell> */}\r\n\r\n      <TableCell>\r\n        <Box\r\n          onClick={onViewRow}\r\n          sx={{\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n              textDecoration: \"underline\",\r\n            },\r\n          }}\r\n        >\r\n          {`${labOrderId}`}\r\n        </Box>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        {/* <Avatar\r\n          alt={patientName}\r\n          src={\r\n            patientName ||\r\n            \"https://cdn-icons-png.flaticon.com/512/1177/1177568.png\"\r\n          }\r\n          sx={{ mr: 2 }}\r\n        /> */}\r\n\r\n        <ListItemText\r\n          primary={patientName}\r\n          // secondary=\"0234521425\"\r\n          primaryTypographyProps={{ typography: \"body2\" }}\r\n          secondaryTypographyProps={{\r\n            component: \"span\",\r\n            color: \"text.disabled\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <ListItemText\r\n          primary={format(new Date(appointmentDate), \"dd/MM/yyyy\")}\r\n          // secondary={format(new Date(createdAt), 'p')}\r\n          // primary=\"2023-08-21\"\r\n          // secondary=\"14:32\"\r\n          primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n          secondaryTypographyProps={{\r\n            mt: 0.5,\r\n            component: \"span\",\r\n            typography: \"caption\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {\" \"}\r\n        {labItems.map((lab) => lab.category).join(\", \")}{\" \"}\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (status === \"approved\" && \"success\") ||\r\n            (status === \"pending\" && \"warning\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {status}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (priority === \"regular\" && \"success\") ||\r\n            (priority === \"urgent\" && \"warning\") ||\r\n            (priority === \"emergency\" && \"error\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {priority}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"right\" sx={{ px: 1, whiteSpace: \"nowrap\" }}>\r\n        <IconButton\r\n          color={popover.open ? \"inherit\" : \"default\"}\r\n          onClick={popover.onOpen}\r\n        >\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderPrimary}\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ maxWidth: 200 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenDialogBox(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenUploadList(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"material-symbols-light:upload-sharp\" />\r\n          Upload Results\r\n        </MenuItem>\r\n\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            setOpenCompleteBox(true);\r\n            // onViewRow();\r\n            // popover.onClose();\r\n            // markAsCompletedFunc();\r\n          }}\r\n        >\r\n          <Iconify icon=\"fluent-mdl2:completed-solid\" />\r\n          Mark as completed\r\n        </MenuItem> */}\r\n\r\n        <Divider sx={{ borderStyle: \"dashed\" }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            alert(\"Cancel Order\");\r\n          }}\r\n        >\r\n          <Iconify icon=\"flat-color-icons:cancel\" />\r\n          Cancel\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <DetailsPopup\r\n        row={row}\r\n        openDialogBox={openDialogBox}\r\n        setOpenDialogBox={setOpenDialogBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n      />\r\n\r\n      <AppointmentPopup\r\n        openAppointmentBox={openAppointmentBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n        row={row}\r\n      />\r\n\r\n      {/* <UploadPopup\r\n        openUploadBox={openUploadBox}\r\n        handleClose={() => setOpenUploadBox(false)}\r\n        // id={row?.id}\r\n        row={row}\r\n      /> */}\r\n      <UploadList\r\n        openUploadList={openUploadList}\r\n        handleClose={() => setOpenUploadList(false)}\r\n        setOpenUploadBox={setOpenUploadBox}\r\n        // id={row?.id}\r\n        row={row}\r\n      />\r\n      {/* \r\n      <ConfirmDialog\r\n        open={openCompleteBox}\r\n        onClose={() => setOpenCompleteBox(false)}\r\n        title=\"Complete Upload of Lab Result\"\r\n        content=\"Are you sure you want to set order to complete?\"\r\n        action={\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            loading={isLoading}\r\n            onClick={() => markAsCompletedFunc()}\r\n          >\r\n            Complete\r\n          </LoadingButton>\r\n        }\r\n      /> */}\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nOrderTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  fetchAllOrders: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useCallback } from \"react\";\r\n// @mui\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  canReset,\r\n  onResetFilters,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters(\"orderType\", event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"startDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters(\"endDate\", newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: \"flex-end\", md: \"center\" }}\r\n        direction={{\r\n          xs: \"column\",\r\n          md: \"row\",\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 200 },\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 200 },\r\n          }}\r\n        />\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          flexGrow={1}\r\n          sx={{ width: 1 }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            value={filters.orderType}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search by order type...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify\r\n                    icon=\"eva:search-fill\"\r\n                    sx={{ color: \"text.disabled\" }}\r\n                  />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        {canReset && (\r\n          <Button\r\n            color=\"error\"\r\n            sx={{ flexShrink: 0 }}\r\n            onClick={onResetFilters}\r\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n          >\r\n            Clear\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem> */}\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nOrderTableToolbar.propTypes = {\r\n  canReset: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveStatus = () => {\r\n    onFilters('status', 'all');\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {filters.status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nOrderTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n// @mui\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from \"src/_mock\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport OrderTableRow from \"../order-table-row\";\r\nimport OrderTableToolbar from \"../order-table-toolbar\";\r\nimport OrderTableFiltersResult from \"../order-table-filters-result\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS_OPTIONS = [\r\n  { value: \"all\", label: \"All\" },\r\n  ...ORDER_STATUS_OPTIONS,\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"orderNumber\", label: \"Appointment ID\", width: 110 },\r\n  { id: \"name\", label: \"Patient\", width: 140 },\r\n  { id: \"createdAt\", label: \"Date\", width: 120 },\r\n  { id: \"totalQuantity\", label: \"Order Type\", width: 200, align: \"center\" },\r\n  { id: \"totalAmount\", label: \"Status\", width: 110 },\r\n  { id: \"status\", label: \"Priority\", width: 110 },\r\n  { id: \"\", width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: \"\",\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n  orderType: \"\",\r\n  labOrderId: \"\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderListView() {\r\n  const table = useTable({ defaultOrderBy: \"orderNumber\" });\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const { user } = useAuthContext();\r\n\r\n  const fetchAllOrders = async () => {\r\n    try {\r\n      const { data } = await customAxios.get(\r\n        `/medical-labs/facility/approved/${user?.facilityID}`\r\n      );\r\n\r\n      setTableData(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  console.log(tableData);\r\n\r\n  useEffect(() => {\r\n    fetchAllOrders();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.order.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <CustomBreadcrumbs\r\n          heading=\"All Appointments\"\r\n          links={[\r\n            {\r\n              name: \"Dashboard\",\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: \"Appointments\",\r\n              href: paths.dashboard.order.root,\r\n            },\r\n            { name: \"List\" },\r\n          ]}\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card>\r\n          {/* <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: (theme) =>\r\n                `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                iconPosition=\"end\"\r\n                value={tab.value}\r\n                label={tab.label}\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={\r\n                      (tab.value === \"completed\" && \"success\") ||\r\n                      (tab.value === \"pending\" && \"warning\") ||\r\n                      (tab.value === \"cancelled\" && \"error\") ||\r\n                      \"default\"\r\n                    }\r\n                  >\r\n                    {tab.value === \"all\" && tableData.length}\r\n                    {tab.value === \"completed\" &&\r\n                      tableData.filter((order) => order.status === \"Completed\")\r\n                        .length}\r\n\r\n                    {tab.value === \"pending\" &&\r\n                      tableData.filter((order) => order.status === \"Pending\")\r\n                        .length}\r\n                    {tab.value === \"cancelled\" &&\r\n                      tableData.filter((order) => order.status === \"Cancelled\")\r\n                        .length}\r\n                    {tab.value === \"refunded\" &&\r\n                      tableData.filter((order) => order.status === \"Refunded\")\r\n                        .length}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs> */}\r\n\r\n          <OrderTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            canReset={canReset}\r\n            onResetFilters={handleResetFilters}\r\n          />\r\n\r\n          {canReset && (\r\n            <OrderTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 960 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <OrderTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        fetchAllOrders={fetchAllOrders}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete{\" \"}\r\n            <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { status, name, startDate, endDate, orderType, labOrderId } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (orderType) {\r\n    inputData = inputData.filter(\r\n      (order) =>\r\n        order.orderType.toLowerCase().indexOf(orderType.toLowerCase()) !== -1\r\n      // order.customer.name.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n      // order.customer.email.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((order) => order.status === status);\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (order) =>\r\n          fTimestamp(order.createdAt) >= fTimestamp(startDate) &&\r\n          fTimestamp(order.createdAt) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderDetailsInfo({ customer, delivery, payment, shippingAddress }) {\r\n  const renderCustomer = (\r\n    <>\r\n      <CardHeader\r\n        title=\"Customer Info\"\r\n        action={\r\n          <IconButton>\r\n            <Iconify icon=\"solar:pen-bold\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Stack direction=\"row\" sx={{ p: 3 }}>\r\n        <Avatar\r\n          alt={customer.name}\r\n          src={customer.avatarUrl}\r\n          sx={{ width: 48, height: 48, mr: 2 }}\r\n        />\r\n\r\n        <Stack spacing={0.5} alignItems=\"flex-start\" sx={{ typography: 'body2' }}>\r\n          <Typography variant=\"subtitle2\">{customer.name}</Typography>\r\n\r\n          <Box sx={{ color: 'text.secondary' }}>{customer.email}</Box>\r\n\r\n          <Box>\r\n            IP Address:\r\n            <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n              {customer.ipAddress}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Button\r\n            size=\"small\"\r\n            color=\"error\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ mt: 1 }}\r\n          >\r\n            Add to Blacklist\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  const renderDelivery = (\r\n    <>\r\n      <CardHeader\r\n        title=\"Delivery\"\r\n        action={\r\n          <IconButton>\r\n            <Iconify icon=\"solar:pen-bold\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Stack spacing={1.5} sx={{ p: 3, typography: 'body2' }}>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', width: 120, flexShrink: 0 }}>\r\n            Ship by\r\n          </Box>\r\n          {delivery.shipBy}\r\n        </Stack>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', width: 120, flexShrink: 0 }}>\r\n            Speedy\r\n          </Box>\r\n          {delivery.speedy}\r\n        </Stack>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', width: 120, flexShrink: 0 }}>\r\n            Tracking No.\r\n          </Box>\r\n          <Link underline=\"always\" color=\"inherit\">\r\n            {delivery.trackingNumber}\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  const renderShipping = (\r\n    <>\r\n      <CardHeader\r\n        title=\"Shipping\"\r\n        action={\r\n          <IconButton>\r\n            <Iconify icon=\"solar:pen-bold\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Stack spacing={1.5} sx={{ p: 3, typography: 'body2' }}>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', width: 120, flexShrink: 0 }}>\r\n            Address\r\n          </Box>\r\n          {shippingAddress.fullAddress}\r\n        </Stack>\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', width: 120, flexShrink: 0 }}>\r\n            Phone number\r\n          </Box>\r\n          {shippingAddress.phoneNumber}\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  const renderPayment = (\r\n    <>\r\n      <CardHeader\r\n        title=\"Payment\"\r\n        action={\r\n          <IconButton>\r\n            <Iconify icon=\"solar:pen-bold\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Stack direction=\"row\" alignItems=\"center\" sx={{ p: 3, typography: 'body2' }}>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', flexGrow: 1 }}>\r\n          Phone number\r\n        </Box>\r\n\r\n        {payment.cardNumber}\r\n        <Iconify icon=\"logos:mastercard\" width={24} sx={{ ml: 0.5 }} />\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      {renderCustomer}\r\n\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n      {renderDelivery}\r\n\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n      {renderShipping}\r\n\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n      {renderPayment}\r\n    </Card>\r\n  );\r\n}\r\n\r\nOrderDetailsInfo.propTypes = {\r\n  customer: PropTypes.object,\r\n  delivery: PropTypes.object,\r\n  payment: PropTypes.object,\r\n  shippingAddress: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderDetailsItems({\r\n  items,\r\n  shipping,\r\n  discount,\r\n  taxes,\r\n  subTotal,\r\n  totalAmount,\r\n}) {\r\n  const renderTotal = (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems=\"flex-end\"\r\n      sx={{ my: 3, textAlign: 'right', typography: 'body2' }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Subtotal</Box>\r\n        <Box sx={{ width: 160, typography: 'subtitle2' }}>{fCurrency(subTotal) || '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Shipping</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(shipping && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {shipping ? `- ${fCurrency(shipping)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Discount</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(discount && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {discount ? `- ${fCurrency(discount)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Taxes</Box>\r\n        <Box sx={{ width: 160 }}>{taxes ? fCurrency(taxes) : '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\" sx={{ typography: 'subtitle1' }}>\r\n        <Box>Total</Box>\r\n        <Box sx={{ width: 160 }}>{fCurrency(totalAmount) || '-'}</Box>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Details\" />\r\n\r\n      <Stack\r\n        sx={{\r\n          px: 3,\r\n        }}\r\n      >\r\n        <Scrollbar>\r\n          {items.map((item) => (\r\n            <Stack\r\n              key={item.id}\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                py: 3,\r\n                minWidth: 640,\r\n                borderBottom: (theme) => `dashed 2px ${theme.palette.background.neutral}`,\r\n              }}\r\n            >\r\n              <Avatar src={item.coverUrl} variant=\"rounded\" sx={{ width: 48, height: 48, mr: 2 }} />\r\n\r\n              <ListItemText\r\n                primary={item.name}\r\n                secondary={item.sku}\r\n                primaryTypographyProps={{\r\n                  typography: 'body2',\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  component: 'span',\r\n                  color: 'text.disabled',\r\n                  mt: 0.5,\r\n                }}\r\n              />\r\n\r\n              <Box sx={{ typography: 'body2' }}>x{item.quantity}</Box>\r\n\r\n              <Box sx={{ width: 110, textAlign: 'right', typography: 'subtitle2' }}>\r\n                {fCurrency(item.price)}\r\n              </Box>\r\n            </Stack>\r\n          ))}\r\n        </Scrollbar>\r\n\r\n        {renderTotal}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nOrderDetailsItems.propTypes = {\r\n  discount: PropTypes.number,\r\n  items: PropTypes.array,\r\n  shipping: PropTypes.number,\r\n  subTotal: PropTypes.number,\r\n  taxes: PropTypes.number,\r\n  totalAmount: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n// utils\r\nimport { fDateTime } from 'src/utils/format-time';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderDetailsToolbar({\r\n  status,\r\n  backLink,\r\n  createdAt,\r\n  orderNumber,\r\n  statusOptions,\r\n  onChangeStatus,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={3}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      >\r\n        <Stack spacing={1} direction=\"row\" alignItems=\"flex-start\">\r\n          <IconButton component={RouterLink} href={backLink}>\r\n            <Iconify icon=\"eva:arrow-ios-back-fill\" />\r\n          </IconButton>\r\n\r\n          <Stack spacing={0.5}>\r\n            <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n              <Typography variant=\"h4\"> Order {orderNumber} </Typography>\r\n              <Label\r\n                variant=\"soft\"\r\n                color={\r\n                  (status === 'completed' && 'success') ||\r\n                  (status === 'pending' && 'warning') ||\r\n                  (status === 'cancelled' && 'error') ||\r\n                  'default'\r\n                }\r\n              >\r\n                {status}\r\n              </Label>\r\n            </Stack>\r\n\r\n            <Typography variant=\"body2\" sx={{ color: 'text.disabled' }}>\r\n              {fDateTime(createdAt)}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack\r\n          flexGrow={1}\r\n          spacing={1.5}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n        >\r\n          <Button\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            endIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" />}\r\n            onClick={popover.onOpen}\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {status}\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            startIcon={<Iconify icon=\"solar:printer-minimalistic-bold\" />}\r\n          >\r\n            Print\r\n          </Button>\r\n\r\n          <Button color=\"inherit\" variant=\"contained\" startIcon={<Iconify icon=\"solar:pen-bold\" />}>\r\n            Edit\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"top-right\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        {statusOptions.map((option) => (\r\n          <MenuItem\r\n            key={option.value}\r\n            selected={option.value === status}\r\n            onClick={() => {\r\n              popover.onClose();\r\n              onChangeStatus(option.value);\r\n            }}\r\n          >\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nOrderDetailsToolbar.propTypes = {\r\n  backLink: PropTypes.string,\r\n  createdAt: PropTypes.instanceOf(Date),\r\n  onChangeStatus: PropTypes.func,\r\n  orderNumber: PropTypes.string,\r\n  status: PropTypes.string,\r\n  statusOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineItem, { timelineItemClasses } from '@mui/lab/TimelineItem';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Typography from '@mui/material/Typography';\r\n// utils\r\nimport { fDateTime } from 'src/utils/format-time';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderDetailsHistory({ history }) {\r\n  const renderSummary = (\r\n    <Stack\r\n      spacing={2}\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      sx={{\r\n        p: 2.5,\r\n        minWidth: 260,\r\n        flexShrink: 0,\r\n        borderRadius: 2,\r\n        typography: 'body2',\r\n        borderStyle: 'dashed',\r\n      }}\r\n    >\r\n      <Stack spacing={0.5}>\r\n        <Box sx={{ color: 'text.disabled' }}>Order time</Box>\r\n        {fDateTime(history.orderTime)}\r\n      </Stack>\r\n      <Stack spacing={0.5}>\r\n        <Box sx={{ color: 'text.disabled' }}>Payment time</Box>\r\n        {fDateTime(history.orderTime)}\r\n      </Stack>\r\n      <Stack spacing={0.5}>\r\n        <Box sx={{ color: 'text.disabled' }}>Delivery time for the carrier</Box>\r\n        {fDateTime(history.orderTime)}\r\n      </Stack>\r\n      <Stack spacing={0.5}>\r\n        <Box sx={{ color: 'text.disabled' }}>Completion time</Box>\r\n        {fDateTime(history.orderTime)}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderTimeline = (\r\n    <Timeline\r\n      sx={{\r\n        p: 0,\r\n        m: 0,\r\n        [`& .${timelineItemClasses.root}:before`]: {\r\n          flex: 0,\r\n          padding: 0,\r\n        },\r\n      }}\r\n    >\r\n      {history.timeline.map((item, index) => {\r\n        const firstTimeline = index === 0;\r\n\r\n        const lastTimeline = index === history.timeline.length - 1;\r\n\r\n        return (\r\n          <TimelineItem key={item.title}>\r\n            <TimelineSeparator>\r\n              <TimelineDot color={(firstTimeline && 'primary') || 'grey'} />\r\n              {lastTimeline ? null : <TimelineConnector />}\r\n            </TimelineSeparator>\r\n\r\n            <TimelineContent>\r\n              <Typography variant=\"subtitle2\">{item.title}</Typography>\r\n\r\n              <Box sx={{ color: 'text.disabled', typography: 'caption', mt: 0.5 }}>\r\n                {fDateTime(item.time)}\r\n              </Box>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        );\r\n      })}\r\n    </Timeline>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"History\" />\r\n      <Stack\r\n        spacing={3}\r\n        alignItems={{ md: 'flex-start' }}\r\n        direction={{ xs: 'column-reverse', md: 'row' }}\r\n        sx={{ p: 3 }}\r\n      >\r\n        {renderTimeline}\r\n\r\n        {renderSummary}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nOrderDetailsHistory.propTypes = {\r\n  history: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\n//\r\nimport OrderDetailsInfo from '../order-details-info';\r\nimport OrderDetailsItems from '../order-details-item';\r\nimport OrderDetailsToolbar from '../order-details-toolbar';\r\nimport OrderDetailsHistory from '../order-details-history';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderDetailsView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  const currentOrder = _orders.filter((order) => order.id === id)[0];\r\n\r\n  const [status, setStatus] = useState(currentOrder.status);\r\n\r\n  const handleChangeStatus = useCallback((newValue) => {\r\n    setStatus(newValue);\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <OrderDetailsToolbar\r\n        backLink={paths.dashboard.order.root}\r\n        orderNumber={currentOrder.orderNumber}\r\n        createdAt={currentOrder.createdAt}\r\n        status={status}\r\n        onChangeStatus={handleChangeStatus}\r\n        statusOptions={ORDER_STATUS_OPTIONS}\r\n      />\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} md={8}>\r\n          <Stack spacing={3} direction={{ xs: 'column-reverse', md: 'column' }}>\r\n            <OrderDetailsItems\r\n              items={currentOrder.items}\r\n              taxes={currentOrder.taxes}\r\n              shipping={currentOrder.shipping}\r\n              discount={currentOrder.discount}\r\n              subTotal={currentOrder.subTotal}\r\n              totalAmount={currentOrder.totalAmount}\r\n            />\r\n\r\n            <OrderDetailsHistory history={currentOrder.history} />\r\n          </Stack>\r\n        </Grid>\r\n\r\n        <Grid xs={12} md={4}>\r\n          <OrderDetailsInfo\r\n            customer={currentOrder.customer}\r\n            delivery={currentOrder.delivery}\r\n            payment={currentOrder.payment}\r\n            shippingAddress={currentOrder.shippingAddress}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nOrderDetailsView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport CustomPopover, { usePopover } from \"src/components/custom-popover\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport DetailsPopup from \"./components/details-popup\";\r\nimport AppointmentPopup from \"./components/appointment-popup\";\r\nimport { format } from \"date-fns\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AllOrderTableRow({\r\n  row,\r\n  selected,\r\n  onViewRow,\r\n  onSelectRow,\r\n  onDeleteRow,\r\n  fetchAllOrders,\r\n}) {\r\n  const {\r\n    orderNo,\r\n    doctor,\r\n    reqDate,\r\n    labItems,\r\n    priority,\r\n    photo,\r\n    status,\r\n    appointmentTime,\r\n    _id,\r\n    providerID,\r\n    userID,\r\n    patientName,\r\n    facilityID,\r\n    description,\r\n    appointmentID,\r\n    dateOrdered,\r\n    result,\r\n    feeAmount,\r\n    paid,\r\n    labOrderId,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n\r\n  const [openAppointmentBox, setOpenAppointmentBox] = useState(false);\r\n\r\n  console.log(row);\r\n\r\n  const renderPrimary = (\r\n    <TableRow hover selected={selected}>\r\n      <TableCell>\r\n        <Box\r\n          onClick={onViewRow}\r\n          sx={{\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n              textDecoration: \"underline\",\r\n            },\r\n          }}\r\n        >\r\n          {`${labOrderId}`}\r\n        </Box>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        {/* <Avatar\r\n          alt={patientName}\r\n          src={\r\n            patientName ||\r\n            \"https://cdn-icons-png.flaticon.com/512/1177/1177568.png\"\r\n          }\r\n          sx={{ mr: 2 }}\r\n        /> */}\r\n\r\n        <ListItemText\r\n          primary={patientName}\r\n          // secondary=\"0234521425\"\r\n          primaryTypographyProps={{ typography: \"body2\" }}\r\n          secondaryTypographyProps={{\r\n            component: \"span\",\r\n            color: \"text.disabled\",\r\n          }}\r\n          sx={{ whiteSpace: \"nowrap\" }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <ListItemText\r\n          // primary={format(new Date(dateOrdered), \"dd MMM yyyy\")}\r\n          // secondary={format(new Date(createdAt), 'p')}\r\n          // primary={formattedDate}\r\n          primary={format(new Date(dateOrdered), \"dd/MM/yyyy\")}\r\n          // secondary=\"14:32\"\r\n          primaryTypographyProps={{ typography: \"body2\", noWrap: true }}\r\n          secondaryTypographyProps={{\r\n            mt: 0.5,\r\n            component: \"span\",\r\n            typography: \"caption\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell align=\"center\">\r\n        {labItems.map((lab) => lab.category).join(\", \")}{\" \"}\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (status === \"approved\" && \"success\") ||\r\n            (status === \"pending\" && \"warning\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {status}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Label\r\n          variant=\"soft\"\r\n          color={\r\n            (priority === \"regular\" && \"success\") ||\r\n            (priority === \"urgent\" && \"warning\") ||\r\n            (priority === \"emergency\" && \"error\") ||\r\n            \"default\"\r\n          }\r\n        >\r\n          {priority}\r\n        </Label>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"right\" sx={{ px: 1, whiteSpace: \"nowrap\" }}>\r\n        <IconButton\r\n          color={popover.open ? \"inherit\" : \"default\"}\r\n          onClick={popover.onOpen}\r\n        >\r\n          <Iconify icon=\"eva:more-vertical-fill\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderPrimary}\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            setOpenDialogBox(true);\r\n            // onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View Order\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: \"dashed\" }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            alert(\"Cancel Order\");\r\n          }}\r\n        >\r\n          <Iconify icon=\"flat-color-icons:cancel\" />\r\n          Cancel Order\r\n        </MenuItem>\r\n      </CustomPopover>\r\n      <DetailsPopup\r\n        row={row}\r\n        openDialogBox={openDialogBox}\r\n        setOpenDialogBox={setOpenDialogBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n      />\r\n\r\n      <AppointmentPopup\r\n        openAppointmentBox={openAppointmentBox}\r\n        setOpenAppointmentBox={setOpenAppointmentBox}\r\n        row={row}\r\n        fetchAllOrders={() => fetchAllOrders()}\r\n      />\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nAllOrderTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n  fetchAllOrders: PropTypes.func,\r\n};\r\n","import { useState, useCallback, useContext, useEffect } from \"react\";\r\n// @mui\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Table from \"@mui/material/Table\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { useRouter } from \"src/routes/hooks\";\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from \"src/_mock\";\r\n// utils\r\nimport { fTimestamp } from \"src/utils/format-time\";\r\n// hooks\r\nimport { useBoolean } from \"src/hooks/use-boolean\";\r\n// components\r\nimport Label from \"src/components/label\";\r\nimport Iconify from \"src/components/iconify\";\r\nimport Scrollbar from \"src/components/scrollbar\";\r\nimport { ConfirmDialog } from \"src/components/custom-dialog\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from \"src/components/table\";\r\n//\r\nimport AllOrderTableRow from \"../all-order-table-row\";\r\nimport OrderTableToolbar from \"../order-table-toolbar\";\r\nimport OrderTableFiltersResult from \"../order-table-filters-result\";\r\nimport customAxios from \"src/utils/customAxios\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ORDER__OPTIONS = [\r\n  { value: \"pending\", label: \"Pending\" },\r\n  { value: \"approved\", label: \"Approved\" },\r\n  { value: \"cancelled\", label: \"Cancelled\" },\r\n];\r\n\r\nconst STATUS_OPTIONS = [{ value: \"all\", label: \"All\" }, ...ORDER__OPTIONS];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: \"orderNumber\", label: \"Order\", width: 120 },\r\n  { id: \"name\", label: \"Patient\", width: 120 },\r\n  { id: \"createdAt\", label: \"Requested Date (MM/DD/YYYY)\", width: 120 },\r\n  { id: \"totalQuantity\", label: \"Order Type\", width: 200, align: \"center\" },\r\n  { id: \"totalAmount\", label: \"Status\", width: 110 },\r\n  { id: \"status\", label: \"Priority\", width: 110 },\r\n  { id: \"\", width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  labOrderId: \"\",\r\n  status: \"all\",\r\n  startDate: null,\r\n  endDate: null,\r\n  orderType: \"\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AllOrderListView() {\r\n  const table = useTable({ defaultOrderBy: \"orderNo\" });\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const { user } = useAuthContext();\r\n\r\n  const [demoAPIArray, setDemoAPIArray] = useState([]);\r\n\r\n  const fetchAllOrders = async () => {\r\n    try {\r\n      const { data } = await customAxios.get(\r\n        `/medical-labs/faclity/pending/${user?.facilityID}`\r\n        // `/medical-labs/faclity/pending/lnGkszsOkvUi`\r\n      );\r\n\r\n      setTableData(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllOrders();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    filters.status !== \"all\" ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter(\r\n      (row) => !table.selected.includes(row.id)\r\n    );\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.order.details(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters(\"status\", newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n        <CustomBreadcrumbs\r\n          heading=\"All Orders\"\r\n          links={[\r\n            {\r\n              name: \"Dashboard\",\r\n              href: paths.dashboard.root,\r\n            },\r\n            {\r\n              name: \"Orders\",\r\n              href: paths.dashboard.order.root,\r\n            },\r\n            { name: \"List\" },\r\n          ]}\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card>\r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: (theme) =>\r\n                `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                iconPosition=\"end\"\r\n                value={tab.value}\r\n                label={tab.label}\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === \"all\" || tab.value === filters.status) &&\r\n                        \"filled\") ||\r\n                      \"soft\"\r\n                    }\r\n                    color={\r\n                      (tab.value === \"approved\" && \"success\") ||\r\n                      (tab.value === \"pending\" && \"warning\") ||\r\n                      (tab.value === \"cancelled\" && \"error\") ||\r\n                      \"default\"\r\n                    }\r\n                  >\r\n                    {tab.value === \"all\" && tableData.length}\r\n                    {tab.value === \"approved\" &&\r\n                      tableData.filter((order) => order.status === \"approved\")\r\n                        .length}\r\n\r\n                    {tab.value === \"pending\" &&\r\n                      tableData.filter((order) => order.status === \"pending\")\r\n                        .length}\r\n                    {tab.value === \"cancelled\" &&\r\n                      tableData.filter((order) => order.status === \"cancelled\")\r\n                        .length}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <OrderTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            canReset={canReset}\r\n            onResetFilters={handleResetFilters}\r\n          />\r\n\r\n          {canReset && (\r\n            <OrderTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: \"relative\", overflow: \"unset\" }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table\r\n                size={table.dense ? \"small\" : \"medium\"}\r\n                sx={{ minWidth: 960 }}\r\n              >\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <AllOrderTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        fetchAllOrders={fetchAllOrders}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(\r\n                      table.page,\r\n                      table.rowsPerPage,\r\n                      tableData.length\r\n                    )}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete{\" \"}\r\n            <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { status, startDate, endDate, labOrderId, orderType } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (orderType) {\r\n    inputData = inputData.filter(\r\n      (order) =>\r\n        order.orderType.toLowerCase().indexOf(orderType.toLowerCase()) !== -1\r\n      // order.customer.name.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n      // order.customer.email.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== \"all\") {\r\n    inputData = inputData.filter((order) => order.status === status);\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (order) =>\r\n          fTimestamp(order.createdAt) >= fTimestamp(startDate) &&\r\n          fTimestamp(order.createdAt) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n"],"names":["DetailsPopup","_ref","row","openDialogBox","setOpenDialogBox","setOpenAppointmentBox","dateOrdered","labOrderId","appointmentDate","labItems","providerContact","patientContact","providerName","Date","toLocaleDateString","day","month","year","console","log","_jsx","_Fragment","children","_jsxs","Dialog","open","onClose","sx","width","maxWidth","maxHeight","DialogTitle","align","ListItemText","primary","secondary","primaryTypographyProps","typography","noWrap","secondaryTypographyProps","mt","component","DialogContent","Stack","spacing","Paper","variant","p","minWidth","flexShrink","borderRadius","borderStyle","Box","color","patientName","Divider","my","borderColor","phoneNumber","email","map","lab","index","Typography","Label","category","test","format","priority","feeAmount","description","DialogActions","Button","onClick","status","AppointmentPopup","onDeleteRow","fetchAllOrders","openAppointmentBox","id","confirm","useBoolean","_useState","useState","_useState2","_slicedToArray","appointmentDateInput","setAppointmentDateInput","_useState3","_useState4","appointmentTimeInput","setAppointmentTimeInput","_useState5","_useState6","_useState7","labItem","listID","_id","cost","_useState8","labItemsCost","setLabItemsCost","_useState9","_useState10","isSubmitting","setIsSubmitting","handleClose","approveOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reqObject","wrap","_context","prev","next","appointmentTime","customAxios","patch","concat","sent","t0","stop","apply","arguments","mb","TextField","autoFocus","fullWidth","type","margin","value","onChange","e","target","label","prevCosts","newCosts","_toConsumableArray","_objectSpread","parseFloat","LoadingButton","loading","ConfirmDialog","onFalse","title","content","action","UploadPopup","openUploadBox","currentTest","setCompletedTests","setDownloadURL","files","setFiles","setFile","setAvatarUrl","_useState11","_useState12","preview","handleDropMultiFile","useCallback","acceptedFiles","newFile","Object","assign","URL","createObjectURL","length","handleUploadFile","formData","singleFile","res","FormData","append","trim","get","prevCompletedTests","enqueueSnackbar","error","Upload","multiple","thumbnail","onDrop","onRemove","inputFile","filesFiltered","filter","fileFiltered","disabled","UploadList","openUploadList","openUploadLabBox","setOpenUploadBox","setCurrentTest","isLoading","setIsLoading","completedTests","downloadURL","markAsCompletedFunc","flexDirection","includes","labItemId","fileToPreview","find","item","window","previewFile","OrderTableRow","selected","onViewRow","onSelectRow","orderType","popover","usePopover","setOpenUploadList","renderPrimary","TableRow","hover","TableCell","cursor","textDecoration","join","px","whiteSpace","IconButton","onOpen","Iconify","icon","CustomPopover","arrow","MenuItem","alert","OrderTableToolbar","filters","onFilters","canReset","onResetFilters","handleFilterName","event","handleFilterStartDate","newValue","handleFilterEndDate","alignItems","xs","md","direction","pr","DatePicker","startDate","slotProps","textField","endDate","flexGrow","placeholder","InputProps","startAdornment","InputAdornment","position","startIcon","OrderTableFiltersResult","results","other","_objectWithoutProperties","_excluded","shortLabel","shortDateLabel","ml","flexWrap","Block","Chip","size","onDelete","_excluded2","overflow","TABLE_HEAD","ORDER_STATUS_OPTIONS","defaultFilters","name","OrderListView","table","useTable","defaultOrderBy","settings","useSettingsContext","router","useRouter","tableData","setTableData","setFilters","user","useAuthContext","_yield$customAxios$ge","data","facilityID","useEffect","dateError","getTime","dataFiltered","inputData","comparator","stabilizedThis","el","sort","a","b","order","toLowerCase","indexOf","fTimestamp","createdAt","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","denseHeight","dense","notFound","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleDeleteRows","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleResetFilters","handleViewRow","push","paths","dashboard","details","Container","themeStretch","CustomBreadcrumbs","heading","links","href","root","Card","pt","TableContainer","TableSelectedAction","numSelected","rowCount","onSelectAllRows","checked","Tooltip","onTrue","Scrollbar","Table","TableHeadCustom","headLabel","onSort","TableBody","TableEmptyRows","height","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","OrderDetailsInfo","customer","delivery","payment","shippingAddress","renderCustomer","CardHeader","Avatar","alt","src","avatarUrl","mr","ipAddress","renderDelivery","shipBy","speedy","Link","underline","trackingNumber","renderShipping","fullAddress","renderPayment","cardNumber","OrderDetailsItems","items","shipping","discount","taxes","subTotal","totalAmount","renderTotal","textAlign","fCurrency","py","borderBottom","theme","palette","background","neutral","coverUrl","sku","quantity","price","OrderDetailsToolbar","backLink","orderNumber","statusOptions","onChangeStatus","RouterLink","fDateTime","justifyContent","endIcon","textTransform","option","OrderDetailsHistory","history","renderSummary","orderTime","renderTimeline","Timeline","m","timelineItemClasses","flex","padding","timeline","firstTimeline","lastTimeline","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","time","OrderDetailsView","currentOrder","_orders","setStatus","handleChangeStatus","Grid","container","AllOrderTableRow","orderNo","doctor","reqDate","photo","providerID","userID","appointmentID","result","paid","STATUS_OPTIONS","AllOrderListView","handleFilterStatus","Tabs","boxShadow","alpha","grey","tab","Tab","iconPosition"],"sourceRoot":""}