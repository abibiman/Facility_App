{"version":3,"file":"static/js/7265.fd787cd6.chunk.js","mappings":"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uKACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,YACZC,SACE,6JACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,eACNC,WAAY,YACZC,SACE,uGACFC,MAAO,eACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,cACNC,WAAY,YACZC,SACE,6HACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,YACZC,SACE,qXACFC,MAAO,aACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,SACNC,WAAY,YACZC,SACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,WACNC,WAAY,UACZC,SACE,6HACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,SACE,2GACFC,MAAO,QACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,SACE,iLACFC,MAAO,UACPC,SAAU,OACVC,WAAY,SAEd,CACEL,KAAM,gBACNC,WAAY,UACZC,SACE,qJACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,WACNC,WAAY,UACZC,SACE,uIACFC,MAAO,OACPC,SAAU,QACVC,WAAY,QAEd,CACEL,KAAM,eACNC,WAAY,UACZC,SACE,uJACFC,MAAO,UACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,aACNC,WAAY,UACZC,SACE,uHACFC,MAAO,QACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,YACNC,WAAY,UACZC,SACE,uHACFC,MAAO,iBACPC,SAAU,QACVC,WAAY,SAEd,CACEL,KAAM,UACNC,WAAY,UACZC,SACE,2GACFC,MAAO,aACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,SACNC,WAAY,UACZC,SACE,2FACFC,MAAO,WACPC,SAAU,QACVC,WAAY,UAEd,CACEL,KAAM,UACNC,WAAY,UACZC,SACE,iIACFC,MAAO,QACPC,SAAU,QACVC,WAAY,U,WC/KHC,EAA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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","components/map/styles.js","components/map/map-popup.js","components/map/map-marker.js","components/map/map-control.js","_mock/map/cities.js","_mock/map/countries.js","sections/_examples/extra/map-view/heatmap/control-panel.js","sections/_examples/extra/map-view/heatmap/map-style.js","sections/_examples/extra/map-view/heatmap/index.js","sections/_examples/extra/map-view/clusters/layers.js","sections/_examples/extra/map-view/clusters/index.js","sections/_examples/extra/map-view/interaction/control-panel.js","sections/_examples/extra/map-view/interaction/index.js","sections/_examples/extra/map-view/side-by-side/control-panel.js","sections/_examples/extra/map-view/side-by-side/index.js","sections/_examples/extra/map-view/change-theme/control-panel.js","sections/_examples/extra/map-view/change-theme/index.js","sections/_examples/extra/map-view/map-markers-popups.js","sections/_examples/extra/map-view/draggable-markers/control-panel.js","sections/_examples/extra/map-view/draggable-markers/index.js","sections/_examples/extra/map-view/viewport-animation/control-panel.js","sections/_examples/extra/map-view/viewport-animation/index.js","sections/_examples/extra/map-view/map-geo-json-animation.js","sections/_examples/extra/map-view/map-highlight-by-filter.js","sections/_examples/extra/map-view/index.js","pages/components/extra/map.js","utils/mapboxgl.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          '@media (max-width: 475px)': {\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Popup } from 'react-map-gl';\r\n// @mui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport GlobalStyles from '@mui/material/GlobalStyles';\r\n// theme\r\nimport { bgBlur } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function StyledMapControls() {\r\n  const theme = useTheme();\r\n\r\n  const inputGlobalStyles = (\r\n    <GlobalStyles\r\n      styles={{\r\n        '.mapboxgl-ctrl.mapboxgl-ctrl-group': {\r\n          borderRadius: '8px',\r\n          boxShadow: theme.customShadows.z8,\r\n        },\r\n        '.mapboxgl-ctrl-zoom-in': {\r\n          borderRadius: '8px 8px 0 0',\r\n        },\r\n        '.mapboxgl-ctrl-compass': {\r\n          borderRadius: '0 0 8px 8px',\r\n        },\r\n        '.mapboxgl-ctrl-fullscreen': {\r\n          '.mapboxgl-ctrl-icon': {\r\n            transform: ' scale(0.75)',\r\n          },\r\n        },\r\n        '.mapboxgl-ctrl-group button+button': {\r\n          borderTop: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        '.mapboxgl-ctrl.mapboxgl-ctrl-scale': {\r\n          border: 'none',\r\n          lineHeight: '14px',\r\n          borderRadius: '4px',\r\n          color: theme.palette.common.white,\r\n          fontWeight: theme.typography.fontWeightBold,\r\n          backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n\r\n  return inputGlobalStyles;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const StyledPopup = styled(Popup)(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    '& .mapboxgl-popup-content': {\r\n      maxWidth: 180,\r\n      padding: theme.spacing(1),\r\n      boxShadow: theme.customShadows.z20,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: theme.palette.grey[800],\r\n    },\r\n    '& .mapboxgl-popup-close-button': {\r\n      width: 24,\r\n      height: 24,\r\n      fontSize: 16,\r\n      opacity: 0.48,\r\n      color: theme.palette.common.white,\r\n      right: isRTL && '0',\r\n      left: isRTL && 'auto',\r\n      '&:hover': {\r\n        opacity: 1,\r\n      },\r\n      '&:focus': {\r\n        outline: 'none',\r\n      },\r\n    },\r\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\r\n      marginBottom: -1,\r\n      borderBottomColor: theme.palette.grey[800],\r\n    },\r\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\r\n      marginLeft: -1,\r\n      borderLeftColor: theme.palette.grey[800],\r\n    },\r\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\r\n      marginTop: -1,\r\n      borderTopColor: theme.palette.grey[800],\r\n    },\r\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\r\n      marginRight: -1,\r\n      borderRightColor: theme.palette.grey[800],\r\n    },\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const StyledControlPanel = styled('div')(({ theme }) => ({\r\n  ...bgBlur({ color: theme.palette.grey[900] }),\r\n  zIndex: 9,\r\n  minWidth: 200,\r\n  position: 'absolute',\r\n  top: theme.spacing(1),\r\n  right: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.shape.borderRadius,\r\n}));\r\n","// @mui\r\n//\r\nimport PropTypes from 'prop-types';\r\nimport { StyledPopup } from './styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapPopup({ sx, children, ...other }) {\r\n  return (\r\n    <StyledPopup anchor=\"bottom\" sx={sx} {...other}>\r\n      {children}\r\n    </StyledPopup>\r\n  );\r\n}\r\n\r\nMapPopup.propTypes = {\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object,\r\n};\r\n","import { Marker } from 'react-map-gl';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SIZE = 20;\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapMarker({ ...other }) {\r\n  return (\r\n    <Marker {...other}>\r\n      <Box\r\n        component=\"svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        sx={{\r\n          height: SIZE,\r\n          stroke: 'none',\r\n          cursor: 'pointer',\r\n          fill: (theme) => theme.palette.error.main,\r\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\r\n        }}\r\n      >\r\n        <path d={ICON} />\r\n      </Box>\r\n    </Marker>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { NavigationControl, FullscreenControl, ScaleControl, GeolocateControl } from 'react-map-gl';\r\n//\r\nimport { StyledMapControls } from './styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControl({\r\n  hideScaleControl,\r\n  hideGeolocateControl,\r\n  hideFullscreenControl,\r\n  hideNavigationnControl,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledMapControls />\r\n\r\n      {!hideGeolocateControl && (\r\n        <GeolocateControl position=\"top-left\" positionOptions={{ enableHighAccuracy: true }} />\r\n      )}\r\n\r\n      {!hideFullscreenControl && <FullscreenControl position=\"top-left\" />}\r\n\r\n      {!hideScaleControl && <ScaleControl position=\"bottom-left\" />}\r\n\r\n      {!hideNavigationnControl && <NavigationControl position=\"bottom-left\" />}\r\n    </>\r\n  );\r\n}\r\n\r\nMapControl.propTypes = {\r\n  hideFullscreenControl: PropTypes.bool,\r\n  hideGeolocateControl: PropTypes.bool,\r\n  hideNavigationnControl: PropTypes.bool,\r\n  hideScaleControl: PropTypes.bool,\r\n};\r\n","export const cities = [\r\n  {\r\n    city: 'New York',\r\n    population: '8,175,133',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg',\r\n    state: 'New York',\r\n    latitude: 40.6643,\r\n    longitude: -73.9385,\r\n  },\r\n  {\r\n    city: 'Los Angeles',\r\n    population: '3,792,621',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg',\r\n    state: 'California',\r\n    latitude: 34.0194,\r\n    longitude: -118.4108,\r\n  },\r\n  {\r\n    city: 'Chicago',\r\n    population: '2,695,598',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/2008-06-10_3000x1000_chicago_skyline.jpg/240px-2008-06-10_3000x1000_chicago_skyline.jpg',\r\n    state: 'Illinois',\r\n    latitude: 41.8376,\r\n    longitude: -87.6818,\r\n  },\r\n  {\r\n    city: 'Houston',\r\n    population: '2,100,263',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg/240px-Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg',\r\n    state: 'Texas',\r\n    latitude: 29.7805,\r\n    longitude: -95.3863,\r\n  },\r\n  {\r\n    city: 'Phoenix',\r\n    population: '1,445,632',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Downtown_Phoenix_Aerial_Looking_Northeast.jpg/207px-Downtown_Phoenix_Aerial_Looking_Northeast.jpg',\r\n    state: 'Arizona',\r\n    latitude: 33.5722,\r\n    longitude: -112.088,\r\n  },\r\n  {\r\n    city: 'Philadelphia',\r\n    population: '1,526,006',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg',\r\n    state: 'Pennsylvania',\r\n    latitude: 40.0094,\r\n    longitude: -75.1333,\r\n  },\r\n  {\r\n    city: 'San Antonio',\r\n    population: '1,327,407',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Downtown_San_Antonio_View.JPG/240px-Downtown_San_Antonio_View.JPG',\r\n    state: 'Texas',\r\n    latitude: 29.4724,\r\n    longitude: -98.5251,\r\n  },\r\n  {\r\n    city: 'San Diego',\r\n    population: '1,307,402',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/53/US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg/240px-US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg',\r\n    state: 'California',\r\n    latitude: 32.8153,\r\n    longitude: -117.135,\r\n  },\r\n  {\r\n    city: 'Dallas',\r\n    population: '1,197,816',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Dallas_skyline_daytime.jpg/240px-Dallas_skyline_daytime.jpg',\r\n    state: 'Texas',\r\n    latitude: 32.7757,\r\n    longitude: -96.7967,\r\n  },\r\n  {\r\n    city: 'San Jose',\r\n    population: '945,942',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Downtown_San_Jose_skyline.PNG/240px-Downtown_San_Jose_skyline.PNG',\r\n    state: 'California',\r\n    latitude: 37.2969,\r\n    longitude: -121.8193,\r\n  },\r\n  {\r\n    city: 'Austin',\r\n    population: '790,390',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Austin2012-12-01.JPG/240px-Austin2012-12-01.JPG',\r\n    state: 'Texas',\r\n    latitude: 30.3072,\r\n    longitude: -97.756,\r\n  },\r\n  {\r\n    city: 'Jacksonville',\r\n    population: '821,784',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg/240px-Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg',\r\n    state: 'Florida',\r\n    latitude: 30.337,\r\n    longitude: -81.6613,\r\n  },\r\n  {\r\n    city: 'San Francisco',\r\n    population: '805,235',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg',\r\n    state: 'California',\r\n    latitude: 37.7751,\r\n    longitude: -122.4193,\r\n  },\r\n  {\r\n    city: 'Columbus',\r\n    population: '787,033',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Columbus-ohio-skyline-panorama.jpg/240px-Columbus-ohio-skyline-panorama.jpg',\r\n    state: 'Ohio',\r\n    latitude: 39.9848,\r\n    longitude: -82.985,\r\n  },\r\n  {\r\n    city: 'Indianapolis',\r\n    population: '820,445',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Downtown_indy_from_parking_garage_zoom.JPG/213px-Downtown_indy_from_parking_garage_zoom.JPG',\r\n    state: 'Indiana',\r\n    latitude: 39.7767,\r\n    longitude: -86.1459,\r\n  },\r\n  {\r\n    city: 'Fort Worth',\r\n    population: '741,206',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/d/db/FortWorthTexasSkylineW.jpg/240px-FortWorthTexasSkylineW.jpg',\r\n    state: 'Texas',\r\n    latitude: 32.7795,\r\n    longitude: -97.3463,\r\n  },\r\n  {\r\n    city: 'Charlotte',\r\n    population: '731,424',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Charlotte_skyline45647.jpg/222px-Charlotte_skyline45647.jpg',\r\n    state: 'North Carolina',\r\n    latitude: 35.2087,\r\n    longitude: -80.8307,\r\n  },\r\n  {\r\n    city: 'Seattle',\r\n    population: '608,660',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg',\r\n    state: 'Washington',\r\n    latitude: 47.6205,\r\n    longitude: -122.3509,\r\n  },\r\n  {\r\n    city: 'Denver',\r\n    population: '600,158',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/DenverCP.JPG/240px-DenverCP.JPG',\r\n    state: 'Colorado',\r\n    latitude: 39.7618,\r\n    longitude: -104.8806,\r\n  },\r\n  {\r\n    city: 'El Paso',\r\n    population: '649,121',\r\n    photoUrl:\r\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Downtown_El_Paso_at_sunset.jpeg/240px-Downtown_El_Paso_at_sunset.jpeg',\r\n    state: 'Texas',\r\n    latitude: 31.8484,\r\n    longitude: -106.427,\r\n  },\r\n];\r\n","import { _mock } from '../_mock';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const countries = [\r\n  {\r\n    timezones: ['America/Aruba'],\r\n    latlng: [12.5, -69.96666666],\r\n    name: 'Aruba',\r\n    country_code: 'AW',\r\n    capital: 'Oranjestad',\r\n    photoUrl: _mock.image.cover(1),\r\n  },\r\n  {\r\n    timezones: ['Asia/Kabul'],\r\n    latlng: [33, 65],\r\n    name: 'Afghanistan',\r\n    country_code: 'AF',\r\n    capital: 'Kabul',\r\n    photoUrl: _mock.image.cover(2),\r\n  },\r\n  {\r\n    timezones: ['Africa/Luanda'],\r\n    latlng: [-12.5, 18.5],\r\n    name: 'Angola',\r\n    country_code: 'AO',\r\n    capital: 'Luanda',\r\n    photoUrl: _mock.image.cover(3),\r\n  },\r\n  {\r\n    timezones: ['Pacific/Efate'],\r\n    latlng: [-16, 167],\r\n    name: 'Vanuatu',\r\n    country_code: 'VU',\r\n    capital: 'Port Vila',\r\n    photoUrl: _mock.image.cover(4),\r\n  },\r\n  {\r\n    timezones: ['Pacific/Wallis'],\r\n    latlng: [-13.3, -176.2],\r\n    name: 'Wallis and Futuna',\r\n    country_code: 'WF',\r\n    capital: 'Mata-Utu',\r\n    photoUrl: _mock.image.cover(5),\r\n  },\r\n  {\r\n    timezones: ['Pacific/Apia'],\r\n    latlng: [-13.58333333, -172.33333333],\r\n    name: 'Samoa',\r\n    country_code: 'WS',\r\n    capital: 'Apia',\r\n    photoUrl: _mock.image.cover(6),\r\n  },\r\n  {\r\n    timezones: ['Asia/Aden'],\r\n    latlng: [15, 48],\r\n    name: 'Yemen',\r\n    country_code: 'YE',\r\n    capital: \"Sana'a\",\r\n    photoUrl: _mock.image.cover(7),\r\n  },\r\n  {\r\n    timezones: ['Africa/Johannesburg'],\r\n    latlng: [-29, 24],\r\n    name: 'South Africa',\r\n    country_code: 'ZA',\r\n    capital: 'Pretoria',\r\n    photoUrl: _mock.image.cover(8),\r\n  },\r\n  {\r\n    timezones: ['Africa/Lusaka'],\r\n    latlng: [-15, 30],\r\n    name: 'Zambia',\r\n    country_code: 'ZM',\r\n    capital: 'Lusaka',\r\n    photoUrl: _mock.image.cover(9),\r\n  },\r\n  {\r\n    timezones: ['Africa/Harare'],\r\n    latlng: [-20, 30],\r\n    name: 'Zimbabwe',\r\n    country_code: 'ZW',\r\n    capital: 'Harare',\r\n    photoUrl: _mock.image.cover(10),\r\n  },\r\n];\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport Slider from '@mui/material/Slider';\r\nimport Switch from '@mui/material/Switch';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ControlPanel({\r\n  startTime,\r\n  endTime,\r\n  allDays,\r\n  selectedTime,\r\n  onChangeTime,\r\n  onChangeAllDays,\r\n}) {\r\n  const day = 24 * 60 * 60 * 1000;\r\n\r\n  const days = Math.round((endTime - startTime) / day);\r\n\r\n  const selectedDay = Math.round((selectedTime - startTime) / day);\r\n\r\n  const handleChangeDays = (value) => {\r\n    const daysToAdd = value;\r\n\r\n    const newTime = startTime + daysToAdd * day;\r\n\r\n    onChangeTime(newTime);\r\n  };\r\n\r\n  return (\r\n    <StyledControlPanel>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\r\n          All Days\r\n        </Typography>\r\n\r\n        <Switch\r\n          size=\"small\"\r\n          checked={allDays}\r\n          onChange={(event) => onChangeAllDays(event.target.checked)}\r\n        />\r\n      </Box>\r\n\r\n      <br />\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"body2\"\r\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\r\n      >\r\n        Each Day: {fDate(selectedTime)}\r\n      </Typography>\r\n\r\n      <Slider\r\n        min={1}\r\n        step={1}\r\n        max={days}\r\n        disabled={allDays}\r\n        value={selectedDay}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'number') handleChangeDays(newValue);\r\n        }}\r\n      />\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  allDays: PropTypes.bool,\r\n  endTime: PropTypes.number,\r\n  onChangeAllDays: PropTypes.func,\r\n  onChangeTime: PropTypes.func,\r\n  selectedTime: PropTypes.number,\r\n  startTime: PropTypes.number,\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","// ----------------------------------------------------------------------\r\n\r\nconst MAX_ZOOM_LEVEL = 9;\r\n\r\nexport const heatmapLayer = {\r\n  id: 'heatmap',\r\n  maxzoom: MAX_ZOOM_LEVEL,\r\n  type: 'heatmap',\r\n  paint: {\r\n    // Increase the heatmap weight based on frequency and property magnitude\r\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\r\n    // Increase the heatmap color weight weight by zoom level\r\n    // heatmap-intensity is a multiplier on top of heatmap-weight\r\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\r\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n    // Begin color ramp at 0-stop with a 0-transparancy color\r\n    // to create a blur-like effect.\r\n    'heatmap-color': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['heatmap-density'],\r\n      0,\r\n      'rgba(33,102,172,0)',\r\n      0.2,\r\n      'rgb(103,169,207)',\r\n      0.4,\r\n      'rgb(209,229,240)',\r\n      0.6,\r\n      'rgb(253,219,199)',\r\n      0.8,\r\n      'rgb(239,138,98)',\r\n      0.9,\r\n      'rgb(255,201,101)',\r\n    ],\r\n    // Adjust the heatmap radius by zoom level\r\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\r\n    // Transition from heatmap to circle layer by zoom level\r\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0],\r\n  },\r\n};\r\n","import { useState, useEffect, useMemo, memo } from 'react';\r\nimport Map, { Source, Layer } from 'react-map-gl';\r\n// components\r\n//\r\nimport ControlPanel from './control-panel';\r\nimport { heatmapLayer } from './map-style';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapHeatmap({ ...other }) {\r\n  const [allDays, useAllDays] = useState(true);\r\n\r\n  const [timeRange, setTimeRange] = useState([0, 0]);\r\n\r\n  const [selectedTime, selectTime] = useState(0);\r\n\r\n  const [earthquakes, setEarthQuakes] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const { features } = json;\r\n\r\n        const endTime = features[0].properties.time;\r\n\r\n        const startTime = features[features.length - 1].properties.time;\r\n\r\n        setTimeRange([startTime, endTime]);\r\n\r\n        setEarthQuakes(json);\r\n\r\n        selectTime(endTime);\r\n      })\r\n      .catch((error) => console.error('Could not load data', error));\r\n  }, []);\r\n\r\n  const data = useMemo(\r\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\r\n    [earthquakes, allDays, selectedTime]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Map\r\n        initialViewState={{\r\n          latitude: 40,\r\n          longitude: -100,\r\n          zoom: 3,\r\n        }}\r\n        {...other}\r\n      >\r\n        {data && (\r\n          <Source type=\"geojson\" data={data}>\r\n            <Layer {...heatmapLayer} />\r\n          </Source>\r\n        )}\r\n      </Map>\r\n\r\n      <ControlPanel\r\n        startTime={timeRange[0]}\r\n        endTime={timeRange[1]}\r\n        selectedTime={selectedTime}\r\n        allDays={allDays}\r\n        onChangeTime={selectTime}\r\n        onChangeAllDays={useAllDays}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(MapHeatmap);\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction filterFeaturesByDay(featureCollection, time) {\r\n  const date = new Date(time);\r\n\r\n  const year = date.getFullYear();\r\n\r\n  const month = date.getMonth();\r\n\r\n  const day = date.getDate();\r\n\r\n  const features = featureCollection?.features.filter((feature) => {\r\n    const featureDate = new Date(feature.properties?.time);\r\n\r\n    return (\r\n      featureDate.getFullYear() === year &&\r\n      featureDate.getMonth() === month &&\r\n      featureDate.getDate() === day\r\n    );\r\n  });\r\n  return { type: 'FeatureCollection', features };\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport const clusterLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  paint: {\r\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\r\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\r\n  },\r\n};\r\n\r\nexport const clusterCountLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'earthquakes',\r\n  filter: ['has', 'point_count'],\r\n  layout: {\r\n    'text-field': '{point_count_abbreviated}',\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': 12,\r\n  },\r\n};\r\n\r\nexport const unclusteredPointLayer = {\r\n  id: 'unclustered-point',\r\n  type: 'circle',\r\n  source: 'earthquakes',\r\n  filter: ['!', ['has', 'point_count']],\r\n  paint: {\r\n    'circle-color': '#11b4da',\r\n    'circle-radius': 4,\r\n    'circle-stroke-width': 1,\r\n    'circle-stroke-color': '#FFFFFF',\r\n  },\r\n};\r\n","import { useRef, memo } from 'react';\r\nimport Map, { Layer, Source } from 'react-map-gl';\r\n//\r\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layers';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapClusters({ ...other }) {\r\n  const mapRef = useRef(null);\r\n\r\n  const onClick = (event) => {\r\n    const feature = event.features?.[0];\r\n\r\n    const clusterId = feature?.properties?.cluster_id;\r\n\r\n    const mapboxSource = mapRef.current?.getSource('earthquakes');\r\n\r\n    mapboxSource.getClusterExpansionZoom(clusterId, (error, zoom) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n\r\n      if (feature?.geometry.type === 'Point') {\r\n        mapRef.current?.easeTo({\r\n          center: feature?.geometry.coordinates,\r\n          zoom: Number.isNaN(zoom) ? 3 : zoom,\r\n          duration: 500,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        latitude: 40.67,\r\n        longitude: -103.59,\r\n        zoom: 3,\r\n      }}\r\n      interactiveLayerIds={[clusterLayer.id || '']}\r\n      onClick={onClick}\r\n      ref={mapRef}\r\n      {...other}\r\n    >\r\n      <Source\r\n        id=\"earthquakes\"\r\n        type=\"geojson\"\r\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\r\n        cluster\r\n        clusterMaxZoom={14}\r\n        clusterRadius={50}\r\n      >\r\n        <Layer {...clusterLayer} />\r\n        <Layer {...clusterCountLayer} />\r\n        <Layer {...unclusteredPointLayer} />\r\n      </Source>\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default memo(MapClusters);\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledRow = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  textTransform: 'capitalize',\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.common.white,\r\n  '&:not(:last-of-type)': {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst camelPattern = /(^|[A-Z])[a-z]*/g;\r\n\r\nfunction formatSettingName(name) {\r\n  return name.match(camelPattern)?.join(' ');\r\n}\r\n\r\nfunction ControlPanel({ settings, onChange }) {\r\n  const renderSetting = (name, value) => {\r\n    switch (typeof value) {\r\n      case 'boolean':\r\n        return (\r\n          <StyledRow key={name}>\r\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\r\n            <Switch\r\n              size=\"small\"\r\n              checked={value}\r\n              onChange={(event) => onChange(name, event.target.checked)}\r\n            />\r\n          </StyledRow>\r\n        );\r\n      case 'number':\r\n        return (\r\n          <StyledRow key={name}>\r\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\r\n            <InputBase\r\n              value={value}\r\n              onChange={(event) => onChange(name, Number(event.target.value))}\r\n              inputProps={{ type: 'number' }}\r\n              sx={{\r\n                '& input': {\r\n                  py: 0.25,\r\n                  width: 40,\r\n                  fontSize: 14,\r\n                  borderRadius: 0.5,\r\n                  textAlign: 'center',\r\n                  color: 'common.white',\r\n                  bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\r\n                },\r\n              }}\r\n            />\r\n          </StyledRow>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledControlPanel>\r\n      {Object.keys(settings).map((name) => renderSetting(name, settings[name]))}\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  onChange: PropTypes.func,\r\n  settings: PropTypes.string,\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","import { useState, useCallback, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// components\r\nimport { MapControl } from 'src/components/map';\r\n//\r\nimport ControlPanel from './control-panel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapInteraction({ ...other }) {\r\n  const [settings, setSettings] = useState({\r\n    minZoom: 0,\r\n    maxZoom: 20,\r\n    minPitch: 0,\r\n    maxPitch: 85,\r\n    dragPan: true,\r\n    boxZoom: true,\r\n    keyboard: true,\r\n    touchZoom: true,\r\n    dragRotate: true,\r\n    scrollZoom: true,\r\n    touchPitch: true,\r\n    touchRotate: true,\r\n    doubleClickZoom: true,\r\n    touchZoomRotate: true,\r\n  });\r\n\r\n  const updateSettings = useCallback(\r\n    (name, value) =>\r\n      setSettings((prevSettings) => ({\r\n        ...prevSettings,\r\n        [name]: value,\r\n      })),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Map\r\n      {...settings}\r\n      initialViewState={{\r\n        latitude: 37.729,\r\n        longitude: -122.36,\r\n        zoom: 11,\r\n        bearing: 0,\r\n        pitch: 50,\r\n      }}\r\n      {...other}\r\n    >\r\n      <MapControl />\r\n\r\n      <ControlPanel settings={settings} onChange={updateSettings} />\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default memo(MapInteraction);\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ControlPanel({ mode, onModeChange }) {\r\n  return (\r\n    <StyledControlPanel>\r\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive onChange={onModeChange}>\r\n        <ToggleButton value=\"side-by-side\">Side by side</ToggleButton>\r\n\r\n        <ToggleButton value=\"split-screen\">Split screen</ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  mode: PropTypes.string,\r\n  onModeChange: PropTypes.func,\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","import { useState, useCallback, useMemo, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// components\r\n//\r\nimport ControlPanel from './control-panel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LeftMapStyle = {\r\n  position: 'absolute',\r\n  width: '50%',\r\n  height: '100%',\r\n};\r\n\r\nconst RightMapStyle = {\r\n  position: 'absolute',\r\n  left: '50%',\r\n  width: '50%',\r\n  height: '100%',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapSideBySide({ ...other }) {\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -122.43,\r\n    latitude: 37.78,\r\n    zoom: 12,\r\n    pitch: 30,\r\n  });\r\n\r\n  const [mode, setMode] = useState('side-by-side');\r\n\r\n  const [activeMap, setActiveMap] = useState('left');\r\n\r\n  const onLeftMoveStart = useCallback(() => setActiveMap('left'), []);\r\n\r\n  const onRightMoveStart = useCallback(() => setActiveMap('right'), []);\r\n\r\n  const onMove = useCallback((event) => setViewState(event.viewState), []);\r\n\r\n  const width = typeof window === 'undefined' ? 100 : window.innerWidth;\r\n\r\n  const leftMapPadding = useMemo(\r\n    () => ({\r\n      left: mode === 'split-screen' ? width / 2 : 0,\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n    }),\r\n    [width, mode]\r\n  );\r\n\r\n  const rightMapPadding = useMemo(\r\n    () => ({\r\n      right: mode === 'split-screen' ? width / 2 : 0,\r\n      top: 0,\r\n      left: 0,\r\n      bottom: 0,\r\n    }),\r\n    [width, mode]\r\n  );\r\n\r\n  const handleChangeMode = (event, newMode) => {\r\n    if (newMode !== null) {\r\n      setMode(newMode);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Map\r\n        id=\"left-map\"\r\n        {...viewState}\r\n        padding={leftMapPadding}\r\n        onMoveStart={onLeftMoveStart}\r\n        onMove={(event) => {\r\n          if (activeMap === 'left') {\r\n            onMove(event);\r\n          }\r\n        }}\r\n        style={LeftMapStyle}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        {...other}\r\n      />\r\n\r\n      <Map\r\n        id=\"right-map\"\r\n        {...viewState}\r\n        padding={rightMapPadding}\r\n        onMoveStart={onRightMoveStart}\r\n        onMove={(event) => {\r\n          if (activeMap === 'right') {\r\n            onMove(event);\r\n          }\r\n        }}\r\n        style={RightMapStyle}\r\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n        {...other}\r\n      />\r\n\r\n      <ControlPanel mode={mode} onModeChange={handleChangeMode} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(MapSideBySide);\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport Radio from '@mui/material/Radio';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ControlPanel({ themes, selectTheme, onChangeTheme }) {\r\n  return (\r\n    <StyledControlPanel>\r\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\r\n        Select Theme:\r\n      </Typography>\r\n\r\n      <RadioGroup value={selectTheme} onChange={(event, newValue) => onChangeTheme(newValue)}>\r\n        {Object.keys(themes).map((item) => (\r\n          <FormControlLabel\r\n            key={item}\r\n            value={item}\r\n            control={<Radio size=\"small\" />}\r\n            label={item}\r\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  onChangeTheme: PropTypes.func,\r\n  selectTheme: PropTypes.string,\r\n  themes: PropTypes.object,\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// components\r\nimport { MapControl } from 'src/components/map';\r\n//\r\nimport ControlPanel from './control-panel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapChangeTheme({ themes, ...other }) {\r\n  const [selectTheme, setSelectTheme] = useState('outdoors');\r\n\r\n  const handleChangeTheme = useCallback((value) => setSelectTheme(value), []);\r\n\r\n  return (\r\n    <>\r\n      <Map\r\n        initialViewState={{\r\n          latitude: 37.785164,\r\n          longitude: -100,\r\n          zoom: 3.5,\r\n          bearing: 0,\r\n          pitch: 0,\r\n        }}\r\n        mapStyle={themes?.[selectTheme]}\r\n        {...other}\r\n      >\r\n        <MapControl />\r\n      </Map>\r\n\r\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\r\n    </>\r\n  );\r\n}\r\n\r\nMapChangeTheme.propTypes = {\r\n  themes: PropTypes.object,\r\n};\r\n\r\nexport default memo(MapChangeTheme);\r\n","import PropTypes from 'prop-types';\r\nimport { useState, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport Image from 'src/components/image';\r\nimport { MapPopup, MapMarker, MapControl } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapMarkersPopups({ data, ...other }) {\r\n  const [popupInfo, setPopupInfo] = useState(null);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        zoom: 2,\r\n      }}\r\n      {...other}\r\n    >\r\n      <MapControl />\r\n\r\n      {data.map((city, index) => (\r\n        <MapMarker\r\n          key={`marker-${index}`}\r\n          latitude={city.latlng[0]}\r\n          longitude={city.latlng[1]}\r\n          onClick={(event) => {\r\n            event.originalEvent.stopPropagation();\r\n            setPopupInfo(city);\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {popupInfo && (\r\n        <MapPopup\r\n          latitude={popupInfo.latlng[0]}\r\n          longitude={popupInfo.latlng[1]}\r\n          onClose={() => setPopupInfo(null)}\r\n        >\r\n          <Box sx={{ color: 'common.white' }}>\r\n            <Box\r\n              sx={{\r\n                mb: 1,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  height: '18px',\r\n                  minWidth: '28px',\r\n                  marginRight: '8px',\r\n                  borderRadius: '4px',\r\n                  backgroundSize: 'cover',\r\n                  backgroundPosition: 'center',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${popupInfo.country_code.toLowerCase()}.svg)`,\r\n                }}\r\n              />\r\n              <Typography variant=\"subtitle2\">{popupInfo.name}</Typography>\r\n            </Box>\r\n\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              Timezones: {popupInfo.timezones}\r\n            </Typography>\r\n\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              Lat: {popupInfo.latlng[0]}\r\n            </Typography>\r\n\r\n            <Typography component=\"div\" variant=\"caption\">\r\n              Long: {popupInfo.latlng[1]}\r\n            </Typography>\r\n\r\n            <Image\r\n              alt={popupInfo.name}\r\n              src={popupInfo.photoUrl}\r\n              ratio=\"4/3\"\r\n              sx={{ mt: 1, borderRadius: 1 }}\r\n            />\r\n          </Box>\r\n        </MapPopup>\r\n      )}\r\n    </Map>\r\n  );\r\n}\r\n\r\nMapMarkersPopups.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default memo(MapMarkersPopups);\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst EVENT_NAMES = ['onDragStart', 'onDrag', 'onDragEnd'];\r\n\r\nfunction round5(value) {\r\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ControlPanel({ events = {} }) {\r\n  return (\r\n    <StyledControlPanel>\r\n      {EVENT_NAMES.map((event) => {\r\n        const lngLat = events[event];\r\n\r\n        return (\r\n          <div key={event}>\r\n            <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\r\n              {event}:\r\n            </Typography>\r\n\r\n            {lngLat ? (\r\n              <Typography variant=\"subtitle2\" sx={{ color: 'primary.main' }}>\r\n                {`${round5(lngLat.lng)}, ${round5(lngLat.lat)}`}\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" component=\"em\" sx={{ color: 'error.main' }}>\r\n                null\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  events: PropTypes.object,\r\n};\r\nexport default memo(ControlPanel);\r\n","import { useState, useCallback, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// components\r\nimport { MapMarker, MapControl } from 'src/components/map';\r\n//\r\nimport ControlPanel from './control-panel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapDraggableMarkers({ ...other }) {\r\n  const [marker, setMarker] = useState({\r\n    latitude: 40,\r\n    longitude: -100,\r\n  });\r\n\r\n  const [events, logEvents] = useState({});\r\n\r\n  const onMarkerDragStart = useCallback((event) => {\r\n    logEvents((_events) => ({ ..._events, onDragStart: event.lngLat }));\r\n  }, []);\r\n\r\n  const onMarkerDrag = useCallback((event) => {\r\n    logEvents((_events) => ({ ..._events, onDrag: event.lngLat }));\r\n\r\n    setMarker({\r\n      longitude: event.lngLat.lng,\r\n      latitude: event.lngLat.lat,\r\n    });\r\n  }, []);\r\n\r\n  const onMarkerDragEnd = useCallback((event) => {\r\n    logEvents((_events) => ({ ..._events, onDragEnd: event.lngLat }));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Map initialViewState={{ latitude: 40, longitude: -100, zoom: 3.5 }} {...other}>\r\n        <MapControl />\r\n\r\n        <MapMarker\r\n          longitude={marker.longitude}\r\n          latitude={marker.latitude}\r\n          anchor=\"bottom\"\r\n          draggable\r\n          onDragStart={onMarkerDragStart}\r\n          onDrag={onMarkerDrag}\r\n          onDragEnd={onMarkerDragEnd}\r\n        />\r\n      </Map>\r\n\r\n      <ControlPanel events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(MapDraggableMarkers);\r\n","import PropTypes from 'prop-types';\r\nimport { memo } from 'react';\r\n// @mui\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// components\r\nimport { StyledControlPanel } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction ControlPanel({ data, selectedCity, onSelectCity }) {\r\n  return (\r\n    <StyledControlPanel>\r\n      {data.map((city) => (\r\n        <RadioGroup\r\n          key={city.city}\r\n          value={selectedCity}\r\n          onChange={(event) => onSelectCity(event, city)}\r\n        >\r\n          <FormControlLabel\r\n            value={city.city}\r\n            label={city.city}\r\n            control={<Radio size=\"small\" />}\r\n            sx={{ color: 'common.white' }}\r\n          />\r\n        </RadioGroup>\r\n      ))}\r\n    </StyledControlPanel>\r\n  );\r\n}\r\n\r\nControlPanel.propTypes = {\r\n  data: PropTypes.array,\r\n  onSelectCity: PropTypes.func,\r\n  selectedCity: PropTypes.string,\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","import PropTypes from 'prop-types';\r\nimport { useRef, useState, useCallback, memo } from 'react';\r\nimport Map from 'react-map-gl';\r\n// components\r\nimport { MapControl } from 'src/components/map';\r\n//\r\nimport ControlPanel from './control-panel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapViewportAnimation({ data, ...other }) {\r\n  const mapRef = useRef(null);\r\n\r\n  const [selectedCity, setSelectedCity] = useState(data[2].city);\r\n\r\n  const onSelectCity = useCallback((event, { longitude, latitude }) => {\r\n    setSelectedCity(event.target.value);\r\n    mapRef.current?.flyTo({ center: [longitude, latitude], duration: 2000 });\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        latitude: 37.7751,\r\n        longitude: -122.4193,\r\n        zoom: 11,\r\n        bearing: 0,\r\n        pitch: 0,\r\n      }}\r\n      ref={mapRef}\r\n      {...other}\r\n    >\r\n      <MapControl />\r\n\r\n      <ControlPanel data={data} selectedCity={selectedCity} onSelectCity={onSelectCity} />\r\n    </Map>\r\n  );\r\n}\r\n\r\nMapViewportAnimation.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default memo(MapViewportAnimation);\r\n","import { useState, useEffect, memo } from 'react';\r\nimport Map, { Layer, Source } from 'react-map-gl';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\n// components\r\nimport { MapControl } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapGeoJSONAnimation({ ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const pointLayer = {\r\n    id: 'point',\r\n    type: 'circle',\r\n    paint: {\r\n      'circle-radius': 10,\r\n      'circle-color': theme.palette.error.main,\r\n    },\r\n  };\r\n\r\n  const [pointData, setPointData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const animation = window.requestAnimationFrame(() =>\r\n      setPointData(\r\n        pointOnCircle({\r\n          center: [-100, 0],\r\n          angle: Date.now() / 1000,\r\n          radius: 20,\r\n        })\r\n      )\r\n    );\r\n\r\n    return () => window.cancelAnimationFrame(animation);\r\n  });\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        latitude: 0,\r\n        longitude: -100,\r\n        zoom: 3,\r\n      }}\r\n      mapStyle=\"mapbox://styles/mapbox/satellite-streets-v11\"\r\n      {...other}\r\n    >\r\n      <MapControl />\r\n\r\n      {pointData && (\r\n        <Source type=\"geojson\" data={pointData}>\r\n          <Layer {...pointLayer} />\r\n        </Source>\r\n      )}\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default memo(MapGeoJSONAnimation);\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction pointOnCircle({ center, angle, radius }) {\r\n  return {\r\n    type: 'Point',\r\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\r\n  };\r\n}\r\n","import { useState, useCallback, useMemo, memo } from 'react';\r\nimport Map, { Layer, Source } from 'react-map-gl';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport { MapPopup, MapControl } from 'src/components/map';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MapHighlightByFilter({ ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const countiesLayer = {\r\n    id: 'counties',\r\n    type: 'fill',\r\n    'source-layer': 'original',\r\n    paint: {\r\n      'fill-outline-color': theme.palette.grey[900],\r\n      'fill-color': theme.palette.grey[900],\r\n      'fill-opacity': 0.12,\r\n    },\r\n  };\r\n\r\n  const highlightLayer = {\r\n    id: 'counties-highlighted',\r\n    type: 'fill',\r\n    source: 'counties',\r\n    'source-layer': 'original',\r\n    paint: {\r\n      'fill-outline-color': theme.palette.error.main,\r\n      'fill-color': theme.palette.error.main,\r\n      'fill-opacity': 0.48,\r\n    },\r\n  };\r\n\r\n  const [hoverInfo, setHoverInfo] = useState(null);\r\n\r\n  const onHover = useCallback((event) => {\r\n    const county = event.features && event.features[0];\r\n\r\n    setHoverInfo({\r\n      longitude: event.lngLat.lng,\r\n      latitude: event.lngLat.lat,\r\n      countyName: county && county.properties?.COUNTY,\r\n    });\r\n  }, []);\r\n\r\n  const selectedCounty = (hoverInfo && hoverInfo.countyName) || '';\r\n\r\n  const filter = useMemo(() => ['in', 'COUNTY', selectedCounty], [selectedCounty]);\r\n\r\n  return (\r\n    <Map\r\n      initialViewState={{\r\n        latitude: 38.88,\r\n        longitude: -98,\r\n        zoom: 3,\r\n      }}\r\n      minZoom={2}\r\n      onMouseMove={onHover}\r\n      interactiveLayerIds={['counties']}\r\n      {...other}\r\n    >\r\n      <MapControl />\r\n\r\n      <Source type=\"vector\" url=\"mapbox://mapbox.82pkq93d\">\r\n        <Layer beforeId=\"waterway-label\" {...countiesLayer} />\r\n        <Layer beforeId=\"waterway-label\" {...highlightLayer} filter={filter} />\r\n      </Source>\r\n\r\n      {selectedCounty && hoverInfo && (\r\n        <MapPopup longitude={hoverInfo.longitude} latitude={hoverInfo.latitude} closeButton={false}>\r\n          <Typography variant=\"body2\" sx={{ color: 'common.white' }}>\r\n            {selectedCounty}\r\n          </Typography>\r\n        </MapPopup>\r\n      )}\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default memo(MapHighlightByFilter);\r\n","import 'src/utils/mapboxgl';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Container from '@mui/material/Container';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// config\r\nimport { MAPBOX_API } from 'src/config-global';\r\n// _mock\r\nimport { cities as CITIES } from 'src/_mock/map/cities';\r\nimport { countries as COUNTRIES } from 'src/_mock/map/countries';\r\n// components\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport MapHeatmap from './heatmap';\r\nimport MapClusters from './clusters';\r\nimport MapInteraction from './interaction';\r\nimport MapSideBySide from './side-by-side';\r\nimport MapChangeTheme from './change-theme';\r\nimport MapMarkersPopups from './map-markers-popups';\r\nimport MapDraggableMarkers from './draggable-markers';\r\nimport MapViewportAnimation from './viewport-animation';\r\nimport MapGeoJSONAnimation from './map-geo-json-animation';\r\nimport MapHighlightByFilter from './map-highlight-by-filter';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst THEMES = {\r\n  streets: 'mapbox://styles/mapbox/streets-v11',\r\n  outdoors: 'mapbox://styles/mapbox/outdoors-v11',\r\n  light: 'mapbox://styles/mapbox/light-v10',\r\n  dark: 'mapbox://styles/mapbox/dark-v10',\r\n  satellite: 'mapbox://styles/mapbox/satellite-v9',\r\n  satelliteStreets: 'mapbox://styles/mapbox/satellite-streets-v11',\r\n};\r\n\r\nconst baseSettings = {\r\n  mapboxAccessToken: MAPBOX_API,\r\n  minZoom: 1,\r\n};\r\n\r\nconst StyledMapContainer = styled('div')(({ theme }) => ({\r\n  zIndex: 0,\r\n  height: 560,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  '& .mapboxgl-ctrl-logo, .mapboxgl-ctrl-bottom-right': {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapView() {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          py: 5,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"Map\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: paths.components,\r\n              },\r\n              { name: 'Map' },\r\n            ]}\r\n            moreLink={[\r\n              'http://visgl.github.io/react-map-gl',\r\n              'http://visgl.github.io/react-map-gl/examples',\r\n            ]}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Stack spacing={5}>\r\n          <Card>\r\n            <CardHeader title=\"Change Theme\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapChangeTheme {...baseSettings} themes={THEMES} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Markers & Popups\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapMarkersPopups {...baseSettings} data={COUNTRIES} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Draggable Markers\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapDraggableMarkers {...baseSettings} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Geojson Animation\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapGeoJSONAnimation {...baseSettings} mapStyle={THEMES.satelliteStreets} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Clusters\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapClusters {...baseSettings} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Interaction\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapInteraction {...baseSettings} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Viewport Animation\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapViewportAnimation\r\n                  {...baseSettings}\r\n                  data={CITIES.filter((city) => city.state === 'Texas')}\r\n                  mapStyle={THEMES.light}\r\n                />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Highlight By Filter\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapHighlightByFilter {...baseSettings} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Heatmap\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapHeatmap {...baseSettings} mapStyle={THEMES.light} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Side By Side\" />\r\n            <CardContent>\r\n              <StyledMapContainer>\r\n                <MapSideBySide {...baseSettings} />\r\n              </StyledMapContainer>\r\n            </CardContent>\r\n          </Card>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport MapView from 'src/sections/_examples/extra/map-view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Extra: Map</title>\r\n      </Helmet>\r\n\r\n      <MapView />\r\n    </>\r\n  );\r\n}\r\n","import mapboxgl from 'mapbox-gl';\r\n\r\n// @ts-ignore\r\n// eslint-disable-next-line\r\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker')?.default;\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexDirection","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","StyledMapControls","theme","useTheme","GlobalStyles","boxShadow","customShadows","z8","transform","borderTop","concat","palette","divider","border","lineHeight","common","white","fontWeight","fontWeightBold","backgroundImage","StyledPopup","styled","Popup","isRTL","maxWidth","padding","spacing","z20","shape","backgroundColor","grey","fontSize","opacity","right","left","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","StyledControlPanel","_ref2","bgBlur","zIndex","minWidth","position","top","MapPopup","anchor","SIZE","ICON","MapMarker","Object","assign","_objectDestructuringEmpty","Marker","viewBox","stroke","fill","error","main","d","MapControl","hideScaleControl","hideGeolocateControl","hideFullscreenControl","hideNavigationnControl","GeolocateControl","positionOptions","enableHighAccuracy","FullscreenControl","ScaleControl","NavigationControl","cities","city","population","photoUrl","state","latitude","longitude","countries","timezones","latlng","country_code","capital","_mock","image","cover","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","justifyContent","Switch","size","checked","onChange","event","fDate","Slider","min","step","max","value","newValue","memo","heatmapLayer","id","maxzoom","type","paint","MapHeatmap","_useState","useState","_useState2","_slicedToArray","useAllDays","_useState3","_useState4","timeRange","setTimeRange","_useState5","_useState6","selectTime","_useState7","_useState8","earthquakes","setEarthQuakes","useEffect","fetch","then","resp","json","features","properties","time","catch","console","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","_feature$properties","featureDate","filterFeaturesByDay","Map","initialViewState","zoom","Source","Layer","clusterLayer","source","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","mapRef","useRef","interactiveLayerIds","onClick","_event$features","_mapRef$current","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","_mapRef$current2","geometry","easeTo","center","coordinates","Number","isNaN","duration","ref","cluster","clusterMaxZoom","clusterRadius","StyledRow","textTransform","camelPattern","formatSettingName","_name$match","match","join","settings","keys","InputBase","inputProps","py","textAlign","alpha","renderSetting","MapInteraction","minZoom","maxZoom","minPitch","maxPitch","dragPan","boxZoom","keyboard","touchZoom","dragRotate","scrollZoom","touchPitch","touchRotate","doubleClickZoom","touchZoomRotate","setSettings","updateSettings","useCallback","prevSettings","_defineProperty","bearing","pitch","mode","onModeChange","ToggleButtonGroup","exclusive","ToggleButton","LeftMapStyle","RightMapStyle","MapSideBySide","viewState","setViewState","setMode","activeMap","setActiveMap","onLeftMoveStart","onRightMoveStart","onMove","window","innerWidth","leftMapPadding","bottom","rightMapPadding","onMoveStart","style","mapStyle","newMode","themes","selectTheme","onChangeTheme","RadioGroup","item","FormControlLabel","control","Radio","label","MapChangeTheme","setSelectTheme","handleChangeTheme","MapMarkersPopups","popupInfo","setPopupInfo","index","originalEvent","stopPropagation","onClose","mb","backgroundSize","backgroundPosition","backgroundRepeat","toLowerCase","Image","alt","src","ratio","EVENT_NAMES","round5","toFixed","_ref$events","events","lngLat","lng","lat","MapDraggableMarkers","marker","setMarker","logEvents","onMarkerDragStart","_events","onDragStart","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd","draggable","selectedCity","onSelectCity","MapViewportAnimation","setSelectedCity","flyTo","MapGeoJSONAnimation","pointLayer","pointData","setPointData","animation","requestAnimationFrame","angle","radius","cos","sin","pointOnCircle","now","cancelAnimationFrame","MapHighlightByFilter","countiesLayer","highlightLayer","hoverInfo","setHoverInfo","onHover","_county$properties","county","countyName","COUNTY","selectedCounty","onMouseMove","url","beforeId","closeButton","THEMES","streets","outdoors","light","dark","satellite","satelliteStreets","baseSettings","mapboxAccessToken","MAPBOX_API","StyledMapContainer","overflow","MapView","Container","paths","components","my","Card","CardHeader","title","CardContent","COUNTRIES","CITIES","MapPage","Helmet","mapboxgl","_require","require","default"],"sourceRoot":""}