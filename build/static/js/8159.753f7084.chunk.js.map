{"version":3,"file":"static/js/8159.753f7084.chunk.js","mappings":"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","sources":["components/custom-date-range-picker/utils.js","components/custom-date-range-picker/use-date-range-picker.js","components/custom-date-range-picker/custom-date-range-picker.js","components/empty-content/empty-content.js","components/table/utils.js","components/table/use-table.js","components/table/table-no-data.js","components/table/table-skeleton.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","components/text-max-line/use-typography.js","components/text-max-line/text-max-line.js","hooks/use-double-click.js","sections/file-manager/file-manager-table-row.js","sections/file-manager/file-manager-table.js","sections/file-manager/file-manager-filters.js","sections/file-manager/file-manager-file-item.js","sections/file-manager/file-manager-action-selected.js","sections/file-manager/file-manager-grid-view.js","sections/file-manager/file-manager-filters-result.js","sections/file-manager/view/file-manager-view.js","pages/dashboard/file-manager.js"],"sourcesContent":["import { isSameDay, isSameMonth, getYear } from 'date-fns';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function shortDateLabel(startDate, endDate) {\r\n  const getCurrentYear = new Date().getFullYear();\r\n\r\n  const startDateYear = startDate ? getYear(startDate) : null;\r\n\r\n  const endDateYear = endDate ? getYear(endDate) : null;\r\n\r\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\r\n\r\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  const sameMonth =\r\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  if (currentYear) {\r\n    if (sameMonth) {\r\n      if (sameDay) {\r\n        return fDate(endDate, 'dd MMM yy');\r\n      }\r\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n    }\r\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n  }\r\n\r\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n}\r\n","import { useState, useCallback } from 'react';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n//\r\nimport { shortDateLabel } from './utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useDateRangePicker(start, end) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [endDate, setEndDate] = useState(end);\r\n\r\n  const [startDate, setStartDate] = useState(start);\r\n\r\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\r\n\r\n  const onOpen = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const onClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const onChangeStartDate = useCallback((newValue) => {\r\n    setStartDate(newValue);\r\n  }, []);\r\n\r\n  const onChangeEndDate = useCallback(\r\n    (newValue) => {\r\n      if (error) {\r\n        setEndDate(null);\r\n      }\r\n      setEndDate(newValue);\r\n    },\r\n    [error]\r\n  );\r\n\r\n  const onReset = useCallback(() => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n  }, []);\r\n\r\n  return {\r\n    startDate,\r\n    endDate,\r\n    onChangeStartDate,\r\n    onChangeEndDate,\r\n    //\r\n    open,\r\n    onOpen,\r\n    onClose,\r\n    onReset,\r\n    //\r\n    selected: !!startDate && !!endDate,\r\n    error,\r\n    //\r\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\r\n    shortLabel: shortDateLabel(startDate, endDate),\r\n    //\r\n    setStartDate,\r\n    setEndDate,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\n// hooks\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomDateRangePicker({\r\n  title = 'Select date range',\r\n  variant = 'input',\r\n  //\r\n  startDate,\r\n  endDate,\r\n  //\r\n  onChangeStartDate,\r\n  onChangeEndDate,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  error,\r\n}) {\r\n  const mdUp = useResponsive('up', 'md');\r\n\r\n  const isCalendarView = variant === 'calendar';\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={isCalendarView ? false : 'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{\r\n        sx: {\r\n          ...(isCalendarView && {\r\n            maxWidth: 720,\r\n          }),\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      <DialogContent\r\n        sx={{\r\n          ...(isCalendarView &&\r\n            mdUp && {\r\n              overflow: 'unset',\r\n            }),\r\n        }}\r\n      >\r\n        <Stack\r\n          justifyContent=\"center\"\r\n          spacing={isCalendarView ? 3 : 2}\r\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\r\n          sx={{ pt: 1 }}\r\n        >\r\n          {isCalendarView ? (\r\n            <>\r\n              <Paper\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderRadius: 2,\r\n                  borderColor: 'divider',\r\n                  borderStyle: 'dashed',\r\n                }}\r\n              >\r\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\r\n              </Paper>\r\n\r\n              <Paper\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderRadius: 2,\r\n                  borderColor: 'divider',\r\n                  borderStyle: 'dashed',\r\n                }}\r\n              >\r\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\r\n              </Paper>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\r\n\r\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\r\n            </>\r\n          )}\r\n        </Stack>\r\n\r\n        {error && (\r\n          <FormHelperText error sx={{ px: 2 }}>\r\n            End date must be later than start date\r\n          </FormHelperText>\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nCustomDateRangePicker.propTypes = {\r\n  error: PropTypes.bool,\r\n  onChangeEndDate: PropTypes.func,\r\n  onChangeStartDate: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  variant: PropTypes.oneOf(['input', 'calendar']),\r\n  startDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\r\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EmptyContent({ title, imgUrl, action, filled, description, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      flexGrow={1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        px: 3,\r\n        height: 1,\r\n        ...(filled && {\r\n          borderRadius: 2,\r\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"empty content\"\r\n        src={imgUrl || '/assets/icons/empty/ic_content.svg'}\r\n        sx={{ width: 1, maxWidth: 160 }}\r\n      />\r\n\r\n      {title && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {description && (\r\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nEmptyContent.propTypes = {\r\n  action: PropTypes.node,\r\n  description: PropTypes.string,\r\n  filled: PropTypes.bool,\r\n  imgUrl: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] === null) {\r\n    return 1;\r\n  }\r\n  if (b[orderBy] === null) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n//\r\nimport EmptyContent from '../empty-content';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ notFound, sx }) {\r\n  return (\r\n    <TableRow>\r\n      {notFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n              ...sx,\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  notFound: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSkeleton({ ...other }) {\r\n  return (\r\n    <TableRow {...other}>\r\n      <TableCell colSpan={12}>\r\n        <Stack spacing={3} direction=\"row\" alignItems=\"center\">\r\n          <Skeleton sx={{ borderRadius: 1.5, width: 48, height: 48, flexShrink: 0 }} />\r\n          <Skeleton sx={{ width: 1, height: 12 }} />\r\n          <Skeleton sx={{ width: 180, height: 12 }} />\r\n          <Skeleton sx={{ width: 160, height: 12 }} />\r\n          <Skeleton sx={{ width: 140, height: 12 }} />\r\n          <Skeleton sx={{ width: 120, height: 12 }} />\r\n        </Stack>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: \"1px\",\r\n  height: \"1px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  whiteSpace: \"nowrap\",\r\n  clip: \"rect(0 0 0 0)\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {/* {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )} */}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{\r\n              width: headCell.width,\r\n              minWidth: headCell.minWidth,\r\n              background: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"#e8effb !important\" : \"\",\r\n            }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  dense,\r\n  onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\n// hooks\r\nimport { useWidth } from 'src/hooks/use-responsive';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction remToPx(value) {\r\n  return Math.round(parseFloat(value) * 16);\r\n}\r\n\r\nexport default function useTypography(variant) {\r\n  const theme = useTheme();\r\n\r\n  const breakpoints = useWidth();\r\n\r\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\r\n\r\n  const hasResponsive =\r\n    variant === 'h1' ||\r\n    variant === 'h2' ||\r\n    variant === 'h3' ||\r\n    variant === 'h4' ||\r\n    variant === 'h5' ||\r\n    variant === 'h6';\r\n\r\n  const getFont =\r\n    hasResponsive && theme.typography[variant][key]\r\n      ? theme.typography[variant][key]\r\n      : theme.typography[variant];\r\n\r\n  const fontSize = remToPx(getFont.fontSize);\r\n\r\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\r\n\r\n  const { fontWeight, letterSpacing } = theme.typography[variant];\r\n\r\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\n//\r\nimport useTypography from './use-typography';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TextMaxLine = forwardRef(\r\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\r\n    const { lineHeight } = useTypography(variant);\r\n\r\n    const styles = {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      display: '-webkit-box',\r\n      WebkitLineClamp: line,\r\n      WebkitBoxOrient: 'vertical',\r\n      ...(persistent && {\r\n        height: lineHeight * line,\r\n      }),\r\n      ...sx,\r\n    };\r\n\r\n    if (asLink) {\r\n      return (\r\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\r\n          {children}\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\r\n        {children}\r\n      </Typography>\r\n    );\r\n  }\r\n);\r\n\r\nTextMaxLine.propTypes = {\r\n  asLink: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  line: PropTypes.number,\r\n  persistent: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n  variant: PropTypes.oneOf([\r\n    'body1',\r\n    'body2',\r\n    'button',\r\n    'caption',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'inherit',\r\n    'overline',\r\n    'subtitle1',\r\n    'subtitle2',\r\n  ]),\r\n};\r\n\r\nexport default TextMaxLine;\r\n","import { useCallback, useRef } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useDoubleClick({ click, doubleClick, timeout = 250 }) {\r\n  const clickTimeout = useRef();\r\n\r\n  const clearClickTimeout = () => {\r\n    if (clickTimeout) {\r\n      clearTimeout(clickTimeout.current);\r\n      clickTimeout.current = null;\r\n    }\r\n  };\r\n\r\n  return useCallback(\r\n    (event) => {\r\n      clearClickTimeout();\r\n      if (click && event.detail === 1) {\r\n        clickTimeout.current = setTimeout(() => {\r\n          click(event);\r\n        }, timeout);\r\n      }\r\n      if (event.detail % 2 === 0) {\r\n        doubleClick(event);\r\n      }\r\n    },\r\n    [click, doubleClick, timeout]\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport TableRow, { tableRowClasses } from '@mui/material/TableRow';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useDoubleClick } from 'src/hooks/use-double-click';\r\nimport { useCopyToClipboard } from 'src/hooks/use-copy-to-clipboard';\r\n// utils\r\nimport { fData } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport FileThumbnail from 'src/components/file-thumbnail';\r\n//\r\nimport FileManagerShareDialog from './file-manager-share-dialog';\r\nimport FileManagerFileDetails from './file-manager-file-details';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerTableRow({ row, selected, onSelectRow, onDeleteRow }) {\r\n  const theme = useTheme();\r\n\r\n  const { name, size, type, modifiedAt, shared, isFavorited } = row;\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { copy } = useCopyToClipboard();\r\n\r\n  const [inviteEmail, setInviteEmail] = useState('');\r\n\r\n  const favorite = useBoolean(isFavorited);\r\n\r\n  const details = useBoolean();\r\n\r\n  const share = useBoolean();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  const handleChangeInvite = useCallback((event) => {\r\n    setInviteEmail(event.target.value);\r\n  }, []);\r\n\r\n  const handleClick = useDoubleClick({\r\n    click: () => {\r\n      details.onTrue();\r\n    },\r\n    doubleClick: () => console.info('DOUBLE CLICK'),\r\n  });\r\n\r\n  const handleCopy = useCallback(() => {\r\n    enqueueSnackbar('Copied!');\r\n    copy(row.url);\r\n  }, [copy, enqueueSnackbar, row.url]);\r\n\r\n  const defaultStyles = {\r\n    borderTop: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\r\n    borderBottom: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\r\n    '&:first-of-type': {\r\n      borderTopLeftRadius: 16,\r\n      borderBottomLeftRadius: 16,\r\n      borderLeft: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\r\n    },\r\n    '&:last-of-type': {\r\n      borderTopRightRadius: 16,\r\n      borderBottomRightRadius: 16,\r\n      borderRight: `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow\r\n        selected={selected}\r\n        sx={{\r\n          borderRadius: 2,\r\n          [`&.${tableRowClasses.selected}, &:hover`]: {\r\n            backgroundColor: 'background.paper',\r\n            boxShadow: theme.customShadows.z20,\r\n            transition: theme.transitions.create(['background-color', 'box-shadow'], {\r\n              duration: theme.transitions.duration.shortest,\r\n            }),\r\n            '&:hover': {\r\n              backgroundColor: 'background.paper',\r\n              boxShadow: theme.customShadows.z20,\r\n            },\r\n          },\r\n          [`& .${tableCellClasses.root}`]: {\r\n            ...defaultStyles,\r\n          },\r\n          ...(details.value && {\r\n            [`& .${tableCellClasses.root}`]: {\r\n              ...defaultStyles,\r\n            },\r\n          }),\r\n        }}\r\n      >\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            checked={selected}\r\n            onDoubleClick={() => console.info('ON DOUBLE CLICK')}\r\n            onClick={onSelectRow}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell onClick={handleClick}>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <FileThumbnail file={type} sx={{ width: 36, height: 36 }} />\r\n\r\n            <Typography\r\n              noWrap\r\n              variant=\"inherit\"\r\n              sx={{\r\n                maxWidth: 360,\r\n                cursor: 'pointer',\r\n                ...(details.value && { fontWeight: 'fontWeightBold' }),\r\n              }}\r\n            >\r\n              {name}\r\n            </Typography>\r\n          </Stack>\r\n        </TableCell>\r\n\r\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\r\n          {fData(size)}\r\n        </TableCell>\r\n\r\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\r\n          {type}\r\n        </TableCell>\r\n\r\n        <TableCell onClick={handleClick} sx={{ whiteSpace: 'nowrap' }}>\r\n          <ListItemText\r\n            primary={format(new Date(modifiedAt), 'dd MMM yyyy')}\r\n            secondary={format(new Date(modifiedAt), 'p')}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.5,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" onClick={handleClick}>\r\n          <AvatarGroup\r\n            max={4}\r\n            sx={{\r\n              display: 'inline-flex',\r\n              [`& .${avatarGroupClasses.avatar}`]: {\r\n                width: 24,\r\n                height: 24,\r\n                '&:first-of-type': {\r\n                  fontSize: 12,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {shared &&\r\n              shared.map((person) => (\r\n                <Avatar key={person.id} alt={person.name} src={person.avatarUrl} />\r\n              ))}\r\n          </AvatarGroup>\r\n        </TableCell>\r\n\r\n        <TableCell\r\n          align=\"right\"\r\n          sx={{\r\n            px: 1,\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          <Checkbox\r\n            color=\"warning\"\r\n            icon={<Iconify icon=\"eva:star-outline\" />}\r\n            checkedIcon={<Iconify icon=\"eva:star-fill\" />}\r\n            checked={favorite.value}\r\n            onChange={favorite.onToggle}\r\n            sx={{ p: 0.75 }}\r\n          />\r\n\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n            handleCopy();\r\n          }}\r\n        >\r\n          <Iconify icon=\"eva:link-2-fill\" />\r\n          Copy Link\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n            share.onTrue();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:share-bold\" />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <FileManagerFileDetails\r\n        item={row}\r\n        favorited={favorite.value}\r\n        onFavorite={favorite.onToggle}\r\n        onCopyLink={handleCopy}\r\n        open={details.value}\r\n        onClose={details.onFalse}\r\n        onDelete={onDeleteRow}\r\n      />\r\n\r\n      <FileManagerShareDialog\r\n        open={share.value}\r\n        shared={shared}\r\n        inviteEmail={inviteEmail}\r\n        onChangeInvite={handleChangeInvite}\r\n        onCopyLink={handleCopy}\r\n        onClose={() => {\r\n          share.onFalse();\r\n          setInviteEmail('');\r\n        }}\r\n      />\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFileManagerTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\nimport { tablePaginationClasses } from '@mui/material/TablePagination';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport {\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\nimport FileManagerTableRow from './file-manager-table-row';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'size', label: 'Size', width: 120 },\r\n  { id: 'type', label: 'Type', width: 120 },\r\n  { id: 'modifiedAt', label: 'Modified', width: 140 },\r\n  { id: 'shared', label: 'Shared', align: 'right', width: 140 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerTable({\r\n  table,\r\n  tableData,\r\n  notFound,\r\n  onDeleteRow,\r\n  dataFiltered,\r\n  onOpenConfirm,\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const {\r\n    dense,\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangeDense,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n  } = table;\r\n\r\n  const denseHeight = dense ? 58 : 78;\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          m: theme.spacing(-2, -3, -3, -3),\r\n        }}\r\n      >\r\n        <TableSelectedAction\r\n          dense={dense}\r\n          numSelected={selected.length}\r\n          rowCount={tableData.length}\r\n          onSelectAllRows={(checked) =>\r\n            onSelectAllRows(\r\n              checked,\r\n              tableData.map((row) => row.id)\r\n            )\r\n          }\r\n          action={\r\n            <>\r\n              <Tooltip title=\"Share\">\r\n                <IconButton color=\"primary\">\r\n                  <Iconify icon=\"solar:share-bold\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              <Tooltip title=\"Delete\">\r\n                <IconButton color=\"primary\" onClick={onOpenConfirm}>\r\n                  <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </>\r\n          }\r\n          sx={{\r\n            pl: 1,\r\n            pr: 2,\r\n            top: 16,\r\n            left: 24,\r\n            right: 24,\r\n            width: 'auto',\r\n            borderRadius: 1.5,\r\n          }}\r\n        />\r\n\r\n        <TableContainer\r\n          sx={{\r\n            p: theme.spacing(0, 3, 3, 3),\r\n          }}\r\n        >\r\n          <Table\r\n            size={dense ? 'small' : 'medium'}\r\n            sx={{\r\n              minWidth: 960,\r\n              borderCollapse: 'separate',\r\n              borderSpacing: '0 16px',\r\n            }}\r\n          >\r\n            <TableHeadCustom\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headLabel={TABLE_HEAD}\r\n              rowCount={tableData.length}\r\n              numSelected={selected.length}\r\n              onSort={onSort}\r\n              onSelectAllRows={(checked) =>\r\n                onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              sx={{\r\n                [`& .${tableCellClasses.head}`]: {\r\n                  '&:first-of-type': {\r\n                    borderTopLeftRadius: 12,\r\n                    borderBottomLeftRadius: 12,\r\n                  },\r\n                  '&:last-of-type': {\r\n                    borderTopRightRadius: 12,\r\n                    borderBottomRightRadius: 12,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n\r\n            <TableBody>\r\n              {dataFiltered\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <FileManagerTableRow\r\n                    key={row.id}\r\n                    row={row}\r\n                    selected={selected.includes(row.id)}\r\n                    onSelectRow={() => onSelectRow(row.id)}\r\n                    onDeleteRow={() => onDeleteRow(row.id)}\r\n                  />\r\n                ))}\r\n\r\n              <TableEmptyRows\r\n                height={denseHeight}\r\n                emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\r\n              />\r\n\r\n              <TableNoData\r\n                notFound={notFound}\r\n                sx={{\r\n                  m: -2,\r\n                  borderRadius: 1.5,\r\n                  border: `dashed 1px ${theme.palette.divider}`,\r\n                }}\r\n              />\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n\r\n      <TablePaginationCustom\r\n        count={dataFiltered.length}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        onPageChange={onChangePage}\r\n        onRowsPerPageChange={onChangeRowsPerPage}\r\n        //\r\n        dense={dense}\r\n        onChangeDense={onChangeDense}\r\n        sx={{\r\n          [`& .${tablePaginationClasses.toolbar}`]: {\r\n            borderTopColor: 'transparent',\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFileManagerTable.propTypes = {\r\n  dataFiltered: PropTypes.array,\r\n  notFound: PropTypes.bool,\r\n  onDeleteRow: PropTypes.func,\r\n  onOpenConfirm: PropTypes.func,\r\n  table: PropTypes.object,\r\n  tableData: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport FileThumbnail from 'src/components/file-thumbnail';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport CustomDateRangePicker, { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerFilters({\r\n  openDateRange,\r\n  onCloseDateRange,\r\n  onOpenDateRange,\r\n  //\r\n  filters,\r\n  onFilters,\r\n  //\r\n  dateError,\r\n  typeOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const renderLabel = filters.type.length ? filters.type.slice(0, 2).join(',') : 'All type';\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterType = useCallback(\r\n    (newValue) => {\r\n      const checked = filters.type.includes(newValue)\r\n        ? filters.type.filter((value) => value !== newValue)\r\n        : [...filters.type, newValue];\r\n      onFilters('type', checked);\r\n    },\r\n    [filters.type, onFilters]\r\n  );\r\n\r\n  const handleResetType = useCallback(() => {\r\n    popover.onClose();\r\n    onFilters('type', []);\r\n  }, [onFilters, popover]);\r\n\r\n  const renderFilterName = (\r\n    <TextField\r\n      value={filters.name}\r\n      onChange={handleFilterName}\r\n      placeholder=\"Search...\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      sx={{\r\n        width: { xs: 1, md: 260 },\r\n      }}\r\n    />\r\n  );\r\n\r\n  const renderFilterType = (\r\n    <>\r\n      <Button\r\n        color=\"inherit\"\r\n        onClick={popover.onOpen}\r\n        endIcon={\r\n          <Iconify\r\n            icon={popover.open ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\r\n            sx={{ ml: -0.5 }}\r\n          />\r\n        }\r\n      >\r\n        {renderLabel}\r\n        {filters.type.length > 2 && (\r\n          <Label color=\"info\" sx={{ ml: 1 }}>\r\n            +{filters.type.length - 2}\r\n          </Label>\r\n        )}\r\n      </Button>\r\n\r\n      <CustomPopover open={popover.open} onClose={popover.onClose} sx={{ p: 2.5 }}>\r\n        <Stack spacing={2.5}>\r\n          <Box\r\n            gap={1}\r\n            display=\"grid\"\r\n            gridTemplateColumns={{\r\n              xs: 'repeat(2, 1fr)',\r\n              sm: 'repeat(4, 1fr)',\r\n            }}\r\n          >\r\n            {typeOptions.map((type) => {\r\n              const selected = filters.type.includes(type);\r\n\r\n              return (\r\n                <CardActionArea\r\n                  key={type}\r\n                  onClick={() => handleFilterType(type)}\r\n                  sx={{\r\n                    p: 1,\r\n                    borderRadius: 1,\r\n                    cursor: 'pointer',\r\n                    border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n                    ...(selected && {\r\n                      bgcolor: 'action.selected',\r\n                    }),\r\n                  }}\r\n                >\r\n                  <Stack spacing={1} direction=\"row\" alignItems=\"center\">\r\n                    <FileThumbnail file={type} />\r\n                    <Typography variant={selected ? 'subtitle2' : 'body2'}>{type}</Typography>\r\n                  </Stack>\r\n                </CardActionArea>\r\n              );\r\n            })}\r\n          </Box>\r\n\r\n          <Stack spacing={1.5} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\r\n            <Button variant=\"outlined\" color=\"inherit\" onClick={handleResetType}>\r\n              Clear\r\n            </Button>\r\n\r\n            <Button variant=\"contained\" onClick={popover.onClose}>\r\n              Apply\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n\r\n  const renderFilterDate = (\r\n    <>\r\n      <Button\r\n        color=\"inherit\"\r\n        onClick={onOpenDateRange}\r\n        endIcon={\r\n          <Iconify\r\n            icon={openDateRange ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\r\n            sx={{ ml: -0.5 }}\r\n          />\r\n        }\r\n      >\r\n        {!!filters.startDate && !!filters.endDate\r\n          ? shortDateLabel(filters.startDate, filters.endDate)\r\n          : 'Select Date'}\r\n      </Button>\r\n\r\n      <CustomDateRangePicker\r\n        variant=\"calendar\"\r\n        startDate={filters.startDate}\r\n        endDate={filters.endDate}\r\n        onChangeStartDate={handleFilterStartDate}\r\n        onChangeEndDate={handleFilterEndDate}\r\n        open={openDateRange}\r\n        onClose={onCloseDateRange}\r\n        selected={!!filters.startDate && !!filters.endDate}\r\n        error={dateError}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Stack\r\n      spacing={1}\r\n      direction={{ xs: 'column', md: 'row' }}\r\n      alignItems={{ xs: 'flex-end', md: 'center' }}\r\n      sx={{ width: 1 }}\r\n    >\r\n      {renderFilterName}\r\n\r\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" flexGrow={1}>\r\n        {renderFilterDate}\r\n\r\n        {renderFilterType}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nFileManagerFilters.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onCloseDateRange: PropTypes.func,\r\n  onFilters: PropTypes.func,\r\n  onOpenDateRange: PropTypes.func,\r\n  openDateRange: PropTypes.bool,\r\n  typeOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useCopyToClipboard } from 'src/hooks/use-copy-to-clipboard';\r\n// utils\r\nimport { fDateTime } from 'src/utils/format-time';\r\nimport { fData } from 'src/utils/format-number';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport TextMaxLine from 'src/components/text-max-line';\r\nimport FileThumbnail from 'src/components/file-thumbnail';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport FileManagerShareDialog from './file-manager-share-dialog';\r\nimport FileManagerFileDetails from './file-manager-file-details';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerFileItem({ file, selected, onSelect, onDelete, sx, ...other }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { copy } = useCopyToClipboard();\r\n\r\n  const [inviteEmail, setInviteEmail] = useState('');\r\n\r\n  const checkbox = useBoolean();\r\n\r\n  const share = useBoolean();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const details = useBoolean();\r\n\r\n  const favorite = useBoolean(file.isFavorited);\r\n\r\n  const popover = usePopover();\r\n\r\n  const handleChangeInvite = useCallback((event) => {\r\n    setInviteEmail(event.target.value);\r\n  }, []);\r\n\r\n  const handleCopy = useCallback(() => {\r\n    enqueueSnackbar('Copied!');\r\n    copy(file.url);\r\n  }, [copy, enqueueSnackbar, file.url]);\r\n\r\n  const renderIcon =\r\n    (checkbox.value || selected) && onSelect ? (\r\n      <Checkbox\r\n        size=\"medium\"\r\n        checked={selected}\r\n        onClick={onSelect}\r\n        icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\r\n        checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\r\n        sx={{ p: 0.75 }}\r\n      />\r\n    ) : (\r\n      <FileThumbnail file={file.type} sx={{ width: 36, height: 36 }} />\r\n    );\r\n\r\n  const renderAction = (\r\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ top: 8, right: 8, position: 'absolute' }}>\r\n      <Checkbox\r\n        color=\"warning\"\r\n        icon={<Iconify icon=\"eva:star-outline\" />}\r\n        checkedIcon={<Iconify icon=\"eva:star-fill\" />}\r\n        checked={favorite.value}\r\n        onChange={favorite.onToggle}\r\n      />\r\n\r\n      <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n        <Iconify icon=\"eva:more-vertical-fill\" />\r\n      </IconButton>\r\n    </Stack>\r\n  );\r\n\r\n  const renderText = (\r\n    <>\r\n      <TextMaxLine\r\n        persistent\r\n        variant=\"subtitle2\"\r\n        onClick={details.onTrue}\r\n        sx={{ width: 1, mt: 2, mb: 0.5 }}\r\n      >\r\n        {file.name}\r\n      </TextMaxLine>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          maxWidth: 0.99,\r\n          whiteSpace: 'nowrap',\r\n          typography: 'caption',\r\n          color: 'text.disabled',\r\n        }}\r\n      >\r\n        {fData(file.size)}\r\n\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mx: 0.75,\r\n            width: 2,\r\n            height: 2,\r\n            flexShrink: 0,\r\n            borderRadius: '50%',\r\n            bgcolor: 'currentColor',\r\n          }}\r\n        />\r\n        <Typography noWrap component=\"span\" variant=\"caption\">\r\n          {fDateTime(file.modifiedAt)}\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  const renderAvatar = (\r\n    <AvatarGroup\r\n      max={3}\r\n      sx={{\r\n        mt: 1,\r\n        [`& .${avatarGroupClasses.avatar}`]: {\r\n          width: 24,\r\n          height: 24,\r\n          '&:first-of-type': {\r\n            fontSize: 12,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {file.shared?.map((person) => (\r\n        <Avatar key={person.id} alt={person.name} src={person.avatarUrl} />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        component={Paper}\r\n        variant=\"outlined\"\r\n        alignItems=\"flex-start\"\r\n        sx={{\r\n          p: 2.5,\r\n          borderRadius: 2,\r\n          bgcolor: 'unset',\r\n          cursor: 'pointer',\r\n          position: 'relative',\r\n          ...((checkbox.value || selected) && {\r\n            bgcolor: 'background.paper',\r\n            boxShadow: (theme) => theme.customShadows.z20,\r\n          }),\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        <Box onMouseEnter={checkbox.onTrue} onMouseLeave={checkbox.onFalse}>\r\n          {renderIcon}\r\n        </Box>\r\n\r\n        {renderText}\r\n\r\n        {renderAvatar}\r\n\r\n        {renderAction}\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n            handleCopy();\r\n          }}\r\n        >\r\n          <Iconify icon=\"eva:link-2-fill\" />\r\n          Copy Link\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n            share.onTrue();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:share-bold\" />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <FileManagerFileDetails\r\n        item={file}\r\n        favorited={favorite.value}\r\n        onFavorite={favorite.onToggle}\r\n        onCopyLink={handleCopy}\r\n        open={details.value}\r\n        onClose={details.onFalse}\r\n        onDelete={() => {\r\n          details.onFalse();\r\n          onDelete();\r\n        }}\r\n      />\r\n\r\n      <FileManagerShareDialog\r\n        open={share.value}\r\n        shared={file.shared}\r\n        inviteEmail={inviteEmail}\r\n        onChangeInvite={handleChangeInvite}\r\n        onCopyLink={handleCopy}\r\n        onClose={() => {\r\n          share.onFalse();\r\n          setInviteEmail('');\r\n        }}\r\n      />\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDelete}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFileManagerFileItem.propTypes = {\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  onDelete: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Portal from '@mui/material/Portal';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerActionSelected({\r\n  action,\r\n  selected,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllItems,\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Portal>\r\n      <Box\r\n        sx={{\r\n          right: 0,\r\n          zIndex: 9,\r\n          bottom: 0,\r\n          display: 'flex',\r\n          borderRadius: 1.5,\r\n          position: 'fixed',\r\n          alignItems: 'center',\r\n          bgcolor: 'text.primary',\r\n          p: (theme) => theme.spacing(1.5, 2, 1.5, 1),\r\n          boxShadow: (theme) => theme.customShadows.z20,\r\n          m: { xs: 2, md: 3 },\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        <Checkbox\r\n          indeterminate={!!numSelected && numSelected < rowCount}\r\n          checked={!!rowCount && numSelected === rowCount}\r\n          onChange={(event) => onSelectAllItems(event.target.checked)}\r\n          icon={<Iconify icon=\"eva:radio-button-off-fill\" />}\r\n          checkedIcon={<Iconify icon=\"eva:checkmark-circle-2-fill\" />}\r\n          indeterminateIcon={<Iconify icon=\"eva:minus-circle-fill\" />}\r\n        />\r\n\r\n        {selected && (\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            sx={{\r\n              mr: 2,\r\n              color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\r\n            }}\r\n          >\r\n            {selected.length} Items selected\r\n          </Typography>\r\n        )}\r\n\r\n        {action && action}\r\n      </Box>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nFileManagerActionSelected.propTypes = {\r\n  action: PropTypes.node,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllItems: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  selected: PropTypes.array,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useRef, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Collapse from '@mui/material/Collapse';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport FileManagerPanel from './file-manager-panel';\r\nimport FileManagerFileItem from './file-manager-file-item';\r\nimport FileManagerFolderItem from './file-manager-folder-item';\r\nimport FileManagerActionSelected from './file-manager-action-selected';\r\nimport FileManagerShareDialog from './file-manager-share-dialog';\r\nimport FileManagerNewFolderDialog from './file-manager-new-folder-dialog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerGridView({\r\n  table,\r\n  data,\r\n  dataFiltered,\r\n  onDeleteItem,\r\n  onOpenConfirm,\r\n}) {\r\n  const { selected, onSelectRow: onSelectItem, onSelectAllRows: onSelectAllItems } = table;\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const [folderName, setFolderName] = useState('');\r\n\r\n  const [inviteEmail, setInviteEmail] = useState('');\r\n\r\n  const share = useBoolean();\r\n\r\n  const newFolder = useBoolean();\r\n\r\n  const upload = useBoolean();\r\n\r\n  const files = useBoolean();\r\n\r\n  const folders = useBoolean();\r\n\r\n  const handleChangeInvite = useCallback((event) => {\r\n    setInviteEmail(event.target.value);\r\n  }, []);\r\n\r\n  const handleChangeFolderName = useCallback((event) => {\r\n    setFolderName(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box ref={containerRef}>\r\n        <FileManagerPanel\r\n          title=\"Folders\"\r\n          subTitle={`${data.filter((item) => item.type === 'folder').length} folders`}\r\n          onOpen={newFolder.onTrue}\r\n          collapse={folders.value}\r\n          onCollapse={folders.onToggle}\r\n        />\r\n\r\n        <Collapse in={!folders.value} unmountOnExit>\r\n          <Box\r\n            gap={3}\r\n            display=\"grid\"\r\n            gridTemplateColumns={{\r\n              xs: 'repeat(1, 1fr)',\r\n              sm: 'repeat(2, 1fr)',\r\n              md: 'repeat(3, 1fr)',\r\n              lg: 'repeat(4, 1fr)',\r\n            }}\r\n          >\r\n            {dataFiltered\r\n              .filter((i) => i.type === 'folder')\r\n              .map((folder) => (\r\n                <FileManagerFolderItem\r\n                  key={folder.id}\r\n                  folder={folder}\r\n                  selected={selected.includes(folder.id)}\r\n                  onSelect={() => onSelectItem(folder.id)}\r\n                  onDelete={() => onDeleteItem(folder.id)}\r\n                  sx={{ maxWidth: 'auto' }}\r\n                />\r\n              ))}\r\n          </Box>\r\n        </Collapse>\r\n\r\n        <Divider sx={{ my: 5, borderStyle: 'dashed' }} />\r\n\r\n        <FileManagerPanel\r\n          title=\"Files\"\r\n          subTitle={`${data.filter((item) => item.type !== 'folder').length} files`}\r\n          onOpen={upload.onTrue}\r\n          collapse={files.value}\r\n          onCollapse={files.onToggle}\r\n        />\r\n\r\n        <Collapse in={!files.value} unmountOnExit>\r\n          <Box\r\n            display=\"grid\"\r\n            gridTemplateColumns={{\r\n              xs: 'repeat(1, 1fr)',\r\n              sm: 'repeat(2, 1fr)',\r\n              md: 'repeat(3, 1fr)',\r\n              lg: 'repeat(4, 1fr)',\r\n            }}\r\n            gap={3}\r\n          >\r\n            {dataFiltered\r\n              .filter((i) => i.type !== 'folder')\r\n              .map((file) => (\r\n                <FileManagerFileItem\r\n                  key={file.id}\r\n                  file={file}\r\n                  selected={selected.includes(file.id)}\r\n                  onSelect={() => onSelectItem(file.id)}\r\n                  onDelete={() => onDeleteItem(file.id)}\r\n                  sx={{ maxWidth: 'auto' }}\r\n                />\r\n              ))}\r\n          </Box>\r\n        </Collapse>\r\n\r\n        {!!selected?.length && (\r\n          <FileManagerActionSelected\r\n            numSelected={selected.length}\r\n            rowCount={data.length}\r\n            selected={selected}\r\n            onSelectAllItems={(checked) =>\r\n              onSelectAllItems(\r\n                checked,\r\n                data.map((row) => row.id)\r\n              )\r\n            }\r\n            action={\r\n              <>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"error\"\r\n                  variant=\"contained\"\r\n                  startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n                  onClick={onOpenConfirm}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  startIcon={<Iconify icon=\"solar:share-bold\" />}\r\n                  onClick={share.onTrue}\r\n                >\r\n                  Share\r\n                </Button>\r\n              </>\r\n            }\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <FileManagerShareDialog\r\n        open={share.value}\r\n        inviteEmail={inviteEmail}\r\n        onChangeInvite={handleChangeInvite}\r\n        onClose={() => {\r\n          share.onFalse();\r\n          setInviteEmail('');\r\n        }}\r\n      />\r\n\r\n      <FileManagerNewFolderDialog open={upload.value} onClose={upload.onFalse} />\r\n\r\n      <FileManagerNewFolderDialog\r\n        open={newFolder.value}\r\n        onClose={newFolder.onFalse}\r\n        title=\"New Folder\"\r\n        onCreate={() => {\r\n          newFolder.onFalse();\r\n          setFolderName('');\r\n          console.info('CREATE NEW FOLDER', folderName);\r\n        }}\r\n        folderName={folderName}\r\n        onChangeFolderName={handleChangeFolderName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFileManagerGridView.propTypes = {\r\n  data: PropTypes.array,\r\n  dataFiltered: PropTypes.array,\r\n  onDeleteItem: PropTypes.func,\r\n  onOpenConfirm: PropTypes.func,\r\n  table: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  canReset,\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveTypes = (inputValue) => {\r\n    const newValue = filters.type.filter((item) => item !== inputValue);\r\n    onFilters('type', newValue);\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {!!filters.type.length && (\r\n          <Block label=\"Types:\">\r\n            {filters.type.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveTypes(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        {canReset && (\r\n          <Button\r\n            color=\"error\"\r\n            onClick={onResetFilters}\r\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n          >\r\n            Clear\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nFileManagerFiltersResult.propTypes = {\r\n  canReset: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\nimport { _allFiles, FILE_TYPE_OPTIONS } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport EmptyContent from 'src/components/empty-content';\r\nimport { fileFormat } from 'src/components/file-thumbnail';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport { useTable, getComparator } from 'src/components/table';\r\n//\r\nimport FileManagerTable from '../file-manager-table';\r\nimport FileManagerFilters from '../file-manager-filters';\r\nimport FileManagerGridView from '../file-manager-grid-view';\r\nimport FileManagerFiltersResult from '../file-manager-filters-result';\r\nimport FileManagerNewFolderDialog from '../file-manager-new-folder-dialog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  type: [],\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerView() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const openDateRange = useBoolean();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const upload = useBoolean();\r\n\r\n  const [view, setView] = useState('list');\r\n\r\n  const [tableData, setTableData] = useState(_allFiles);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const canReset =\r\n    !!filters.name || !!filters.type.length || (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleChangeView = useCallback((event, newView) => {\r\n    if (newView !== null) {\r\n      setView(newView);\r\n    }\r\n  }, []);\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteItem = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteItems = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const renderFilters = (\r\n    <Stack\r\n      spacing={2}\r\n      direction={{ xs: 'column', md: 'row' }}\r\n      alignItems={{ xs: 'flex-end', md: 'center' }}\r\n    >\r\n      <FileManagerFilters\r\n        openDateRange={openDateRange.value}\r\n        onCloseDateRange={openDateRange.onFalse}\r\n        onOpenDateRange={openDateRange.onTrue}\r\n        //\r\n        filters={filters}\r\n        onFilters={handleFilters}\r\n        //\r\n        dateError={dateError}\r\n        typeOptions={FILE_TYPE_OPTIONS}\r\n      />\r\n\r\n      <ToggleButtonGroup size=\"small\" value={view} exclusive onChange={handleChangeView}>\r\n        <ToggleButton value=\"list\">\r\n          <Iconify icon=\"solar:list-bold\" />\r\n        </ToggleButton>\r\n\r\n        <ToggleButton value=\"grid\">\r\n          <Iconify icon=\"mingcute:dot-grid-fill\" />\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </Stack>\r\n  );\r\n\r\n  const renderResults = (\r\n    <FileManagerFiltersResult\r\n      filters={filters}\r\n      onResetFilters={handleResetFilters}\r\n      //\r\n      canReset={canReset}\r\n      onFilters={handleFilters}\r\n      //\r\n      results={dataFiltered.length}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Typography variant=\"h4\">File Manager</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Iconify icon=\"eva:cloud-upload-fill\" />}\r\n            onClick={upload.onTrue}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </Stack>\r\n\r\n        <Stack\r\n          spacing={2.5}\r\n          sx={{\r\n            my: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          {renderFilters}\r\n\r\n          {canReset && renderResults}\r\n        </Stack>\r\n\r\n        {notFound ? (\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n            }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {view === 'list' ? (\r\n              <FileManagerTable\r\n                table={table}\r\n                tableData={tableData}\r\n                dataFiltered={dataFiltered}\r\n                onDeleteRow={handleDeleteItem}\r\n                notFound={notFound}\r\n                onOpenConfirm={confirm.onTrue}\r\n              />\r\n            ) : (\r\n              <FileManagerGridView\r\n                table={table}\r\n                data={tableData}\r\n                dataFiltered={dataFiltered}\r\n                onDeleteItem={handleDeleteItem}\r\n                onOpenConfirm={confirm.onTrue}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n\r\n      <FileManagerNewFolderDialog open={upload.value} onClose={upload.onFalse} />\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteItems();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { name, type, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (file) => file.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (type.length) {\r\n    inputData = inputData.filter((file) => type.includes(fileFormat(file.type)));\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (file) =>\r\n          fTimestamp(file.createdAt) >= fTimestamp(startDate) &&\r\n          fTimestamp(file.createdAt) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport { FileManagerView } from 'src/sections/file-manager/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FileManagerPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: File Manager</title>\r\n      </Helmet>\r\n\r\n      <FileManagerView />\r\n    </>\r\n  );\r\n}\r\n"],"names":["shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","concat","useDateRangePicker","start","end","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","setEndDate","_useState5","_useState6","setStartDate","error","getTime","onOpen","useCallback","onClose","onChangeStartDate","newValue","onChangeEndDate","onReset","selected","label","shortLabel","CustomDateRangePicker","_ref","_ref$title","title","_ref$variant","variant","mdUp","useResponsive","isCalendarView","_jsxs","Dialog","fullWidth","maxWidth","PaperProps","sx","_objectSpread","children","_jsx","DialogTitle","pb","DialogContent","overflow","Stack","justifyContent","spacing","direction","pt","_Fragment","Paper","borderRadius","borderColor","borderStyle","DateCalendar","value","onChange","DatePicker","FormHelperText","px","DialogActions","Button","color","onClick","disabled","EmptyContent","imgUrl","action","filled","description","other","_objectWithoutProperties","_excluded","flexGrow","alignItems","height","bgcolor","theme","alpha","palette","grey","border","Box","component","alt","src","width","Typography","mt","textAlign","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","defaultDense","dense","setDense","defaultCurrentPage","setPage","defaultOrderBy","setOrderBy","_useState7","defaultRowsPerPage","_useState8","setRowsPerPage","_useState9","defaultOrder","_useState10","setOrder","_useState11","defaultSelected","_useState12","setSelected","onSort","id","onSelectRow","inputValue","newSelected","includes","filter","_toConsumableArray","onChangeRowsPerPage","event","parseInt","target","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","length","ceil","TableNoData","notFound","TableRow","TableCell","colSpan","py","p","TableSkeleton","Object","assign","_objectDestructuringEmpty","Skeleton","flexShrink","TableEmptyRows","visuallyHidden","margin","padding","position","whiteSpace","clip","TableHeadCustom","headLabel","rowCount","numSelected","TableHead","map","headCell","align","sortDirection","minWidth","background","mode","TableSortLabel","hideSortIcon","active","TableSelectedAction","pl","pr","top","left","zIndex","Checkbox","indeterminate","ml","TablePaginationCustom","_ref$rowsPerPageOptio","rowsPerPageOptions","TablePagination","borderTopColor","FormControlLabel","control","Switch","sm","useTypography","useTheme","breakpoints","useWidth","key","up","getFont","typography","fontSize","round","parseFloat","lineHeight","Number","_theme$typography$var","fontWeight","letterSpacing","forwardRef","ref","asLink","_ref$line","line","_ref$persistent","persistent","styles","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","Link","useDoubleClick","click","doubleClick","_ref$timeout","timeout","clickTimeout","useRef","clearTimeout","current","detail","setTimeout","FileManagerTableRow","_objectSpread2","row","onDeleteRow","name","size","type","modifiedAt","shared","isFavorited","enqueueSnackbar","useSnackbar","copy","useCopyToClipboard","inviteEmail","setInviteEmail","favorite","useBoolean","details","share","confirm","popover","usePopover","handleChangeInvite","handleClick","onTrue","console","info","handleCopy","url","defaultStyles","borderTop","borderBottom","borderTopLeftRadius","borderBottomLeftRadius","borderLeft","borderTopRightRadius","borderBottomRightRadius","borderRight","_defineProperty","tableRowClasses","backgroundColor","boxShadow","customShadows","z20","transition","transitions","create","duration","shortest","tableCellClasses","root","onDoubleClick","FileThumbnail","file","noWrap","cursor","fData","ListItemText","primary","format","secondary","primaryTypographyProps","secondaryTypographyProps","AvatarGroup","avatarGroupClasses","avatar","person","Avatar","avatarUrl","icon","Iconify","checkedIcon","onToggle","IconButton","CustomPopover","arrow","MenuItem","Divider","FileManagerFileDetails","item","favorited","onFavorite","onCopyLink","onFalse","onDelete","FileManagerShareDialog","onChangeInvite","ConfirmDialog","content","TABLE_HEAD","FileManagerTable","table","tableData","dataFiltered","onOpenConfirm","denseHeight","m","Tooltip","right","TableContainer","Table","borderCollapse","borderSpacing","head","TableBody","slice","divider","count","onPageChange","onRowsPerPageChange","tablePaginationClasses","toolbar","FileManagerFilters","openDateRange","onCloseDateRange","onOpenDateRange","filters","onFilters","dateError","typeOptions","renderLabel","join","handleFilterName","handleFilterStartDate","handleFilterEndDate","handleFilterType","handleResetType","renderFilterName","TextField","placeholder","InputProps","startAdornment","InputAdornment","xs","md","renderFilterType","endIcon","Label","gap","gridTemplateColumns","CardActionArea","renderFilterDate","FileManagerFileItem","_file$shared","onSelect","checkbox","renderIcon","renderAction","renderText","TextMaxLine","mb","mx","fDateTime","renderAvatar","onMouseEnter","onMouseLeave","FileManagerActionSelected","onSelectAllItems","Portal","bottom","indeterminateIcon","mr","FileManagerGridView","data","onDeleteItem","onSelectItem","containerRef","folderName","setFolderName","newFolder","upload","files","folders","handleChangeFolderName","FileManagerPanel","subTitle","collapse","onCollapse","Collapse","in","unmountOnExit","lg","i","folder","FileManagerFolderItem","my","startIcon","FileManagerNewFolderDialog","onCreate","onChangeFolderName","FileManagerFiltersResult","canReset","onResetFilters","results","flexWrap","Block","Chip","handleRemoveTypes","_ref2","_excluded2","defaultFilters","FileManagerView","settings","useSettingsContext","view","setView","_allFiles","setTableData","setFilters","inputData","comparator","stabilizedThis","el","index","sort","toLowerCase","indexOf","fileFormat","fTimestamp","createdAt","applyFilter","dataInPage","handleChangeView","newView","handleFilters","prevState","handleDeleteItem","deleteRow","handleDeleteItems","deleteRows","handleResetFilters","renderFilters","FILE_TYPE_OPTIONS","ToggleButtonGroup","exclusive","ToggleButton","renderResults","Container","themeStretch","FileManagerPage","Helmet"],"sourceRoot":""}