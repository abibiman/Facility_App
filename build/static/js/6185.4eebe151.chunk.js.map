{"version":3,"file":"static/js/6185.4eebe151.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/primary-care/view/provider-selection-popup.js","sections/primary-care/primary-care-list-card.js","sections/primary-care/primary-care-list.js","sections/primary-care/view/primary-care-list-view.js","sections/primary-care/providers-profile-home.js","sections/primary-care/providers-profile-cover.js","sections/primary-care/providers-contact-info.js","sections/primary-care/helpers/request.js","sections/primary-care/view/action-box.js","sections/primary-care/view/primary-care-profile-view.js","sections/primary-care/view/general-primary-care-profile-view.js","sections/primary-care/view/primary-care-intro.js","sections/primary-care/view/primary-care-main-view.js","utils/format-number.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          '@media (max-width: 475px)': {\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Typography, Stack, Dialog, Box, Button } from '@mui/material';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProviderSelectionPopup({ open, data, close }) {\r\n  const { user } = useContext(AuthContext) || {};\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const selectProvider = async () => {\r\n    try {\r\n      const { data: resData } = await axios.post(\r\n        `https://abibiman-api.onrender.com/primarycare`,\r\n        { userID: user?.userID, providerID: data },\r\n        {\r\n          headers: {\r\n            Authorization: `Basic ${user?.token}`,\r\n          },\r\n        }\r\n      );\r\n      enqueueSnackbar('Provider successfully selected');\r\n      close();\r\n      console.log(resData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Dialog open={open} onClose={close}>\r\n      <Stack\r\n        sx={{\r\n          padding: '40px 20px 20px',\r\n          '@media (max-width: 425px )': {\r\n            padding: '20px 10px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <Typography>\r\n          Would you like to select {data.title} {data.firstName} {data.lastName} as your primary\r\n          care provider?\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            margin: '10px 0',\r\n            gap: '10px',\r\n          }}\r\n        >\r\n          <Button\r\n            href=\"#\"\r\n            variant=\"contained\"\r\n            onClick={selectProvider}\r\n            sx={{\r\n              '@media (max-width: 425px )': {\r\n                width: '100%',\r\n              },\r\n              // background: `${theme.palette.primary.main}`,\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n\r\n          <Button\r\n            href=\"#\"\r\n            variant=\"contained\"\r\n            onClick={() => close()}\r\n            sx={{\r\n              '@media (max-width: 425px )': {\r\n                width: '100%',\r\n              },\r\n              // background: `${theme.palette.primary.main}`,\r\n            }}\r\n          >\r\n            No{' '}\r\n          </Button>\r\n        </Box>\r\n      </Stack>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nProviderSelectionPopup.propTypes = {\r\n  open: PropTypes.bool,\r\n  close: PropTypes.func,\r\n  data: PropTypes.object,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\n// utils\r\n// _mock\r\nimport { _socials } from 'src/_mock';\r\n// assets\r\nimport { AvatarShape } from 'src/assets/illustrations';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport ProviderSelectionPopup from './view/provider-selection-popup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrimaryCareListCard({ provider }) {\r\n  const { firstName, lastName, specialization, photo, providerID } = provider;\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <>\r\n      <Card sx={{ textAlign: 'center', position: 'relative' }}>\r\n        {' '}\r\n        {/* <Iconify\r\n          icon=\"zondicons:add-solid\"\r\n          sx={{\r\n            position: 'absolute',\r\n            right: '5%',\r\n            top: '5%',\r\n            boxShadow: ' rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => setOpenDialogBox(true)}\r\n        /> */}\r\n        <Link\r\n          to={`/dashboard/primary-care/profile/${providerID}`}\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          <Avatar\r\n            alt={name}\r\n            src={photo}\r\n            sx={{\r\n              width: 64,\r\n              height: 64,\r\n              zIndex: 11,\r\n              left: 0,\r\n              right: 0,\r\n              mx: 'auto',\r\n              mt: 2,\r\n              position: 'relative',\r\n            }}\r\n          />\r\n          <ListItemText\r\n            sx={{ mt: 4, mb: 1 }}\r\n            primary={name}\r\n            secondary={specialization}\r\n            primaryTypographyProps={{ typography: 'subtitle1', color: 'textPrimary' }}\r\n            secondaryTypographyProps={{ component: 'span', mt: 0.5, color: 'textSecondary' }}\r\n          />\r\n          <Box sx={{ position: 'relative' }}>\r\n            <AvatarShape\r\n              sx={{\r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 10,\r\n                mx: 'auto',\r\n                bottom: 56,\r\n                position: 'absolute',\r\n              }}\r\n            />\r\n          </Box>\r\n          {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ mb: 2.5 }}>\r\n            {_socials.map((social) => (\r\n              <IconButton\r\n                key={social.name}\r\n                sx={{\r\n                  color: social.color,\r\n                  '&:hover': {\r\n                    bgcolor: alpha(social.color, 0.08),\r\n                  },\r\n                }}\r\n              >\r\n                <Iconify icon={social.icon} />\r\n              </IconButton>\r\n            ))}\r\n          </Stack> */}\r\n        </Link>\r\n      </Card>\r\n      <ProviderSelectionPopup\r\n        data={provider}\r\n        open={openDialogBox}\r\n        close={() => setOpenDialogBox(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nPrimaryCareListCard.propTypes = {\r\n  provider: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\n//\r\nimport ProvidersCollectionCard from './primary-care-list-card';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrimaryCareList({ providers }) {\r\n  return (\r\n    <Box\r\n      gap={3}\r\n      display=\"grid\"\r\n      gridTemplateColumns={{\r\n        xs: 'repeat(1, 1fr)',\r\n        sm: 'repeat(2, 1fr)',\r\n        md: 'repeat(3, 1fr)',\r\n      }}\r\n    >\r\n      {providers.map((provider) => (\r\n        <ProvidersCollectionCard key={provider.id} provider={provider} />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nPrimaryCareList.propTypes = {\r\n  providers: PropTypes.array,\r\n};\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// @mui\r\nimport { Stack } from '@mui/material';\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n// import { SplashScreen } from 'src/components/loading-screen';\r\nimport LoadingScreen from 'src/components/loading-screen/loading-screen';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\nimport PrimaryCareList from '../primary-care-list';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProvidersCollectionView() {\r\n  const settings = useSettingsContext();\r\n  const { user } = useContext(AuthContext);\r\n  const { token } = user;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\r\n          `https://abibiman-api.onrender.com/providers/type/primary`,\r\n          {\r\n            headers: {\r\n              Authorization: `Basic ${token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(response);\r\n        setData(response?.data.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"All Primary Care Providers\"\r\n        links={[\r\n          { name: 'Dashboard', href: paths.dashboard.root },\r\n          { name: 'Providers', href: paths.dashboard.providers.collection.root },\r\n          { name: 'All' },\r\n        ]}\r\n        sx={{ mb: { xs: 3, md: 5 } }}\r\n      />\r\n\r\n      {/* {loading ? <LoadingScreen /> : <PrimaryCareList providers={data} />} */}\r\n      <PrimaryCareList providers={data} />\r\n    </Container>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n// _mock\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileHome({ info, posts }) {\r\n\r\n  const renderFollows = (\r\n    <Card sx={{ py: 3, textAlign: 'center', typography: 'h4' }}>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n      >\r\n        <Stack width={1}>\r\n          {fNumber(info.yearsExperience)}\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\r\n            Years Of Experience\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack width={1}>\r\n          {23}\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\r\n            Patients\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderFollow = (\r\n    <Card sx={{ py: 3, textAlign: 'center', typography: 'h4' }}>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n      >\r\n        <Stack width={1}>\r\n          {info.licenseNumber}\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\r\n            License Number\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack width={1}>\r\n          {info.operativeCountry}\r\n          <Box component=\"span\" sx={{ color: 'text.secondary', typography: 'body2' }}>\r\n            Operative Country\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderAbout = (\r\n    <Card>\r\n      <CardHeader title=\"About Me\" />\r\n\r\n      <Stack spacing={2} sx={{ p: 3 }}>\r\n        <Box sx={{ typography: 'body2' }}>{info.description}</Box>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"mingcute:location-fill\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            {` `}\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              Accra, Ghana\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" sx={{ typography: 'body2' }}>\r\n          <Iconify icon=\"fluent:mail-24-filled\" width={24} sx={{ mr: 2 }} />\r\n          {info.email}\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"ic:round-business-center\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            {info.role} {`at `}\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {info.employer}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"ic:round-business-center\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            {`Studied at `}\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {info.medicalSchool ? info.medicalSchool[0] : 'N/a'}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderPostInput = (\r\n    <Card>\r\n      <CardHeader title=\"Certifications\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack spacing={6} sx={{ p: 3 }}>\r\n          <Stack direction=\"column\" spacing={3}>\r\n            {info.boardCertifications ? (\r\n              info.boardCertifications.map((item) => (\r\n                <Box sx={{ display: 'flex', alignItems: 'center', typography: 'body2' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: 8,\r\n                      height: 8,\r\n                      borderRadius: '50%',\r\n                      bgcolor: 'text.primary',\r\n                      mr: 2,\r\n                    }}\r\n                  />{' '}\r\n                  {/* This is the bullet */}\r\n                  {item}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <a>.</a>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n  const languages = (\r\n    <Card>\r\n      <CardHeader title=\"Languages Spoken\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack spacing={6} sx={{ p: 3 }}>\r\n          <Stack direction=\"column\" spacing={3}>\r\n            {info.languages ? (\r\n              info.languages.map((item) => (\r\n                <Box sx={{ display: 'flex', alignItems: 'center', typography: 'body2' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: 8,\r\n                      height: 8,\r\n                      borderRadius: '50%',\r\n                      bgcolor: 'text.primary',\r\n                      mr: 2,\r\n                    }}\r\n                  />{' '}\r\n                  {/* This is the bullet */}\r\n                  {item}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <a>.</a>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderPostInputs = (\r\n    <Card>\r\n      <CardHeader title=\"Awards\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack direction=\"column\" spacing={3}>\r\n          {info.awards ? (\r\n            info.awards.map((item) => (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', typography: 'body2' }}>\r\n                <Box\r\n                  sx={{ width: 8, height: 8, borderRadius: '50%', bgcolor: 'text.primary', mr: 2 }}\r\n                />{' '}\r\n                {/* This is the bullet */}\r\n                {item}\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <a>.</a>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid xs={12} md={6}>\r\n        <Stack spacing={3}>\r\n          {renderFollows}\r\n\r\n          {renderAbout}\r\n          {languages}\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={6}>\r\n        <Stack spacing={3}>\r\n          {renderFollow}\r\n\r\n          {renderPostInput}\r\n          {renderPostInputs}\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nProfileHome.propTypes = {\r\n  info: PropTypes.object,\r\n  posts: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\n// theme\r\nimport { bgGradient } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileCover({ name, avatarUrl, role, coverUrl }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...bgGradient({\r\n          color: alpha(theme.palette.primary.darker, 0.8),\r\n          imgUrl: coverUrl,\r\n        }),\r\n        height: 1,\r\n        color: 'common.white',\r\n      }}\r\n    >\r\n      <Stack\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        sx={{\r\n          left: { md: 24 },\r\n          bottom: { md: 24 },\r\n          zIndex: { md: 10 },\r\n          pt: { xs: 6, md: 0 },\r\n          position: { md: 'absolute' },\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={avatarUrl}\r\n          alt={name}\r\n          sx={{\r\n            mx: 'auto',\r\n            width: { xs: 64, md: 128 },\r\n            height: { xs: 64, md: 128 },\r\n            border: `solid 2px ${theme.palette.common.white}`,\r\n          }}\r\n        />\r\n\r\n        <ListItemText\r\n          sx={{\r\n            mt: 3,\r\n            ml: { md: 3 },\r\n            textAlign: { xs: 'center', md: 'unset' },\r\n          }}\r\n          primary={name}\r\n          secondary={role}\r\n          primaryTypographyProps={{\r\n            typography: 'h4',\r\n          }}\r\n          secondaryTypographyProps={{\r\n            mt: 0.5,\r\n            color: 'inherit',\r\n            component: 'span',\r\n            typography: 'body2',\r\n            sx: { opacity: 0.48 },\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileCover.propTypes = {\r\n  avatarUrl: PropTypes.string,\r\n  coverUrl: PropTypes.string,\r\n  name: PropTypes.string,\r\n  role: PropTypes.string,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n// _mock\r\n// components\r\n\r\nimport { Typography } from '@mui/material';\r\nimport Iconify from 'src/components/iconify';\r\n//\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileContactInfo({ info, hours }) {\r\n  const [subject, setSubject] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [file, setFile] = useState(null);\r\n\r\n  const renderAbout = (\r\n    <Card>\r\n      <CardHeader title=\"About Me\" />\r\n\r\n      <Stack spacing={2} sx={{ p: 3 }}>\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"mingcute:location-fill\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            {` `}\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              Greenfield Estate, 1M6A\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" sx={{ typography: 'body2' }}>\r\n          <Iconify icon=\"fluent:mail-24-filled\" width={24} sx={{ mr: 2 }} />\r\n          {info.email}\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"ic:phone\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {info.phoneNumber}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderPostInput = (\r\n    <Card>\r\n      <CardHeader title={`Send ${info.title} ${info.lastName} A Message`} />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <form>\r\n          <Box sx={{ width: '100%', mb: 2 }}>\r\n            <InputBase\r\n              fullWidth\r\n              placeholder=\"Subject\"\r\n              sx={{\r\n                pl: 1,\r\n                py: 1,\r\n                border: '1px solid',\r\n                borderColor: 'divider',\r\n                borderRadius: '4px', // Rounded edges\r\n              }}\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ width: '100%', mb: 2 }}>\r\n            <InputBase\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              placeholder=\"Message\"\r\n              sx={{\r\n                pl: 1,\r\n                py: 1,\r\n                border: '1px solid',\r\n                borderColor: 'divider',\r\n                borderRadius: '4px', // Rounded edges\r\n              }}\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const sessionsByDay = Object.keys(hours).map((day) => {\r\n    const sessions = hours[day];\r\n    const sessionObject = { availableDay: day, availableSessions: sessions };\r\n    return sessionObject;\r\n  });\r\n\r\n  const languages = (\r\n    <Card>\r\n      <CardHeader title=\"Work Hours\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack spacing={6} sx={{ p: 3 }}>\r\n          <Stack direction=\"column\" spacing={3}>\r\n            {sessionsByDay ? (\r\n              sessionsByDay.map((item) => (\r\n                <Box sx={{ display: 'flex', alignItems: 'center', typography: 'body2' }}>\r\n                  {item.availableSessions.length === 0 ? (\r\n                    ''\r\n                  ) : (\r\n                    <>\r\n                      <Box\r\n                        sx={{\r\n                          width: 8,\r\n                          height: 8,\r\n                          borderRadius: '50%',\r\n                          bgcolor: 'text.primary',\r\n                          mr: 2,\r\n                        }}\r\n                      />\r\n                      {item.availableDay}:\r\n                      <Box\r\n                        sx={{\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          gap: '10px',\r\n                          marginLeft: '5px',\r\n                        }}\r\n                      >\r\n                        {item.availableSessions.map((session) => {\r\n                          const time = `${session.startTime} - ${session.endTime}`;\r\n                          return <Typography sx={{ fontSize: '14px' }}>{time}</Typography>;\r\n                        })}\r\n                      </Box>\r\n                    </>\r\n                  )}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <a>.</a>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid xs={12} md={6}>\r\n        <Stack spacing={3}>{renderAbout}</Stack>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={6}>\r\n        {languages}\r\n        {/* <Stack spacing={3}>{renderPostInput}</Stack> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nProfileContactInfo.propTypes = {\r\n  info: PropTypes.object,\r\n  hours: PropTypes.object,\r\n};\r\n","import customAxios from 'src/utils/customAxios';\r\n\r\nexport const fetchProviderData = async (token, providerID) => {\r\n  // loadingFunc(true);\r\n  try {\r\n    const response = await customAxios.get(`/providers/${providerID}`, {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    });\r\n\r\n    return response.data.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const fetchProvidersHoursFunc = async (hoursFunc, finalTimeArrayFunc, token, providerID) => {\r\n  // setLoading(true);\r\n  try {\r\n    const { data: hoursData } = await customAxios.get(\r\n      // `/providerschedules/${providerID}`,\r\n      `/providerschedules/PAC-58965t9`\r\n    );\r\n    hoursFunc(hoursData.data);\r\n\r\n    const availableTime = hoursData.data;\r\n    const sessionsByDay = Object.keys(availableTime).map((day) => {\r\n      const sessions = availableTime[day];\r\n      const sessionObject = { availableDay: day, availableSessions: sessions };\r\n      return sessionObject;\r\n    });\r\n\r\n    let sessionTimeArray = [];\r\n\r\n    sessionsByDay.forEach((session) => {\r\n      const sessionTime = session.availableSessions;\r\n      sessionTimeArray = [...sessionTimeArray, { time: sessionTime }];\r\n    });\r\n\r\n    const newFinalTimeArray = [];\r\n\r\n    if (sessionTimeArray.length > 0) {\r\n      sessionTimeArray.forEach((generalTime) => {\r\n        generalTime.time.forEach((finalTime) => {\r\n          newFinalTimeArray.push({\r\n            startTime: finalTime.startTime,\r\n            endTime: finalTime.endTime,\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    finalTimeArrayFunc(newFinalTimeArray);\r\n    // setLoading(false);\r\n  } catch (error) {\r\n    console.log(error);\r\n    // setLoading(false);\r\n  }\r\n};\r\n\r\nexport const createAppointment = async (dateInput, token, dataObject) => {\r\n  const date = new Date(dateInput);\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const monthInWords = monthNames[date.getMonth()];\r\n  const day = date.getDate();\r\n  const year = date.getFullYear();\r\n\r\n  const newDateFormat = `${day} ${monthInWords} ${year}`;\r\n\r\n  const newDataObject = { ...dataObject, appointmentDate: newDateFormat };\r\n\r\n  try {\r\n    const { data: appointmentData } = await customAxios.post('/appointments', newDataObject);\r\n    console.log(appointmentData);\r\n    return appointmentData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const fetchPrimaryCareProvider = async (userID, token) => {\r\n  try {\r\n    const { data } = await customAxios.get(`/primarycare/user/fetchprovider/${userID}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return null;\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Box, Stack, useTheme } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { RouterLink } from 'src/routes/components';\r\n// import Iconify from 'src/components/iconify';\r\n\r\nexport default function ActionBox({ actionBox, data, dialog }) {\r\n  const theme = useTheme();\r\n  const openAppointmentDialog = () => {\r\n    actionBox.onFalse();\r\n    dialog.onTrue();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={actionBox.value}\r\n      onClose={actionBox.onFalse}\r\n      sx={{\r\n        maxWidth: '400px',\r\n        margin: '0 auto',\r\n        '@media (max-width: 425px )': {\r\n          maxWidth: '100%',\r\n        },\r\n      }}\r\n    >\r\n      <Stack\r\n        sx={{\r\n          padding: '20px 20px 10px',\r\n          '@media (max-width: 425px )': {\r\n            padding: '20px 10px',\r\n          },\r\n        }}\r\n      >\r\n        <Typography>\r\n          Would you like to book an appointment with {data.title} {data.firstName} {data.lastName}?\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            margin: '10px 0',\r\n          }}\r\n        >\r\n          <Button\r\n            component={RouterLink}\r\n            href=\"#\"\r\n            variant=\"contained\"\r\n            onClick={openAppointmentDialog}\r\n            sx={{\r\n              '@media (max-width: 425px )': {\r\n                width: '100%',\r\n              },\r\n              background: `${theme.palette.primary.main}`,\r\n            }}\r\n          >\r\n            Book Appointment\r\n          </Button>\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* <Stack\r\n        sx={{\r\n          padding: '20px 20px 10px',\r\n          '@media (max-width: 425px )': {\r\n            padding: '20px 10px',\r\n          },\r\n        }}\r\n      >\r\n        <Typography>Would you like to change your primary care provider?</Typography>\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            margin: '10px 0',\r\n          }}\r\n        >\r\n          <Button\r\n            component={RouterLink}\r\n            href=\"/dashboard/primary-care/list\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              '@media (max-width: 425px )': {\r\n                width: '100%',\r\n              },\r\n              background: `${theme.palette.primary.main}`,\r\n            }}\r\n          >\r\n            Change Provider\r\n          </Button>\r\n        </Box>\r\n      </Stack> */}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nActionBox.propTypes = {\r\n  actionBox: PropTypes.bool,\r\n  data: PropTypes.array,\r\n  dialog: PropTypes.bool,\r\n};\r\n","import { useState, useCallback, useEffect, useContext } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n// @mui\r\nimport Tab from '@mui/material/Tab';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Tabs, { tabsClasses } from '@mui/material/Tabs';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n// routes\r\nimport { useParams } from 'react-router';\r\n\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\n// _mock\r\nimport { _providersFeeds } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\n\r\n//\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\nimport { SplashScreen } from 'src/components/loading-screen';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport ProfileHome from '../providers-profile-home';\r\nimport ProfileCover from '../providers-profile-cover';\r\nimport ProfileContactInfo from '../providers-contact-info';\r\nimport { createAppointment, fetchProviderData, fetchProvidersHoursFunc } from '../helpers/request';\r\nimport ActionBox from './action-box';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABS = [\r\n  {\r\n    value: 'profile',\r\n    label: 'Provider Information',\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: 'contact',\r\n    label: 'Contact',\r\n    icon: <Iconify icon=\"solar:users-group-rounded-bold\" width={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrimaryCareProfileView({ data }) {\r\n  const settings = useSettingsContext();\r\n  const { id } = useParams();\r\n  const { user } = useContext(AuthContext);\r\n  // const [data, setData] = useState([]);\r\n  const [hours, setHours] = useState({});\r\n  const dialog = useBoolean();\r\n  const actionBox = useBoolean();\r\n  const [loading, setLoading] = useState(true);\r\n  const [finalTimeArray, setFinalTimeArray] = useState([]);\r\n  const [fullNameInput, setFullNameInput] = useState('');\r\n  const [emailAddress, setEmailAddress] = useState('');\r\n  const [appointmentDateInput, setAppointmentDateInput] = useState('');\r\n  const [appointmentTimeInput, setAppointmentTimeInput] = useState('');\r\n  const [appointmentTypeInput, setAppointmentTypeInput] = useState('');\r\n  const AppointmentType = ['Audio', 'Video'];\r\n\r\n  // const fetchData = async () => {\r\n  //   setLoading(true);\r\n  //   try {\r\n  //     // const providersData = await fetchProviderData(user?.token, id);\r\n  //     const providersData = await fetchProviderData(user?.token, 'PDA-81198625');\r\n\r\n  //     setData(providersData);\r\n  //     setLoading(false);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  const fetchProvidersHours = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await fetchProvidersHoursFunc(setHours, setFinalTimeArray, user?.token, id);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitAppointment = async () => {\r\n    dialog.onFalse();\r\n    actionBox.onFalse();\r\n    const dataObject = {\r\n      providerID: id,\r\n      userID: user?.userID,\r\n      startTime: appointmentTimeInput,\r\n      appointmentType: appointmentTypeInput,\r\n      status: 'pending',\r\n    };\r\n\r\n    try {\r\n      const submittedData = await createAppointment(appointmentDateInput, user?.token, dataObject);\r\n      console.log(submittedData);\r\n      if (submittedData) {\r\n        toast.success('Appointment successfully booked');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   fetchData();\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProvidersHours();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [currentTab, setCurrentTab] = useState('profile');\r\n\r\n  const handleChangeTab = useCallback((event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }, []);\r\n\r\n  if (loading || !data.title || !data.firstName || !data.lastName) {\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading={`${data.title} ${data.firstName} ${data.lastName}`}\r\n        links={[\r\n          { name: 'Dashboard', href: paths.dashboard.root },\r\n          { name: 'Provider', href: paths.dashboard.providers.root },\r\n          { name: `${data.title} ${data.firstName} ${data.lastName}` },\r\n        ]}\r\n        action={\r\n          <>\r\n            <Button\r\n              component={RouterLink}\r\n              href=\"#\"\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"gridicons:create\" />}\r\n              onClick={actionBox.onTrue}\r\n            >\r\n              Book Appointment\r\n            </Button>\r\n\r\n            <Button\r\n              component={RouterLink}\r\n              href={`/dashboard/primary-care/chat/${data?.providerID}`}\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"basil:chat-solid\" />}\r\n              sx={{ marginLeft: '5px' }}\r\n            >\r\n              Chat\r\n            </Button>\r\n          </>\r\n        }\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <Card\r\n        sx={{\r\n          mb: 3,\r\n          height: 290,\r\n        }}\r\n      >\r\n        <ProfileCover\r\n          role={data?.specialization || ' '}\r\n          name={`${data?.title || ' '} ${data?.firstName || ' '} ${data?.lastName || ' '}`}\r\n          avatarUrl={data?.photo}\r\n          coverUrl=\"https://i.ibb.co/XC0WYHf/6302751-min.jpg\"\r\n        />\r\n\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleChangeTab}\r\n          sx={{\r\n            width: 1,\r\n            bottom: 0,\r\n            zIndex: 9,\r\n            position: 'absolute',\r\n            bgcolor: 'background.paper',\r\n            [`& .${tabsClasses.flexContainer}`]: {\r\n              pr: { md: 3 },\r\n              justifyContent: {\r\n                sm: 'center',\r\n                md: 'flex-end',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {TABS.map((tab) => (\r\n            <Tab key={tab.value} value={tab.value} icon={tab.icon} label={tab.label} />\r\n          ))}\r\n        </Tabs>\r\n      </Card>\r\n\r\n      {currentTab === 'profile' && <ProfileHome info={data} posts={_providersFeeds} />}\r\n\r\n      {currentTab === 'contact' && (\r\n        <ProfileContactInfo info={data} posts={_providersFeeds} hours={hours} />\r\n      )}\r\n\r\n      <Dialog open={dialog.value} onClose={dialog.onFalse}>\r\n        <DialogTitle>\r\n          Make An Appointment with {data.title} {data.firstName} {data.lastName}{' '}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Full Name\"\r\n            value={fullNameInput}\r\n            onChange={(e) => setFullNameInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"email\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Email Address\"\r\n            value={emailAddress}\r\n            onChange={(e) => setEmailAddress(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentDateInput}\r\n            onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            defaultValue={appointmentTypeInput}\r\n            // helperText=\"Please select your appointment type\"\r\n            value={appointmentTypeInput}\r\n            onChange={(e) => setAppointmentTypeInput(e.target.value)}\r\n            sx={{ marginTop: '15px' }}\r\n          >\r\n            {AppointmentType.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginTop: 1 }}>\r\n            Please select your appointment type\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            defaultValue={appointmentTimeInput}\r\n            // helperText=\"Please select your appointment time\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={appointmentTimeInput}\r\n            onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n            sx={{ marginTop: '15px' }}\r\n          >\r\n            {finalTimeArray.length > 0 &&\r\n              finalTimeArray.map((option, key) => (\r\n                <MenuItem key={key} value={option.startTime}>\r\n                  {`${option.startTime}-${option.endTime}`}\r\n                </MenuItem>\r\n              ))}\r\n          </TextField>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginTop: 1 }}>\r\n            Please select your appointment time\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialog.onFalse} variant=\"outlined\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmitAppointment} variant=\"contained\">\r\n            Book Appointment\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <ActionBox actionBox={actionBox} data={data} dialog={dialog} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nPrimaryCareProfileView.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import { useState, useCallback, useEffect, useContext } from 'react';\r\nimport { toast } from 'react-toastify';\r\n// @mui\r\nimport Tab from '@mui/material/Tab';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Tabs, { tabsClasses } from '@mui/material/Tabs';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n// routes\r\nimport { useParams } from 'react-router';\r\n\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\n// _mock\r\nimport { _providersFeeds } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\n\r\n//\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\nimport { SplashScreen } from 'src/components/loading-screen';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport ProfileHome from '../providers-profile-home';\r\nimport ProfileCover from '../providers-profile-cover';\r\nimport ProfileContactInfo from '../providers-contact-info';\r\nimport { createAppointment, fetchProviderData, fetchProvidersHoursFunc } from '../helpers/request';\r\nimport ActionBox from './action-box';\r\nimport ProviderSelectionPopup from './provider-selection-popup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABS = [\r\n  {\r\n    value: 'profile',\r\n    label: 'Provider Information',\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: 'contact',\r\n    label: 'Contact',\r\n    icon: <Iconify icon=\"solar:users-group-rounded-bold\" width={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrimaryCareProfileView() {\r\n  const settings = useSettingsContext();\r\n  const { id } = useParams();\r\n  const { user } = useContext(AuthContext);\r\n  const [data, setData] = useState([]);\r\n  const [hours, setHours] = useState({});\r\n  const dialog = useBoolean();\r\n  const actionBox = useBoolean();\r\n  const [openDialogBox, setOpenDialogBox] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [finalTimeArray, setFinalTimeArray] = useState([]);\r\n  const [fullNameInput, setFullNameInput] = useState('');\r\n  const [emailAddress, setEmailAddress] = useState('');\r\n  const [appointmentDateInput, setAppointmentDateInput] = useState('');\r\n  const [appointmentTimeInput, setAppointmentTimeInput] = useState('');\r\n  const [appointmentTypeInput, setAppointmentTypeInput] = useState('');\r\n  const AppointmentType = ['Audio', 'Video'];\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // const providersData = await fetchProviderData(user?.token, id);\r\n      const providersData = await fetchProviderData(user?.token, 'PDA-81198625');\r\n\r\n      setData(providersData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchProvidersHours = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await fetchProvidersHoursFunc(setHours, setFinalTimeArray, user?.token, id);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitAppointment = async () => {\r\n    dialog.onFalse();\r\n    actionBox.onFalse();\r\n    const dataObject = {\r\n      providerID: id,\r\n      userID: user?.userID,\r\n      startTime: appointmentTimeInput,\r\n      appointmentType: appointmentTypeInput,\r\n      status: 'pending',\r\n    };\r\n\r\n    try {\r\n      const submittedData = await createAppointment(appointmentDateInput, user?.token, dataObject);\r\n      console.log(submittedData);\r\n      if (submittedData) {\r\n        toast.success('Appointment successfully booked');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProvidersHours();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [currentTab, setCurrentTab] = useState('profile');\r\n\r\n  const handleChangeTab = useCallback((event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }, []);\r\n\r\n  if (loading || !data.title || !data.firstName || !data.lastName) {\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading={`${data.title} ${data.firstName} ${data.lastName}`}\r\n        links={[\r\n          { name: 'Dashboard', href: paths.dashboard.root },\r\n          { name: 'Provider List', href: paths.dashboard.primaryCare.list },\r\n          { name: `${data.title} ${data.firstName} ${data.lastName}` },\r\n        ]}\r\n        action={\r\n          <>\r\n            <Button\r\n              component={RouterLink}\r\n              href=\"#\"\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"gridicons:create\" />}\r\n              onClick={dialog.onTrue}\r\n            >\r\n              Book Appointment\r\n            </Button>\r\n\r\n            <Button\r\n              component={RouterLink}\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon=\"ep:select\" />}\r\n              sx={{ marginLeft: '5px' }}\r\n              onClick={() => setOpenDialogBox(true)}\r\n            >\r\n              Select Provider\r\n            </Button>\r\n          </>\r\n        }\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <Card\r\n        sx={{\r\n          mb: 3,\r\n          height: 290,\r\n        }}\r\n      >\r\n        <ProfileCover\r\n          role={data?.specialization || ' '}\r\n          name={`${data?.title || ' '} ${data?.firstName || ' '} ${data?.lastName || ' '}`}\r\n          avatarUrl={data?.photo}\r\n          coverUrl=\"https://i.ibb.co/XC0WYHf/6302751-min.jpg\"\r\n          // https://i.ibb.co/F5YnDVk/6302751-min-copy.jpg\r\n        />\r\n\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleChangeTab}\r\n          sx={{\r\n            width: 1,\r\n            bottom: 0,\r\n            zIndex: 9,\r\n            position: 'absolute',\r\n            bgcolor: 'background.paper',\r\n            [`& .${tabsClasses.flexContainer}`]: {\r\n              pr: { md: 3 },\r\n              justifyContent: {\r\n                sm: 'center',\r\n                md: 'flex-end',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {TABS.map((tab) => (\r\n            <Tab key={tab.value} value={tab.value} icon={tab.icon} label={tab.label} />\r\n          ))}\r\n        </Tabs>\r\n      </Card>\r\n\r\n      {currentTab === 'profile' && <ProfileHome info={data} posts={_providersFeeds} />}\r\n\r\n      {currentTab === 'contact' && (\r\n        <ProfileContactInfo info={data} posts={_providersFeeds} hours={hours} />\r\n      )}\r\n\r\n      <Dialog open={dialog.value} onClose={dialog.onFalse}>\r\n        <DialogTitle>\r\n          Make An Appointment with {data.title} {data.firstName} {data.lastName}{' '}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Typography sx={{ mb: 3 }}>Please fill the form below</Typography>\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Full Name\"\r\n            value={fullNameInput}\r\n            onChange={(e) => setFullNameInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"email\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Email Address\"\r\n            value={emailAddress}\r\n            onChange={(e) => setEmailAddress(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"date\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            value={appointmentDateInput}\r\n            onChange={(e) => setAppointmentDateInput(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            defaultValue={appointmentTypeInput}\r\n            // helperText=\"Please select your appointment type\"\r\n            value={appointmentTypeInput}\r\n            onChange={(e) => setAppointmentTypeInput(e.target.value)}\r\n            sx={{ marginTop: '15px' }}\r\n          >\r\n            {AppointmentType.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginTop: 1 }}>\r\n            Please select your appointment type\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            defaultValue={appointmentTimeInput}\r\n            // helperText=\"Please select your appointment time\"\r\n            InputLabelProps={{ shrink: true }}\r\n            value={appointmentTimeInput}\r\n            onChange={(e) => setAppointmentTimeInput(e.target.value)}\r\n            sx={{ marginTop: '15px' }}\r\n          >\r\n            {finalTimeArray.length > 0 &&\r\n              finalTimeArray.map((option, key) => (\r\n                <MenuItem key={key} value={option.startTime}>\r\n                  {`${option.startTime}-${option.endTime}`}\r\n                </MenuItem>\r\n              ))}\r\n          </TextField>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginTop: 1 }}>\r\n            Please select your appointment time\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialog.onFalse} variant=\"outlined\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmitAppointment} variant=\"contained\">\r\n            Book Appointment\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <ActionBox actionBox={actionBox} data={data} dialog={dialog} />\r\n      <ProviderSelectionPopup\r\n        data={id}\r\n        open={openDialogBox}\r\n        close={() => setOpenDialogBox(false)}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import { Typography, Stack, Box, Paper, Container, Button } from '@mui/material';\r\nimport PrimaryCareImage from '../../../assets/images/primary-care-min.png';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrimaryCareIntro() {\r\n  return (\r\n    <Container\r\n      maxWidth=\"md\"\r\n      sx={{\r\n        display: 'flex',\r\n        height: '80vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Stack\r\n        sx={{\r\n          display: 'flex',\r\n          // width: '100vw',\r\n          // height: '100vh',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          maxWidth: '700px !important',\r\n          borderRadius: '20px',\r\n          boxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 15px',\r\n\r\n          '@media (max-width: 700px)': {\r\n            maxWidth: '100%',\r\n            padding: '25px',\r\n          },\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          paragraph\r\n          sx={{\r\n            maxWidth: '70%',\r\n            marginTop: '40px',\r\n            '@media (max-width: 700px)': {\r\n              maxWidth: '100%',\r\n            },\r\n          }}\r\n        >\r\n          Select a Doctor for Your Best Healthcare Experience\r\n        </Typography>\r\n        <Box sx={{ my: 3 }}>\r\n          <img\r\n            src={PrimaryCareImage}\r\n            alt=\"Select Doctor\"\r\n            style={{\r\n              width: '250px',\r\n              maxWidth: '100%',\r\n              display: 'block',\r\n              margin: 'auto',\r\n            }}\r\n          />\r\n        </Box>\r\n        <Typography\r\n          variant=\"body1\"\r\n          paragraph\r\n          sx={{\r\n            maxWidth: '70%',\r\n            '@media (max-width: 700px)': {\r\n              maxWidth: '100%',\r\n            },\r\n          }}\r\n        >\r\n          Selecting a doctor allows you to enjoy personalized care and manage your health more\r\n          effectively. Click the button below to choose a doctor now.\r\n        </Typography>\r\n        <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center', margin: '40px 0' }}>\r\n          <Button variant=\"contained\" color=\"primary\" href=\"/dashboard/primary-care/list\">\r\n            Select a Provider\r\n          </Button>\r\n        </Box>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nimport { Box, Stack, Typography } from '@mui/material';\r\nimport { useEffect, useState, useContext } from 'react';\r\n\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\nimport { SplashScreen } from 'src/components/loading-screen';\r\n\r\nimport PrimaryCareIntro from './primary-care-intro';\r\nimport PrimaryCareProfileView from './primary-care-profile-view';\r\nimport { fetchPrimaryCareProvider } from '../helpers/request';\r\n\r\nexport default function PrimaryCareMainView() {\r\n  const { user } = useContext(AuthContext);\r\n  const [selectionData, setSelectionData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const primaryData = await fetchPrimaryCareProvider(user?.userID, user?.token);\r\n        setSelectionData(primaryData.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false); // Set loading to false regardless of success or failure\r\n      }\r\n    };\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let content;\r\n\r\n  if (loading) {\r\n    // Display loader while loading\r\n    content = <SplashScreen />;\r\n  } else if (selectionData !== null && typeof selectionData === 'object') {\r\n    content = <PrimaryCareProfileView data={selectionData} />;\r\n  } else if (typeof selectionData === 'string') {\r\n    content = <PrimaryCareIntro />;\r\n  } else {\r\n    content = <PrimaryCareIntro />;\r\n  }\r\n  return <Stack>{content}</Stack>;\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('$0,0.00') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexDirection","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","ProviderSelectionPopup","open","data","close","user","useContext","AuthContext","enqueueSnackbar","useSnackbar","selectProvider","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$post","resData","wrap","_context","prev","next","axios","post","userID","providerID","headers","Authorization","concat","token","sent","console","log","t0","stop","apply","arguments","Dialog","onClose","padding","title","firstName","lastName","justifyContent","margin","gap","Button","onClick","PrimaryCareListCard","provider","specialization","photo","_useState","useState","_useState2","_slicedToArray","openDialogBox","setOpenDialogBox","Card","textAlign","position","to","style","textDecoration","Avatar","alt","src","zIndex","left","right","mx","ListItemText","mb","primary","secondary","primaryTypographyProps","secondaryTypographyProps","AvatarShape","bottom","PrimaryCareList","providers","gridTemplateColumns","xs","sm","md","ProvidersCollectionCard","id","ProvidersCollectionView","settings","useSettingsContext","setData","_useState3","_useState4","setLoading","useEffect","fetchData","response","get","Container","maxWidth","themeStretch","paths","dashboard","root","collection","ProfileHome","info","renderFollows","posts","py","divider","Divider","orientation","flexItem","borderStyle","fNumber","yearsExperience","renderFollow","licenseNumber","operativeCountry","renderAbout","CardHeader","spacing","p","description","Iconify","email","role","employer","medicalSchool","renderPostInput","boardCertifications","item","languages","renderPostInputs","awards","Grid","container","ProfileCover","avatarUrl","coverUrl","theme","useTheme","bgGradient","alpha","palette","darker","imgUrl","pt","border","common","white","ml","opacity","ProfileContactInfo","hours","subject","setSubject","message","setMessage","_useState5","_useState6","phoneNumber","sessionsByDay","InputBase","Object","keys","day","availableDay","availableSessions","marginLeft","session","time","startTime","endTime","fontSize","fetchProviderData","customAxios","abrupt","_x","_x2","fetchProvidersHoursFunc","_ref2","_callee2","hoursFunc","finalTimeArrayFunc","_yield$customAxios$ge","hoursData","availableTime","sessionTimeArray","newFinalTimeArray","_context2","forEach","sessionTime","_toConsumableArray","generalTime","finalTime","push","_x3","_x4","_x5","_x6","createAppointment","_callee3","dateInput","dataObject","date","monthInWords","year","newDateFormat","newDataObject","_yield$customAxios$po","appointmentData","_context3","Date","getMonth","getDate","getFullYear","appointmentDate","_x7","_x8","_x9","fetchPrimaryCareProvider","_ref4","_callee4","_yield$customAxios$ge2","_context4","_x10","_x11","ActionBox","actionBox","dialog","value","onFalse","onTrue","background","main","TABS","label","PrimaryCareProfileView","useParams","setHours","useBoolean","loading","finalTimeArray","setFinalTimeArray","_useState7","_useState8","fullNameInput","setFullNameInput","_useState9","_useState10","emailAddress","setEmailAddress","_useState11","_useState12","appointmentDateInput","setAppointmentDateInput","_useState13","_useState14","appointmentTimeInput","setAppointmentTimeInput","_useState15","_useState16","appointmentTypeInput","setAppointmentTypeInput","fetchProvidersHours","handleSubmitAppointment","submittedData","appointmentType","status","toast","success","_useState17","_useState18","currentTab","setCurrentTab","handleChangeTab","useCallback","event","newValue","startIcon","Tabs","onChange","_defineProperty","tabsClasses","flexContainer","pr","tab","Tab","_providersFeeds","DialogTitle","DialogContent","TextField","autoFocus","fullWidth","type","e","select","defaultValue","marginTop","option","MenuItem","InputLabelProps","shrink","key","DialogActions","SplashScreen","_useState19","_useState20","providersData","_useState21","_useState22","primaryCare","list","PrimaryCareIntro","boxShadow","paragraph","my","PrimaryCareImage","PrimaryCareMainView","content","selectionData","setSelectionData","primaryData","finish","number","numeral","format","fCurrency","result","fPercent","Number","fShortenNumber","fData","undefined","includes","replace","createSvgIcon","d","BreadcrumbCollapsedButton","styled","ButtonBase","_extends","marginRight","mode","backgroundColor","grey","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","_props$slots","slots","_props$slotProps","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","breadcrumbsClasses","li","BreadcrumbsOl","ol","flexWrap","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","React","inProps","ref","useThemeProps","_props$component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","_React$useState2","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","clsx","slice","BreadcrumbCollapsed","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}