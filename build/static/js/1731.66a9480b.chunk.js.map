{"version":3,"file":"static/js/1731.66a9480b.chunk.js","mappings":"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","sources":["sections/auth/amplify/amplify-login-view.js","hooks/use-countdown.js","sections/auth/amplify/amplify-verify-view.js","sections/auth/amplify/amplify-register-view.js","sections/auth/amplify/amplify-new-password-view.js","sections/auth/amplify/amplify-forgot-password-view.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\r\n// config\r\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AmplifyLoginView() {\r\n  const { login } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  const password = useBoolean();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await login?.(data.email, data.password);\r\n\r\n      router.push(returnTo || PATH_AFTER_LOGIN);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.message);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={2} sx={{ mb: 5 }}>\r\n      <Typography variant=\"h4\">Sign in to Minimal</Typography>\r\n\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\">New user?</Typography>\r\n\r\n        <Link component={RouterLink} href={paths.auth.amplify.register} variant=\"subtitle2\">\r\n          Create an account\r\n        </Link>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderForm = (\r\n    <Stack spacing={3}>\r\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <RHFTextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        href={paths.auth.amplify.forgotPassword}\r\n        variant=\"body2\"\r\n        color=\"inherit\"\r\n        underline=\"always\"\r\n        sx={{ alignSelf: 'flex-end' }}\r\n      >\r\n        Forgot password?\r\n      </Link>\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Login\r\n      </LoadingButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useCountdownDate(date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n\r\n    const endTime = new Date();\r\n\r\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n\r\n    const getHours = `0${Math.floor(\r\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )}`.slice(-2);\r\n\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays.toString() || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000',\r\n    });\r\n  };\r\n\r\n  return {\r\n    days: countdown.days,\r\n    hours: countdown.hours,\r\n    minutes: countdown.minutes,\r\n    seconds: countdown.seconds,\r\n  };\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useCountdownSeconds(initCountdown) {\r\n  const [countdown, setCountdown] = useState(initCountdown);\r\n\r\n  const startCountdown = useCallback(() => {\r\n    let remainingSeconds = countdown;\r\n\r\n    const intervalId = setInterval(() => {\r\n      remainingSeconds -= 1;\r\n\r\n      if (remainingSeconds === 0) {\r\n        clearInterval(intervalId);\r\n        setCountdown(initCountdown);\r\n      } else {\r\n        setCountdown(remainingSeconds);\r\n      }\r\n    }, 1000);\r\n  }, [initCountdown, countdown]);\r\n\r\n  const counting = initCountdown > countdown;\r\n\r\n  return { counting, countdown, setCountdown, startCountdown };\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useCallback } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\r\n// hooks\r\nimport { useCountdownSeconds } from 'src/hooks/use-countdown';\r\n// assets\r\nimport { EmailInboxIcon } from 'src/assets/icons';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFCode, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AmplifyVerifyView() {\r\n  const router = useRouter();\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const email = searchParams.get('email');\r\n\r\n  const { confirmRegister, resendCodeRegister } = useAuthContext();\r\n\r\n  const { countdown, counting, startCountdown } = useCountdownSeconds(60);\r\n\r\n  const VerifySchemaSchema = Yup.object().shape({\r\n    code: Yup.string().min(6, 'Code must be at least 6 characters').required('Code is required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code: '',\r\n    email: email || '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(VerifySchemaSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    watch,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await confirmRegister?.(data.email, data.code);\r\n      router.push(paths.auth.amplify.login);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  const handleResendCode = useCallback(async () => {\r\n    try {\r\n      startCountdown();\r\n      await resendCodeRegister?.(values.email);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [resendCodeRegister, startCountdown, values.email]);\r\n\r\n  const renderForm = (\r\n    <Stack spacing={3} alignItems=\"center\">\r\n      <RHFTextField\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        placeholder=\"example@gmail.com\"\r\n        InputLabelProps={{ shrink: true }}\r\n      />\r\n\r\n      <RHFCode name=\"code\" />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Verify\r\n      </LoadingButton>\r\n\r\n      <Typography variant=\"body2\">\r\n        {`Don’t have a code? `}\r\n        <Link\r\n          variant=\"subtitle2\"\r\n          onClick={handleResendCode}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            ...(counting && {\r\n              color: 'text.disabled',\r\n              pointerEvents: 'none',\r\n            }),\r\n          }}\r\n        >\r\n          Resend code {counting && `(${countdown}s)`}\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        href={paths.auth.amplify.login}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Iconify icon=\"eva:arrow-ios-back-fill\" width={16} />\r\n        Return to sign in\r\n      </Link>\r\n    </Stack>\r\n  );\r\n\r\n  const renderHead = (\r\n    <>\r\n      <EmailInboxIcon sx={{ height: 96 }} />\r\n\r\n      <Stack spacing={1} sx={{ my: 5 }}>\r\n        <Typography variant=\"h3\">Please check your email!</Typography>\r\n\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below\r\n          box to verify your email.\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n    </FormProvider>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AmplifyRegisterView() {\r\n  const { register } = useAuthContext();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const router = useRouter();\r\n\r\n  const password = useBoolean();\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name required'),\r\n    lastName: Yup.string().required('Last name required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(RegisterSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await register?.(data.email, data.password, data.firstName, data.lastName);\r\n\r\n      const searchParams = new URLSearchParams({\r\n        email: data.email,\r\n      }).toString();\r\n\r\n      const href = `${paths.auth.amplify.verify}?${searchParams}`;\r\n\r\n      router.push(href);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.message);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\r\n      <Typography variant=\"h4\">Get started absolutely free</Typography>\r\n\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\"> Already have an account? </Typography>\r\n\r\n        <Link href={paths.auth.amplify.login} component={RouterLink} variant=\"subtitle2\">\r\n          Sign in\r\n        </Link>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderTerms = (\r\n    <Typography\r\n      component=\"div\"\r\n      sx={{\r\n        color: 'text.secondary',\r\n        mt: 2.5,\r\n        typography: 'caption',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {'By signing up, I agree to '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Terms of Service\r\n      </Link>\r\n      {' and '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Privacy Policy\r\n      </Link>\r\n      .\r\n    </Typography>\r\n  );\r\n\r\n  const renderForm = (\r\n    <Stack spacing={2.5}>\r\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n      <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n        <RHFTextField name=\"firstName\" label=\"First name\" />\r\n        <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n      </Stack>\r\n\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <RHFTextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Create account\r\n      </LoadingButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n\r\n      {renderTerms}\r\n    </FormProvider>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useCallback } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useCountdownSeconds } from 'src/hooks/use-countdown';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// assets\r\nimport { SentIcon } from 'src/assets/icons';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField, RHFCode } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AmplifyNewPasswordView() {\r\n  const { newPassword, forgotPassword } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const email = searchParams.get('email');\r\n\r\n  const password = useBoolean();\r\n\r\n  const { countdown, counting, startCountdown } = useCountdownSeconds(60);\r\n\r\n  const VerifySchema = Yup.object().shape({\r\n    code: Yup.string().min(6, 'Code must be at least 6 characters').required('Code is required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .required('Confirm password is required')\r\n      .oneOf([Yup.ref('password')], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code: '',\r\n    email: email || '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(VerifySchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    watch,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await newPassword?.(data.email, data.code, data.password);\r\n\r\n      router.push(paths.auth.amplify.login);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  const handleResendCode = useCallback(async () => {\r\n    try {\r\n      startCountdown();\r\n      await forgotPassword?.(values.email);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [forgotPassword, startCountdown, values.email]);\r\n\r\n  const renderForm = (\r\n    <Stack spacing={3} alignItems=\"center\">\r\n      <RHFTextField\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        placeholder=\"example@gmail.com\"\r\n        InputLabelProps={{ shrink: true }}\r\n      />\r\n\r\n      <RHFCode name=\"code\" />\r\n\r\n      <RHFTextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <RHFTextField\r\n        name=\"confirmPassword\"\r\n        label=\"Confirm New Password\"\r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Update Password\r\n      </LoadingButton>\r\n\r\n      <Typography variant=\"body2\">\r\n        {`Don’t have a code? `}\r\n        <Link\r\n          variant=\"subtitle2\"\r\n          onClick={handleResendCode}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            ...(counting && {\r\n              color: 'text.disabled',\r\n              pointerEvents: 'none',\r\n            }),\r\n          }}\r\n        >\r\n          Resend code {counting && `(${countdown}s)`}\r\n        </Link>\r\n      </Typography>\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        href={paths.auth.amplify.login}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Iconify icon=\"eva:arrow-ios-back-fill\" width={16} />\r\n        Return to sign in\r\n      </Link>\r\n    </Stack>\r\n  );\r\n\r\n  const renderHead = (\r\n    <>\r\n      <SentIcon sx={{ height: 96 }} />\r\n\r\n      <Stack spacing={1} sx={{ my: 5 }}>\r\n        <Typography variant=\"h3\">Request sent successfully!</Typography>\r\n\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          We&apos;ve sent a 6-digit confirmation email to your email.\r\n          <br />\r\n          Please enter the code in below box to verify your email.\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n    </FormProvider>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// assets\r\nimport { PasswordIcon } from 'src/assets/icons';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AmplifyForgotPasswordView() {\r\n  const { forgotPassword } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const ForgotPasswordSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ForgotPasswordSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await forgotPassword?.(data.email);\r\n\r\n      const searchParams = new URLSearchParams({\r\n        email: data.email,\r\n      }).toString();\r\n\r\n      const href = `${paths.auth.amplify.newPassword}?${searchParams}`;\r\n      router.push(href);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  const renderForm = (\r\n    <Stack spacing={3} alignItems=\"center\">\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Send Request\r\n      </LoadingButton>\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        href={paths.auth.amplify.login}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Iconify icon=\"eva:arrow-ios-back-fill\" width={16} />\r\n        Return to sign in\r\n      </Link>\r\n    </Stack>\r\n  );\r\n\r\n  const renderHead = (\r\n    <>\r\n      <PasswordIcon sx={{ height: 96 }} />\r\n\r\n      <Stack spacing={1} sx={{ my: 5 }}>\r\n        <Typography variant=\"h3\">Forgot your password?</Typography>\r\n\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          Please enter the email address associated with your account and We will email you a link\r\n          to reset your password.\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n    </FormProvider>\r\n  );\r\n}\r\n"],"names":["AmplifyLoginView","login","useAuthContext","router","useRouter","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","returnTo","useSearchParams","get","password","useBoolean","LoginSchema","Yup","shape","email","required","methods","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","isSubmitting","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","push","PATH_AFTER_LOGIN","t0","console","error","message","stop","_x","apply","arguments","renderHead","_jsxs","Stack","spacing","sx","mb","children","_jsx","Typography","variant","direction","Link","component","RouterLink","href","paths","auth","amplify","register","renderForm","Alert","severity","RHFTextField","name","label","type","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","forgotPassword","color","underline","alignSelf","LoadingButton","fullWidth","size","loading","FormProvider","useCountdownSeconds","initCountdown","_useState3","_useState4","countdown","setCountdown","startCountdown","useCallback","remainingSeconds","intervalId","setInterval","clearInterval","counting","AmplifyVerifyView","_useAuthContext","confirmRegister","resendCodeRegister","_useCountdownSeconds","VerifySchemaSchema","code","min","mode","watch","values","handleResendCode","_callee2","_context2","alignItems","placeholder","InputLabelProps","shrink","RHFCode","_objectSpread","cursor","pointerEvents","concat","display","width","_Fragment","EmailInboxIcon","height","my","AmplifyRegisterView","RegisterSchema","firstName","lastName","searchParams","URLSearchParams","toString","verify","renderTerms","mt","typography","textAlign","xs","sm","AmplifyNewPasswordView","newPassword","VerifySchema","confirmPassword","oneOf","SentIcon","AmplifyForgotPasswordView","ForgotPasswordSchema","PasswordIcon"],"sourceRoot":""}