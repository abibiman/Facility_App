{"version":3,"file":"static/js/663.4a4447bb.chunk.js","mappings":"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","sources":["api/chat.js","components/lightbox/use-light-box.js","components/lightbox/styles.js","components/lightbox/lightbox.js","sections/chat/chat-room-participant-dialog.js","sections/chat/chat-room-group.js","sections/chat/chat-room-single.js","sections/chat/chat-room-attachments.js","sections/chat/chat-room.js","sections/chat/hooks/use-collapse-nav.js","sections/chat/chat-message-item.js","sections/chat/hooks/use-get-message.js","sections/chat/firebase-config/config.js","sections/chat/chat-message-list.js","sections/chat/hooks/use-messages-scroll.js","sections/chat/chat-message-input.js","sections/chat/chat-header-detail.js","sections/chat/chat-header-compose.js","sections/chat/view/chat-view.js","pages/dashboard/chat.js","utils/uuidv4.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport keyBy from 'lodash/keyBy';\r\nimport useSWR, { mutate } from 'swr';\r\n// utils\r\nimport axios, { endpoints, fetcher } from 'src/utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst options = {\r\n  revalidateIfStale: false,\r\n  revalidateOnFocus: false,\r\n  revalidateOnReconnect: false,\r\n};\r\n\r\nexport function useGetContacts() {\r\n  const URL = [endpoints.chat, { params: { endpoint: 'contacts' } }];\r\n\r\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\r\n\r\n  const memoizedValue = useMemo(\r\n    () => ({\r\n      contacts: data?.contacts || [],\r\n      contactsLoading: isLoading,\r\n      contactsError: error,\r\n      contactsValidating: isValidating,\r\n      contactsEmpty: !isLoading && !data?.contacts.length,\r\n    }),\r\n    [data?.contacts, error, isLoading, isValidating]\r\n  );\r\n\r\n  return memoizedValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useGetConversations() {\r\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\r\n\r\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\r\n\r\n  const memoizedValue = useMemo(() => {\r\n    const byId = keyBy(data?.conversations, 'id') || {};\r\n    const allIds = Object.keys(byId) || [];\r\n\r\n    return {\r\n      conversations: {\r\n        byId,\r\n        allIds,\r\n      },\r\n      conversationsLoading: isLoading,\r\n      conversationsError: error,\r\n      conversationsValidating: isValidating,\r\n      conversationsEmpty: !isLoading && !allIds.length,\r\n    };\r\n  }, [data?.conversations, error, isLoading, isValidating]);\r\n\r\n  return memoizedValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function useGetConversation(conversationId) {\r\n  const URL = conversationId\r\n    ? [endpoints.chat, { params: { conversationId, endpoint: 'conversation' } }]\r\n    : null;\r\n\r\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\r\n\r\n  const memoizedValue = useMemo(\r\n    () => ({\r\n      conversation: data?.conversation,\r\n      conversationLoading: isLoading,\r\n      conversationError: error,\r\n      conversationValidating: isValidating,\r\n    }),\r\n    [data?.conversation, error, isLoading, isValidating]\r\n  );\r\n\r\n  return memoizedValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function sendMessage(conversationId, messageData) {\r\n  const CONVERSATIONS_URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\r\n\r\n  const CONVERSATION_URL = [\r\n    endpoints.chat,\r\n    {\r\n      params: { conversationId, endpoint: 'conversation' },\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Work on server\r\n   */\r\n  // const data = { conversationId, messageData };\r\n  // await axios.put(endpoints.chat, data);\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    CONVERSATION_URL,\r\n    (currentData) => {\r\n      const { conversation: currentConversation } = currentData;\r\n\r\n      const conversation = {\r\n        ...currentConversation,\r\n        messages: [...currentConversation.messages, messageData],\r\n      };\r\n\r\n      return {\r\n        conversation,\r\n      };\r\n    },\r\n    false\r\n  );\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    CONVERSATIONS_URL,\r\n    (currentData) => {\r\n      const { conversations: currentConversations } = currentData;\r\n\r\n      const conversations = currentConversations.map((conversation) =>\r\n        conversation.id === conversationId\r\n          ? {\r\n              ...conversation,\r\n              messages: [...conversation.messages, messageData],\r\n            }\r\n          : conversation\r\n      );\r\n\r\n      return {\r\n        conversations,\r\n      };\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function createConversation(conversationData) {\r\n  const URL = [endpoints.chat, { params: { endpoint: 'conversations' } }];\r\n\r\n  /**\r\n   * Work on server\r\n   */\r\n  const data = { conversationData };\r\n  const res = await axios.post(endpoints.chat, data);\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    URL,\r\n    (currentData) => {\r\n      const conversations = [...currentData.conversations, conversationData];\r\n      return {\r\n        ...currentData,\r\n        conversations,\r\n      };\r\n    },\r\n    false\r\n  );\r\n\r\n  return res.data;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function clickConversation(conversationId) {\r\n  const URL = endpoints.chat;\r\n\r\n  /**\r\n   * Work on server\r\n   */\r\n  // await axios.get(URL, { params: { conversationId, endpoint: 'mark-as-seen' } });\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    [\r\n      URL,\r\n      {\r\n        params: { endpoint: 'conversations' },\r\n      },\r\n    ],\r\n    (currentData) => {\r\n      const conversations = currentData.conversations.map((conversation) =>\r\n        conversation.id === conversationId ? { ...conversation, unreadCount: 0 } : conversation\r\n      );\r\n\r\n      return {\r\n        ...currentData,\r\n        conversations,\r\n      };\r\n    },\r\n    false\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useLightBox(slides) {\r\n  const [selected, setSelected] = useState(-1);\r\n\r\n  const handleOpen = useCallback(\r\n    (slideUrl) => {\r\n      const slideIndex = slides.findIndex((slide) =>\r\n        slide.type === 'video' ? slide.poster === slideUrl : slide.src === slideUrl\r\n      );\r\n\r\n      setSelected(slideIndex);\r\n    },\r\n    [slides]\r\n  );\r\n\r\n  const handleClose = useCallback(() => {\r\n    setSelected(-1);\r\n  }, []);\r\n\r\n  return {\r\n    selected,\r\n    open: selected >= 0,\r\n    onOpen: handleOpen,\r\n    onClose: handleClose,\r\n    setSelected,\r\n  };\r\n}\r\n","// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\nimport GlobalStyles from '@mui/material/GlobalStyles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function StyledLightbox() {\r\n  const theme = useTheme();\r\n\r\n  const inputGlobalStyles = (\r\n    <GlobalStyles\r\n      styles={{\r\n        '.yarl__root': {\r\n          '--yarl__thumbnails_thumbnail_padding': 0,\r\n          '--yarl__thumbnails_thumbnail_border': 'transparent',\r\n          '--yarl__color_backdrop': alpha(theme.palette.grey[900], 0.9),\r\n          '--yarl__slide_captions_container_background': alpha(theme.palette.grey[900], 0.48),\r\n        },\r\n        // Caption\r\n        '.yarl__slide_title': {\r\n          fontSize: theme.typography.h5.fontSize,\r\n          fontWeight: theme.typography.h5.fontWeight,\r\n          lineHeight: theme.typography.h5.lineHeight,\r\n        },\r\n        '.yarl__slide_description': {\r\n          fontSize: theme.typography.body2.fontSize,\r\n          fontWeight: theme.typography.body2.fontWeight,\r\n          lineHeight: theme.typography.body2.lineHeight,\r\n        },\r\n        // Button\r\n        '.yarl__button': {\r\n          filter: 'unset',\r\n        },\r\n        // Thumbnails\r\n        '.yarl__thumbnails_thumbnail': {\r\n          opacity: 0.48,\r\n          '&.yarl__thumbnails_thumbnail_active': {\r\n            opacity: 1,\r\n          },\r\n        },\r\n        '.yarl__thumbnails_vignette': {\r\n          '--yarl__thumbnails_vignette_size': 0,\r\n        },\r\n        // Video\r\n        '.yarl__video_container': {\r\n          backgroundColor: theme.palette.common.black,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n\r\n  return inputGlobalStyles;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport ReactLightbox, { useLightboxState } from 'yet-another-react-lightbox';\r\nimport Zoom from 'yet-another-react-lightbox/plugins/zoom';\r\nimport Video from 'yet-another-react-lightbox/plugins/video';\r\nimport Captions from 'yet-another-react-lightbox/plugins/captions';\r\nimport Slideshow from 'yet-another-react-lightbox/plugins/slideshow';\r\nimport Fullscreen from 'yet-another-react-lightbox/plugins/fullscreen';\r\nimport Thumbnails from 'yet-another-react-lightbox/plugins/thumbnails';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\n//\r\nimport Iconify from '../iconify';\r\n//\r\nimport StyledLightbox from './styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = 24;\r\n\r\nexport default function Lightbox({\r\n  slides,\r\n  disabledZoom,\r\n  disabledVideo,\r\n  disabledTotal,\r\n  disabledCaptions,\r\n  disabledSlideshow,\r\n  disabledThumbnails,\r\n  disabledFullscreen,\r\n  onGetCurrentIndex,\r\n  ...other\r\n}) {\r\n  const totalItems = slides ? slides.length : 0;\r\n\r\n  return (\r\n    <>\r\n      <StyledLightbox />\r\n\r\n      <ReactLightbox\r\n        slides={slides}\r\n        animation={{ swipe: 240 }}\r\n        carousel={{ finite: totalItems < 5 }}\r\n        controller={{ closeOnBackdropClick: true }}\r\n        plugins={getPlugins({\r\n          disabledZoom,\r\n          disabledVideo,\r\n          disabledCaptions,\r\n          disabledSlideshow,\r\n          disabledThumbnails,\r\n          disabledFullscreen,\r\n        })}\r\n        on={{\r\n          view: ({ index }) => {\r\n            if (onGetCurrentIndex) {\r\n              onGetCurrentIndex(index);\r\n            }\r\n          },\r\n        }}\r\n        toolbar={{\r\n          buttons: [\r\n            <DisplayTotal key={0} totalItems={totalItems} disabledTotal={disabledTotal} />,\r\n            'close',\r\n          ],\r\n        }}\r\n        render={{\r\n          iconClose: () => <Iconify width={ICON_SIZE} icon=\"carbon:close\" />,\r\n          iconZoomIn: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-in\" />,\r\n          iconZoomOut: () => <Iconify width={ICON_SIZE} icon=\"carbon:zoom-out\" />,\r\n          iconSlideshowPlay: () => <Iconify width={ICON_SIZE} icon=\"carbon:play\" />,\r\n          iconSlideshowPause: () => <Iconify width={ICON_SIZE} icon=\"carbon:pause\" />,\r\n          iconPrev: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-left\" />,\r\n          iconNext: () => <Iconify width={ICON_SIZE + 8} icon=\"carbon:chevron-right\" />,\r\n          iconExitFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:center-to-fit\" />,\r\n          iconEnterFullscreen: () => <Iconify width={ICON_SIZE} icon=\"carbon:fit-to-screen\" />,\r\n        }}\r\n        {...other}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nLightbox.propTypes = {\r\n  disabledCaptions: PropTypes.bool,\r\n  disabledFullscreen: PropTypes.bool,\r\n  disabledSlideshow: PropTypes.bool,\r\n  disabledThumbnails: PropTypes.bool,\r\n  disabledTotal: PropTypes.bool,\r\n  disabledVideo: PropTypes.bool,\r\n  disabledZoom: PropTypes.bool,\r\n  onGetCurrentIndex: PropTypes.func,\r\n  slides: PropTypes.array,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getPlugins({\r\n  disabledZoom,\r\n  disabledVideo,\r\n  disabledCaptions,\r\n  disabledSlideshow,\r\n  disabledThumbnails,\r\n  disabledFullscreen,\r\n}) {\r\n  let plugins = [Captions, Fullscreen, Slideshow, Thumbnails, Video, Zoom];\r\n\r\n  if (disabledThumbnails) {\r\n    plugins = plugins.filter((plugin) => plugin !== Thumbnails);\r\n  }\r\n  if (disabledCaptions) {\r\n    plugins = plugins.filter((plugin) => plugin !== Captions);\r\n  }\r\n  if (disabledFullscreen) {\r\n    plugins = plugins.filter((plugin) => plugin !== Fullscreen);\r\n  }\r\n  if (disabledSlideshow) {\r\n    plugins = plugins.filter((plugin) => plugin !== Slideshow);\r\n  }\r\n  if (disabledZoom) {\r\n    plugins = plugins.filter((plugin) => plugin !== Zoom);\r\n  }\r\n  if (disabledVideo) {\r\n    plugins = plugins.filter((plugin) => plugin !== Video);\r\n  }\r\n\r\n  return plugins;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function DisplayTotal({ totalItems, disabledTotal }) {\r\n  const { currentIndex } = useLightboxState();\r\n\r\n  if (disabledTotal) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      className=\"yarl__button\"\r\n      sx={{\r\n        typography: 'body2',\r\n        alignItems: 'center',\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <strong> {currentIndex + 1} </strong> / {totalItems}\r\n    </Box>\r\n  );\r\n}\r\n\r\nDisplayTotal.propTypes = {\r\n  disabledTotal: PropTypes.bool,\r\n  totalItems: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatRoomParticipantDialog({ participant, open, onClose }) {\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\r\n        <Iconify icon=\"mingcute:close-line\" />\r\n      </IconButton>\r\n\r\n      <DialogContent sx={{ py: 5, px: 3, display: 'flex' }}>\r\n        <Avatar\r\n          alt={participant.name}\r\n          src={participant.avatarUrl}\r\n          sx={{ width: 96, height: 96, mr: 3 }}\r\n        />\r\n\r\n        <Stack spacing={1}>\r\n          <Typography variant=\"caption\" sx={{ color: 'primary.main' }}>\r\n            {participant.role}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\r\n\r\n          <Stack direction=\"row\" sx={{ typography: 'caption', color: 'text.disabled' }}>\r\n            <Iconify\r\n              icon=\"mingcute:location-fill\"\r\n              width={16}\r\n              sx={{ flexShrink: 0, mr: 0.5, mt: '2px' }}\r\n            />\r\n            {participant.address}\r\n          </Stack>\r\n\r\n          <Stack spacing={1} direction=\"row\" sx={{ pt: 1.5 }}>\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"error\"\r\n              sx={{\r\n                borderRadius: 1,\r\n                bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\r\n                '&:hover': {\r\n                  bgcolor: (theme) => alpha(theme.palette.error.main, 0.16),\r\n                },\r\n              }}\r\n            >\r\n              <Iconify width={18} icon=\"solar:phone-bold\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"info\"\r\n              sx={{\r\n                borderRadius: 1,\r\n                bgcolor: (theme) => alpha(theme.palette.info.main, 0.08),\r\n                '&:hover': {\r\n                  bgcolor: (theme) => alpha(theme.palette.info.main, 0.16),\r\n                },\r\n              }}\r\n            >\r\n              <Iconify width={18} icon=\"solar:chat-round-dots-bold\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              sx={{\r\n                borderRadius: 1,\r\n                bgcolor: (theme) => alpha(theme.palette.primary.main, 0.08),\r\n                '&:hover': {\r\n                  bgcolor: (theme) => alpha(theme.palette.primary.main, 0.16),\r\n                },\r\n              }}\r\n            >\r\n              <Iconify width={18} icon=\"fluent:mail-24-filled\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              sx={{\r\n                borderRadius: 1,\r\n                bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.08),\r\n                '&:hover': {\r\n                  bgcolor: (theme) => alpha(theme.palette.secondary.main, 0.16),\r\n                },\r\n              }}\r\n            >\r\n              <Iconify width={18} icon=\"solar:videocamera-record-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n        </Stack>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nChatRoomParticipantDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  participant: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport ChatRoomParticipantDialog from './chat-room-participant-dialog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatRoomGroup({ participants }) {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const collapse = useBoolean(true);\r\n\r\n  const handleOpen = useCallback((participant) => {\r\n    setSelected(participant);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setSelected(null);\r\n  };\r\n\r\n  const totalParticipants = participants.length;\r\n\r\n  const renderBtn = (\r\n    <ListItemButton\r\n      onClick={collapse.onToggle}\r\n      sx={{\r\n        pl: 2.5,\r\n        pr: 1.5,\r\n        height: 40,\r\n        flexShrink: 0,\r\n        flexGrow: 'unset',\r\n        typography: 'overline',\r\n        color: 'text.secondary',\r\n        bgcolor: 'background.neutral',\r\n      }}\r\n    >\r\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\r\n        In room ({totalParticipants})\r\n      </Box>\r\n      <Iconify\r\n        width={16}\r\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\r\n      />\r\n    </ListItemButton>\r\n  );\r\n\r\n  const renderContent = (\r\n    <Scrollbar sx={{ height: 56 * 4 }}>\r\n      {participants.map((participant) => (\r\n        <ListItemButton key={participant.id} onClick={() => handleOpen(participant)}>\r\n          <Badge\r\n            variant={participant.status}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n          >\r\n            <Avatar alt={participant.name} src={participant.avatarUrl} />\r\n          </Badge>\r\n\r\n          <ListItemText\r\n            sx={{ ml: 2 }}\r\n            primary={participant.name}\r\n            secondary={participant.role}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              typography: 'subtitle2',\r\n            }}\r\n            secondaryTypographyProps={{\r\n              noWrap: true,\r\n              component: 'span',\r\n              typography: 'caption',\r\n            }}\r\n          />\r\n        </ListItemButton>\r\n      ))}\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderBtn}\r\n\r\n      <div>\r\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\r\n      </div>\r\n\r\n      {selected && (\r\n        <ChatRoomParticipantDialog participant={selected} open={!!selected} onClose={handleClose} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomGroup.propTypes = {\r\n  participants: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatRoomSingle({ participant }) {\r\n  const collapse = useBoolean(true);\r\n\r\n  const { name, avatarUrl, role, address, phoneNumber, email } = participant;\r\n\r\n  const renderInfo = (\r\n    <Stack alignItems=\"center\" sx={{ py: 5 }}>\r\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 96, height: 96, mb: 2 }} />\r\n      <Typography variant=\"subtitle1\">{name}</Typography>\r\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 0.5 }}>\r\n        {role}\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n\r\n  const renderBtn = (\r\n    <ListItemButton\r\n      onClick={collapse.onToggle}\r\n      sx={{\r\n        pl: 2.5,\r\n        pr: 1.5,\r\n        height: 40,\r\n        flexShrink: 0,\r\n        flexGrow: 'unset',\r\n        typography: 'overline',\r\n        color: 'text.secondary',\r\n        bgcolor: 'background.neutral',\r\n      }}\r\n    >\r\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\r\n        Information\r\n      </Box>\r\n      <Iconify\r\n        width={16}\r\n        icon={collapse.value ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\r\n      />\r\n    </ListItemButton>\r\n  );\r\n\r\n  const renderContent = (\r\n    <Stack\r\n      spacing={2}\r\n      sx={{\r\n        px: 2,\r\n        py: 2.5,\r\n        '& svg': {\r\n          mr: 1,\r\n          flexShrink: 0,\r\n          color: 'text.disabled',\r\n        },\r\n      }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Iconify icon=\"mingcute:location-fill\" />\r\n        <Typography variant=\"body2\">{address}</Typography>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Iconify icon=\"solar:phone-bold\" />\r\n        <Typography variant=\"body2\">{phoneNumber}</Typography>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Iconify icon=\"fluent:mail-24-filled\" />\r\n        <Typography variant=\"body2\" noWrap>\r\n          {email}\r\n        </Typography>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderInfo}\r\n\r\n      {renderBtn}\r\n\r\n      <div>\r\n        <Collapse in={collapse.value}>{renderContent}</Collapse>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomSingle.propTypes = {\r\n  participant: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fDateTime } from 'src/utils/format-time';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport FileThumbnail from 'src/components/file-thumbnail';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatRoomAttachments({ attachments }) {\r\n  const collapse = useBoolean(true);\r\n\r\n  const totalAttachments = attachments.length;\r\n\r\n  const renderBtn = (\r\n    <ListItemButton\r\n      disabled={!attachments.length}\r\n      onClick={collapse.onToggle}\r\n      sx={{\r\n        pl: 2.5,\r\n        pr: 1.5,\r\n        height: 40,\r\n        flexShrink: 0,\r\n        flexGrow: 'unset',\r\n        typography: 'overline',\r\n        color: 'text.secondary',\r\n        bgcolor: 'background.neutral',\r\n      }}\r\n    >\r\n      <Box component=\"span\" sx={{ flexGrow: 1 }}>\r\n        Attachments ({totalAttachments})\r\n      </Box>\r\n      <Iconify\r\n        width={16}\r\n        icon={\r\n          (!collapse.value && 'eva:arrow-ios-forward-fill') ||\r\n          (!attachments.length && 'eva:arrow-ios-forward-fill') ||\r\n          'eva:arrow-ios-downward-fill'\r\n        }\r\n      />\r\n    </ListItemButton>\r\n  );\r\n\r\n  const renderContent = (\r\n    <Scrollbar sx={{ px: 2, py: 2.5 }}>\r\n      {attachments.map((attachment, index) => (\r\n        <Stack\r\n          key={attachment.name + index}\r\n          spacing={1.5}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          sx={{ mb: 2 }}\r\n        >\r\n          <Stack\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{\r\n              width: 40,\r\n              height: 40,\r\n              flexShrink: 0,\r\n              borderRadius: 1,\r\n              overflow: 'hidden',\r\n              position: 'relative',\r\n              backgroundColor: 'background.neutral',\r\n            }}\r\n          >\r\n            <FileThumbnail\r\n              imageView\r\n              file={attachment.preview}\r\n              onDownload={() => console.info('DOWNLOAD')}\r\n              sx={{ width: 28, height: 28 }}\r\n            />\r\n          </Stack>\r\n\r\n          <ListItemText\r\n            primary={attachment.name}\r\n            secondary={fDateTime(attachment.createdAt)}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              typography: 'body2',\r\n            }}\r\n            secondaryTypographyProps={{\r\n              mt: 0.25,\r\n              noWrap: true,\r\n              component: 'span',\r\n              typography: 'caption',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </Stack>\r\n      ))}\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderBtn}\r\n\r\n      <Box\r\n        sx={{\r\n          overflow: 'hidden',\r\n          height: collapse.value ? 1 : 0,\r\n          transition: (theme) =>\r\n            theme.transitions.create(['height'], {\r\n              duration: theme.transitions.duration.shorter,\r\n            }),\r\n        }}\r\n      >\r\n        {renderContent}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomAttachments.propTypes = {\r\n  attachments: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport uniq from 'lodash/uniq';\r\nimport flatten from 'lodash/flatten';\r\nimport { useEffect, useCallback } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\n// hooks\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport { useCollapseNav } from './hooks';\r\nimport ChatRoomGroup from './chat-room-group';\r\nimport ChatRoomSingle from './chat-room-single';\r\nimport ChatRoomAttachments from './chat-room-attachments';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NAV_WIDTH = 240;\r\n\r\nexport default function ChatRoom({ participants, conversation }) {\r\n  const theme = useTheme();\r\n\r\n  const lgUp = useResponsive('up', 'lg');\r\n\r\n  const {\r\n    collapseDesktop,\r\n    onCloseDesktop,\r\n    onCollapseDesktop,\r\n    //\r\n    openMobile,\r\n    onOpenMobile,\r\n    onCloseMobile,\r\n  } = useCollapseNav();\r\n\r\n  useEffect(() => {\r\n    if (!lgUp) {\r\n      onCloseDesktop();\r\n    }\r\n  }, [onCloseDesktop, lgUp]);\r\n\r\n  const handleToggleNav = useCallback(() => {\r\n    if (lgUp) {\r\n      onCollapseDesktop();\r\n    } else {\r\n      onOpenMobile();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lgUp]);\r\n\r\n  const group = participants.length > 1;\r\n\r\n  const attachments = uniq(flatten(conversation.messages.map((messages) => messages.attachments)));\r\n\r\n  const renderContent = (\r\n    <>\r\n      {group ? (\r\n        <ChatRoomGroup participants={participants} />\r\n      ) : (\r\n        <ChatRoomSingle participant={participants[0]} />\r\n      )}\r\n\r\n      <ChatRoomAttachments attachments={attachments} />\r\n    </>\r\n  );\r\n\r\n  const renderToggleBtn = (\r\n    <IconButton\r\n      onClick={handleToggleNav}\r\n      sx={{\r\n        top: 12,\r\n        right: 0,\r\n        zIndex: 9,\r\n        width: 32,\r\n        height: 32,\r\n        borderRight: 0,\r\n        position: 'absolute',\r\n        borderRadius: `12px 0 0 12px`,\r\n        boxShadow: theme.customShadows.z8,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: `solid 1px ${theme.palette.divider}`,\r\n        '&:hover': {\r\n          bgcolor: theme.palette.background.neutral,\r\n        },\r\n        ...(lgUp && {\r\n          ...(!collapseDesktop && {\r\n            right: NAV_WIDTH,\r\n          }),\r\n        }),\r\n      }}\r\n    >\r\n      {lgUp ? (\r\n        <Iconify\r\n          width={16}\r\n          icon={collapseDesktop ? 'eva:arrow-ios-back-fill' : 'eva:arrow-ios-forward-fill'}\r\n        />\r\n      ) : (\r\n        <Iconify width={16} icon=\"eva:arrow-ios-back-fill\" />\r\n      )}\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      {renderToggleBtn}\r\n\r\n      {lgUp ? (\r\n        <Stack\r\n          sx={{\r\n            height: 1,\r\n            flexShrink: 0,\r\n            width: NAV_WIDTH,\r\n            borderLeft: `solid 1px ${theme.palette.divider}`,\r\n            transition: theme.transitions.create(['width'], {\r\n              duration: theme.transitions.duration.shorter,\r\n            }),\r\n            ...(collapseDesktop && {\r\n              width: 0,\r\n            }),\r\n          }}\r\n        >\r\n          {!collapseDesktop && renderContent}\r\n        </Stack>\r\n      ) : (\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={openMobile}\r\n          onClose={onCloseMobile}\r\n          slotProps={{\r\n            backdrop: { invisible: true },\r\n          }}\r\n          PaperProps={{\r\n            sx: { width: NAV_WIDTH },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object,\r\n  participants: PropTypes.array,\r\n};\r\n","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCollapseNav() {\r\n  const [openMobile, setOpenMobile] = useState(false);\r\n\r\n  const [collapseDesktop, setCollapseDesktop] = useState(false);\r\n\r\n  const onCollapseDesktop = useCallback(() => {\r\n    setCollapseDesktop((prev) => !prev);\r\n  }, []);\r\n\r\n  const onCloseDesktop = useCallback(() => {\r\n    setCollapseDesktop(false);\r\n  }, []);\r\n\r\n  const onOpenMobile = useCallback(() => {\r\n    setOpenMobile(true);\r\n  }, []);\r\n\r\n  const onCloseMobile = useCallback(() => {\r\n    setOpenMobile(false);\r\n  }, []);\r\n\r\n  return {\r\n    openMobile,\r\n    collapseDesktop,\r\n    //\r\n    onOpenMobile,\r\n    onCloseMobile,\r\n    onCloseDesktop,\r\n    onCollapseDesktop,\r\n  };\r\n}\r\n","import { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// hooks\r\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n//\r\nimport { useGetMessage } from './hooks';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatMessageItem({ message, onOpenLightbox }) {\r\n  // const { user } = useMockedUser();\r\n  const { user } = useContext(AuthContext) || {};\r\n\r\n  const { me, senderDetails, hasImage } = useGetMessage({\r\n    message,\r\n    currentUserId: user?.userID,\r\n  });\r\n\r\n  const { firstName, avatarUrl } = senderDetails;\r\n\r\n  const { text, createdAt } = message;\r\n\r\n  const createdAtConverted = createdAt.toDate();\r\n\r\n  const renderInfo = (\r\n    <Typography\r\n      noWrap\r\n      variant=\"caption\"\r\n      sx={{\r\n        mb: 1,\r\n        color: 'text.disabled',\r\n        ...(!me && {\r\n          mr: 'auto',\r\n        }),\r\n      }}\r\n    >\r\n      {!me && `${firstName},`} &nbsp;\r\n      {formatDistanceToNowStrict(new Date(createdAtConverted), {\r\n        addSuffix: true,\r\n      })}\r\n    </Typography>\r\n  );\r\n\r\n  const renderBody = (\r\n    <Stack\r\n      sx={{\r\n        p: 1.5,\r\n        minWidth: 48,\r\n        maxWidth: 320,\r\n        borderRadius: 1,\r\n        typography: 'body2',\r\n        bgcolor: 'background.neutral',\r\n        ...(me && {\r\n          color: 'grey.800',\r\n          bgcolor: 'primary.lighter',\r\n        }),\r\n        ...(hasImage && {\r\n          p: 0,\r\n          bgcolor: 'transparent',\r\n        }),\r\n      }}\r\n    >\r\n      {hasImage ? (\r\n        <Box\r\n          component=\"img\"\r\n          alt=\"attachment\"\r\n          src={text}\r\n          onClick={() => onOpenLightbox(text)}\r\n          sx={{\r\n            minHeight: 220,\r\n            borderRadius: 1.5,\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n              opacity: 0.9,\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        text\r\n      )}\r\n    </Stack>\r\n  );\r\n\r\n  const renderActions = (\r\n    <Stack\r\n      direction=\"row\"\r\n      className=\"message-actions\"\r\n      sx={{\r\n        pt: 0.5,\r\n        opacity: 0,\r\n        top: '100%',\r\n        left: 0,\r\n        position: 'absolute',\r\n        transition: (theme) =>\r\n          theme.transitions.create(['opacity'], {\r\n            duration: theme.transitions.duration.shorter,\r\n          }),\r\n        ...(me && {\r\n          left: 'unset',\r\n          right: 0,\r\n        }),\r\n      }}\r\n    >\r\n      <IconButton size=\"small\">\r\n        <Iconify icon=\"solar:reply-bold\" width={16} />\r\n      </IconButton>\r\n      <IconButton size=\"small\">\r\n        <Iconify icon=\"eva:smiling-face-fill\" width={16} />\r\n      </IconButton>\r\n      <IconButton size=\"small\">\r\n        <Iconify icon=\"solar:trash-bin-trash-bold\" width={16} />\r\n      </IconButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={me ? 'flex-end' : 'unset'} sx={{ mb: 5 }}>\r\n      {!me && <Avatar alt={firstName} src={avatarUrl} sx={{ width: 32, height: 32, mr: 2 }} />}\r\n\r\n      <Stack alignItems=\"flex-end\">\r\n        {renderInfo}\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            position: 'relative',\r\n            '&:hover': {\r\n              '& .message-actions': {\r\n                opacity: 1,\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {renderBody}\r\n          {renderActions}\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nChatMessageItem.propTypes = {\r\n  message: PropTypes.object,\r\n  onOpenLightbox: PropTypes.func,\r\n  // participants: PropTypes.array,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function useGetMessage({ message, participants, currentUserId }) {\r\n  // const sender = participants.find((participant) => participant.id === message.senderId);\r\n\r\n  const senderDetails =\r\n    message.senderId === currentUserId\r\n      ? {\r\n          type: 'me',\r\n        }\r\n      : {\r\n          avatarUrl: message?.avatarUrl,\r\n          firstName: message?.name.split(' ')[1],\r\n        };\r\n\r\n  const me = senderDetails.type === 'me';\r\n\r\n  const hasImage = message.contentType === 'image';\r\n\r\n  return {\r\n    hasImage,\r\n    me,\r\n    senderDetails,\r\n  };\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n// import { getAnalytics } from 'firebase/analytics';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\nimport { getFirestore } from 'firebase/firestore';\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// const firebaseConfig = {\r\n//   apiKey: 'AIzaSyAc5dCq_Wl6YMJ0HTHCmfeojDDt_WI5Mig',\r\n//   authDomain: 'test-chatapp-efb7a.firebaseapp.com',\r\n//   projectId: 'test-chatapp-efb7a',\r\n//   storageBucket: 'test-chatapp-efb7a.appspot.com',\r\n//   messagingSenderId: '146798877352',\r\n//   appId: '1:146798877352:web:e1dfbacb436991a610c09d',\r\n//   measurementId: 'G-FYEJHLL7M2',\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBSPR6Fpjzd1etidnUNio2qD4B40WSVHH8',\r\n  authDomain: 'test-chatapp-c27d6.firebaseapp.com',\r\n  projectId: 'test-chatapp-c27d6',\r\n  storageBucket: 'test-chatapp-c27d6.appspot.com',\r\n  messagingSenderId: '770864139300',\r\n  appId: '1:770864139300:web:1ed6b74f3dc882fd7ddcb1',\r\n};\r\n\r\n// console.log(getFirestore);\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// export const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n// const analytics = getAnalytics(app);\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\n// firebase\r\nimport { query, collection, orderBy, onSnapshot, limit, doc } from 'firebase/firestore';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport Lightbox, { useLightBox } from 'src/components/lightbox';\r\n//\r\nimport { useMessagesScroll } from './hooks';\r\nimport ChatMessageItem from './chat-message-item';\r\nimport { db } from './firebase-config/config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatMessageList({ messages = [], providerID, userID }) {\r\n  const { messagesEndRef } = useMessagesScroll(messages);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const conversationsRef = collection(db, 'conversations');\r\n\r\n    const conversationDocRef = doc(conversationsRef, providerID);\r\n\r\n    const messagesRef = collection(conversationDocRef, userID);\r\n\r\n    const q = query(messagesRef, orderBy('createdAt', 'desc'), limit(50));\r\n    const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n      const fetchedMessages = [];\r\n      QuerySnapshot.forEach((queryDoc) => {\r\n        fetchedMessages.push({ ...queryDoc.data(), id: queryDoc.id });\r\n      });\r\n      const sortedMessages = fetchedMessages.sort((a, b) => a.createdAt - b.createdAt);\r\n      setChatMessages(sortedMessages);\r\n    });\r\n    return () => unsubscribe;\r\n  }, [providerID, userID]);\r\n\r\n  const slides = messages\r\n    .filter((message) => message.contentType === 'image')\r\n    .map((message) => ({ src: message.body }));\r\n\r\n  const lightbox = useLightBox(slides);\r\n\r\n  return (\r\n    <>\r\n      <Scrollbar ref={messagesEndRef} sx={{ px: 3, py: 5, height: 1 }}>\r\n        <Box>\r\n          {chatMessages.map((message) => (\r\n            <ChatMessageItem\r\n              key={message.id}\r\n              message={message}\r\n              onOpenLightbox={() => lightbox.onOpen(message.body)}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Scrollbar>\r\n\r\n      <Lightbox\r\n        index={lightbox.selected}\r\n        slides={slides}\r\n        open={lightbox.open}\r\n        close={lightbox.onClose}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nChatMessageList.propTypes = {\r\n  messages: PropTypes.array,\r\n  providerID: PropTypes.string,\r\n  userID: PropTypes.string,\r\n};\r\n","import { useCallback, useEffect, useRef } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useMessagesScroll(messages) {\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollMessagesToBottom = useCallback(() => {\r\n    if (!messages) {\r\n      return;\r\n    }\r\n\r\n    if (!messagesEndRef.current) {\r\n      return;\r\n    }\r\n\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(\r\n    () => {\r\n      scrollMessagesToBottom();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [messages]\r\n  );\r\n\r\n  return {\r\n    messagesEndRef,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { sub } from 'date-fns';\r\nimport { useRef, useState, useCallback, useMemo, useContext } from 'react';\r\nimport { addDoc, collection, doc } from 'firebase/firestore';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n// routes\r\n\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// utils\r\nimport uuidv4 from 'src/utils/uuidv4';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { db } from './firebase-config/config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatMessageInput({\r\n  recipients,\r\n  providerID,\r\n  userID,\r\n  onAddRecipients,\r\n  //\r\n  // disabled,\r\n  selectedConversationId,\r\n}) {\r\n  const router = useRouter();\r\n\r\n  // const { user } = useMockedUser();\r\n\r\n  const fileRef = useRef(null);\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { user } = useContext(AuthContext) || {};\r\n\r\n  const myContact = useMemo(\r\n    () => ({\r\n      id: user?.UserID || '',\r\n      role: 'user',\r\n      email: user?.email || '',\r\n      address: user.address?.Country || '',\r\n      name: `${user?.lastName || ''} ${user?.firstName || ''}`,\r\n      lastActivity: new Date(),\r\n      avatarUrl: user?.photo || '',\r\n      phoneNumber: user?.phoneNumber || '',\r\n      status: 'online',\r\n    }),\r\n    [user]\r\n  );\r\n\r\n  const messageData = useMemo(\r\n    () => ({\r\n      id: uuidv4(),\r\n      attachments: [],\r\n      body: message,\r\n      contentType: 'text',\r\n      createdAt: sub(new Date(), { minutes: 1 }),\r\n      senderId: myContact.id,\r\n    }),\r\n    [message, myContact.id]\r\n  );\r\n\r\n  const conversationData = useMemo(\r\n    () => ({\r\n      id: uuidv4(),\r\n      messages: [messageData],\r\n      participants: [...recipients, myContact],\r\n      type: recipients.length > 1 ? 'GROUP' : 'ONE_TO_ONE',\r\n      unreadCount: 0,\r\n    }),\r\n    [messageData, myContact, recipients]\r\n  );\r\n\r\n  const handleAttach = useCallback(() => {\r\n    if (fileRef.current) {\r\n      fileRef.current.click();\r\n    }\r\n  }, []);\r\n\r\n  const handleChangeMessage = useCallback((event) => {\r\n    setMessage(event.target.value);\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    const singleMessage = {\r\n      senderId: user?.userID || '',\r\n      role: 'user',\r\n      email: user?.email || '',\r\n      address: user.address?.Country || '',\r\n      name: `${user.lastName || ''} ${user.firstName || ''}`,\r\n      createdAt: sub(new Date(), { minutes: 1 }),\r\n      avatarUrl: user?.photo || '',\r\n      phoneNumber: user?.phoneNumber || '',\r\n      status: 'online',\r\n    };\r\n\r\n    if (message) {\r\n      setMessage('');\r\n      try {\r\n        const conversationsRef = collection(db, 'conversations');\r\n\r\n        const conversationDocRef = doc(conversationsRef, providerID);\r\n\r\n        const messagesRef = collection(conversationDocRef, userID);\r\n\r\n        await addDoc(messagesRef, {\r\n          text: message,\r\n          ...singleMessage,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    event.preventDefault();\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputBase\r\n        value={message}\r\n        onKeyUp={handleKeyDown}\r\n        onChange={handleChangeMessage}\r\n        placeholder=\"Type a message\"\r\n        // disabled={disabled}\r\n        startAdornment={\r\n          <IconButton>\r\n            <Iconify icon=\"eva:smiling-face-fill\" />\r\n          </IconButton>\r\n        }\r\n        endAdornment={\r\n          <Stack direction=\"row\" sx={{ flexShrink: 0 }}>\r\n            <IconButton onClick={handleAttach}>\r\n              <Iconify icon=\"solar:gallery-add-bold\" />\r\n            </IconButton>\r\n            <IconButton onClick={handleAttach}>\r\n              <Iconify icon=\"eva:attach-2-fill\" />\r\n            </IconButton>\r\n            <IconButton onClick={handleSendMessage}>\r\n              <Iconify icon=\"majesticons:send\" />\r\n            </IconButton>\r\n            {/* <IconButton>\r\n              <Iconify icon=\"solar:microphone-bold\" />\r\n            </IconButton> */}\r\n          </Stack>\r\n        }\r\n        sx={{\r\n          px: 1,\r\n          height: 56,\r\n          flexShrink: 0,\r\n          borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\r\n        }}\r\n      />\r\n\r\n      <input type=\"file\" ref={fileRef} style={{ display: 'none' }} />\r\n    </>\r\n  );\r\n}\r\n\r\nChatMessageInput.propTypes = {\r\n  // disabled: PropTypes.bool,\r\n  onAddRecipients: PropTypes.func,\r\n  recipients: PropTypes.array,\r\n  selectedConversationId: PropTypes.string,\r\n  providerID: PropTypes.string,\r\n  userID: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Badge from '@mui/material/Badge';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AvatarGroup, { avatarGroupClasses } from '@mui/material/AvatarGroup';\r\n// utils\r\nimport { fToNow } from 'src/utils/format-time';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatHeaderDetail({ participants }) {\r\n  const group = participants.length > 1;\r\n\r\n  const singleParticipant = participants[0];\r\n\r\n  const renderGroup = (\r\n    <AvatarGroup\r\n      max={3}\r\n      sx={{\r\n        [`& .${avatarGroupClasses.avatar}`]: {\r\n          width: 32,\r\n          height: 32,\r\n        },\r\n      }}\r\n    >\r\n      {participants.map((participant) => (\r\n        <Avatar key={participant.id} alt={participant.name} src={participant.avatarUrl} />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n\r\n  const renderSingle = (\r\n    <Stack flexGrow={1} direction=\"row\" alignItems=\"center\" spacing={2}>\r\n      <Badge\r\n        variant={singleParticipant.status}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Avatar src={singleParticipant.avatarUrl} alt={singleParticipant.name} />\r\n      </Badge>\r\n\r\n      <ListItemText\r\n        primary={singleParticipant.name}\r\n        secondary={\r\n          singleParticipant.status === 'offline'\r\n            ? fToNow(singleParticipant.lastActivity)\r\n            : singleParticipant.status\r\n        }\r\n        secondaryTypographyProps={{\r\n          component: 'span',\r\n          ...(singleParticipant.status !== 'offline' && {\r\n            textTransform: 'capitalize',\r\n          }),\r\n        }}\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {group ? renderGroup : renderSingle}\r\n\r\n      <Stack flexGrow={1} />\r\n\r\n      <IconButton>\r\n        <Iconify icon=\"solar:phone-bold\" />\r\n      </IconButton>\r\n      <IconButton>\r\n        <Iconify icon=\"solar:videocamera-record-bold\" />\r\n      </IconButton>\r\n      <IconButton>\r\n        <Iconify icon=\"eva:more-vertical-fill\" />\r\n      </IconButton>\r\n    </>\r\n  );\r\n}\r\n\r\nChatHeaderDetail.propTypes = {\r\n  participants: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatHeaderCompose({ contacts, onAddRecipients }) {\r\n  const [searchRecipients, setSearchRecipients] = useState('');\r\n\r\n  const handleAddRecipients = useCallback(\r\n    (selected) => {\r\n      setSearchRecipients('');\r\n      onAddRecipients(selected);\r\n    },\r\n    [onAddRecipients]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.primary', mr: 2 }}>\r\n        To:\r\n      </Typography>\r\n\r\n      <Autocomplete\r\n        sx={{ minWidth: 320 }}\r\n        multiple\r\n        limitTags={3}\r\n        popupIcon={null}\r\n        disableCloseOnSelect\r\n        noOptionsText={<SearchNotFound query={searchRecipients} />}\r\n        onChange={(event, newValue) => handleAddRecipients(newValue)}\r\n        onInputChange={(event, newValue) => setSearchRecipients(newValue)}\r\n        options={contacts}\r\n        getOptionLabel={(recipient) => recipient.name}\r\n        isOptionEqualToValue={(option, value) => option.id === value.id}\r\n        renderInput={(params) => <TextField {...params} placeholder=\"+ Recipients\" />}\r\n        renderOption={(props, recipient, { selected }) => (\r\n          <li {...props} key={recipient.id}>\r\n            <Box\r\n              key={recipient.id}\r\n              sx={{\r\n                mr: 1,\r\n                width: 32,\r\n                height: 32,\r\n                overflow: 'hidden',\r\n                borderRadius: '50%',\r\n                position: 'relative',\r\n              }}\r\n            >\r\n              <Avatar alt={recipient.name} src={recipient.avatarUrl} sx={{ width: 1, height: 1 }} />\r\n              <Stack\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                sx={{\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: 1,\r\n                  height: 1,\r\n                  opacity: 0,\r\n                  position: 'absolute',\r\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n                  transition: (theme) =>\r\n                    theme.transitions.create(['opacity'], {\r\n                      easing: theme.transitions.easing.easeInOut,\r\n                      duration: theme.transitions.duration.shorter,\r\n                    }),\r\n                  ...(selected && {\r\n                    opacity: 1,\r\n                    color: 'primary.main',\r\n                  }),\r\n                }}\r\n              >\r\n                <Iconify icon=\"eva:checkmark-fill\" />\r\n              </Stack>\r\n            </Box>\r\n\r\n            {recipient.name}\r\n          </li>\r\n        )}\r\n        renderTags={(selected, getTagProps) =>\r\n          selected.map((recipient, index) => (\r\n            <Chip\r\n              {...getTagProps({ index })}\r\n              key={recipient.id}\r\n              label={recipient.name}\r\n              avatar={<Avatar alt={recipient.name} src={recipient.avatarUrl} />}\r\n              size=\"small\"\r\n              variant=\"soft\"\r\n            />\r\n          ))\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nChatHeaderCompose.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onAddRecipients: PropTypes.func,\r\n};\r\n","import { useEffect, useState, useCallback, useContext } from 'react';\r\n// @mui\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\n// routes\r\nimport { useParams } from 'react-router';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter, useSearchParams } from 'src/routes/hooks';\r\n// hooks\r\nimport { useMockedUser } from 'src/hooks/use-mocked-user';\r\n// api\r\nimport { useGetContacts, useGetConversation, useGetConversations } from 'src/api/chat';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\n//\r\nimport ChatNav from '../chat-nav';\r\nimport ChatRoom from '../chat-room';\r\nimport ChatMessageList from '../chat-message-list';\r\nimport ChatMessageInput from '../chat-message-input';\r\nimport ChatHeaderDetail from '../chat-header-detail';\r\nimport ChatHeaderCompose from '../chat-header-compose';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatView() {\r\n  const router = useRouter();\r\n\r\n  // const { user } = useMockedUser();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const selectedConversationId = searchParams.get('id') || '';\r\n\r\n  const [recipients, setRecipients] = useState([]);\r\n\r\n  const { contacts } = useGetContacts();\r\n\r\n  // creating chat id\r\n  const { id } = useParams();\r\n  const {\r\n    user: { userID },\r\n  } = useContext(AuthContext) || {};\r\n\r\n  const { conversation, conversationError } = useGetConversation(`${selectedConversationId}`);\r\n\r\n  // const participants = conversation\r\n  //   ? conversation.participants.filter((participant) => participant.id !== user.id)\r\n  //   : [];\r\n\r\n  useEffect(() => {\r\n    if (conversationError || !selectedConversationId) {\r\n      router.push(paths.dashboard.chat);\r\n    }\r\n  }, [conversationError, router, selectedConversationId]);\r\n\r\n  const handleAddRecipients = useCallback((selected) => {\r\n    setRecipients(selected);\r\n  }, []);\r\n\r\n  const details = !!conversation;\r\n\r\n  const renderHead = (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      flexShrink={0}\r\n      sx={{ pr: 1, pl: 2.5, py: 1, minHeight: 72 }}\r\n    >\r\n      {selectedConversationId ? (\r\n        <>{details && <ChatHeaderDetail participants={[]} />}</>\r\n      ) : (\r\n        <ChatHeaderCompose contacts={contacts} onAddRecipients={handleAddRecipients} />\r\n      )}\r\n    </Stack>\r\n  );\r\n\r\n  // const renderNav = (\r\n  //   <ChatNav\r\n  //     contacts={contacts}\r\n  //     conversations={conversations}\r\n  //     loading={conversationsLoading}\r\n  //     selectedConversationId={selectedConversationId}\r\n  //   />\r\n  // );\r\n\r\n  const renderMessages = (\r\n    <Stack\r\n      sx={{\r\n        width: 1,\r\n        height: 1,\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <ChatMessageList\r\n        messages={conversation?.messages}\r\n        participants={[]}\r\n        // providerID={id}\r\n        providerID={id}\r\n        userID={userID}\r\n      />\r\n\r\n      <ChatMessageInput\r\n        recipients={recipients}\r\n        onAddRecipients={handleAddRecipients}\r\n        //\r\n        selectedConversationId={selectedConversationId}\r\n        disabled={!recipients.length && !selectedConversationId}\r\n        // providerID={id}\r\n        providerID={id}\r\n        userID={userID}\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      >\r\n        Chat\r\n      </Typography>\r\n\r\n      <Stack component={Card} direction=\"row\" sx={{ height: '72vh' }}>\r\n        {/* {renderNav} */}\r\n\r\n        <Stack\r\n          sx={{\r\n            width: 1,\r\n            height: 1,\r\n            overflow: 'hidden',\r\n          }}\r\n        >\r\n          {renderHead}\r\n\r\n          <Stack\r\n            direction=\"row\"\r\n            sx={{\r\n              width: 1,\r\n              height: 1,\r\n              overflow: 'hidden',\r\n              borderTop: (theme) => `solid 1px ${theme.palette.divider}`,\r\n            }}\r\n          >\r\n            {renderMessages}\r\n\r\n            {details && <ChatRoom conversation={conversation} participants={[]} />}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport { ChatView } from 'src/sections/chat/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Chat</title>\r\n      </Helmet>\r\n\r\n      <ChatView />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = (Math.random() * 16) | 0,\r\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n"],"names":["options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","useGetContacts","URL","endpoints","chat","params","endpoint","_useSWR","useSWR","fetcher","data","isLoading","error","isValidating","useMemo","contacts","contactsLoading","contactsError","contactsValidating","contactsEmpty","length","useGetConversations","_useSWR2","byId","keyBy","conversations","allIds","Object","keys","conversationsLoading","conversationsError","conversationsValidating","conversationsEmpty","useGetConversation","conversationId","_useSWR3","conversation","conversationLoading","conversationError","conversationValidating","clickConversation","_x4","_clickConversation","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","wrap","_context3","prev","next","mutate","currentData","map","id","_objectSpread","unreadCount","stop","useLightBox","slides","_useState","useState","_useState2","_slicedToArray","selected","setSelected","open","onOpen","useCallback","slideUrl","slideIndex","findIndex","slide","type","poster","src","onClose","StyledLightbox","theme","useTheme","_jsx","GlobalStyles","styles","alpha","palette","grey","fontSize","typography","h5","fontWeight","lineHeight","body2","filter","opacity","backgroundColor","common","black","ICON_SIZE","Lightbox","_ref","disabledZoom","disabledVideo","disabledTotal","disabledCaptions","disabledSlideshow","disabledThumbnails","disabledFullscreen","onGetCurrentIndex","other","_objectWithoutProperties","_excluded","totalItems","_jsxs","_Fragment","children","ReactLightbox","animation","swipe","carousel","finite","controller","closeOnBackdropClick","plugins","getPlugins","on","view","_ref2","index","toolbar","buttons","DisplayTotal","render","iconClose","Iconify","width","icon","iconZoomIn","iconZoomOut","iconSlideshowPlay","iconSlideshowPause","iconPrev","iconNext","iconExitFullscreen","iconEnterFullscreen","_ref3","Captions","Fullscreen","Slideshow","Thumbnails","Video","Zoom","plugin","_ref4","currentIndex","useLightboxState","Box","component","className","sx","alignItems","display","justifyContent","ChatRoomParticipantDialog","participant","Dialog","fullWidth","maxWidth","IconButton","onClick","position","right","top","DialogContent","py","px","Avatar","alt","name","avatarUrl","height","mr","Stack","spacing","Typography","variant","color","role","direction","flexShrink","mt","address","pt","size","borderRadius","bgcolor","main","info","primary","secondary","ChatRoomGroup","participants","collapse","useBoolean","handleOpen","totalParticipants","renderBtn","ListItemButton","onToggle","pl","pr","flexGrow","value","renderContent","Scrollbar","Badge","status","anchorOrigin","vertical","horizontal","ListItemText","ml","primaryTypographyProps","noWrap","secondaryTypographyProps","Collapse","in","ChatRoomSingle","phoneNumber","email","renderInfo","mb","ChatRoomAttachments","attachments","totalAttachments","disabled","attachment","overflow","FileThumbnail","imageView","file","preview","onDownload","console","fDateTime","createdAt","transition","transitions","create","duration","shorter","NAV_WIDTH","ChatRoom","lgUp","useResponsive","_useCollapseNav","openMobile","setOpenMobile","_useState3","_useState4","collapseDesktop","setCollapseDesktop","onCollapseDesktop","onCloseDesktop","onOpenMobile","onCloseMobile","useCollapseNav","useEffect","handleToggleNav","group","uniq","flatten","messages","renderToggleBtn","zIndex","borderRight","boxShadow","customShadows","z8","background","paper","border","concat","divider","neutral","borderLeft","Drawer","anchor","slotProps","backdrop","invisible","PaperProps","ChatMessageItem","message","onOpenLightbox","user","useContext","AuthContext","_useGetMessage","currentUserId","senderDetails","senderId","firstName","split","me","hasImage","contentType","useGetMessage","userID","text","createdAtConverted","toDate","formatDistanceToNowStrict","Date","addSuffix","renderBody","p","minWidth","minHeight","cursor","renderActions","left","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","ChatMessageList","_ref$messages","providerID","_useMessagesScroll","messagesEndRef","useRef","scrollMessagesToBottom","current","scrollTop","scrollHeight","useMessagesScroll","chatMessages","setChatMessages","conversationsRef","collection","conversationDocRef","doc","messagesRef","q","query","orderBy","limit","unsubscribe","onSnapshot","QuerySnapshot","fetchedMessages","forEach","queryDoc","push","sortedMessages","sort","a","b","body","lightbox","ref","close","ChatMessageInput","recipients","fileRef","onAddRecipients","selectedConversationId","useRouter","setMessage","myContact","_user$address","UserID","Country","lastName","lastActivity","photo","messageData","uuidv4","sub","minutes","handleAttach","_toConsumableArray","click","handleChangeMessage","event","target","handleSendMessage","_callee","_user$address2","singleMessage","_context","addDoc","t0","log","InputBase","onKeyUp","preventDefault","key","shiftKey","onChange","placeholder","startAdornment","endAdornment","borderTop","style","ChatHeaderDetail","singleParticipant","renderGroup","AvatarGroup","max","_defineProperty","avatarGroupClasses","avatar","renderSingle","fToNow","textTransform","ChatHeaderCompose","searchRecipients","setSearchRecipients","handleAddRecipients","Autocomplete","multiple","limitTags","popupIcon","disableCloseOnSelect","noOptionsText","SearchNotFound","newValue","onInputChange","getOptionLabel","recipient","isOptionEqualToValue","option","renderInput","TextField","renderOption","props","_createElement","easing","easeInOut","renderTags","getTagProps","Chip","label","ChatView","router","settings","useSettingsContext","useSearchParams","get","setRecipients","useParams","_useGetConversation","paths","dashboard","details","renderHead","renderMessages","Container","themeStretch","xs","md","Card","ChatPage","Helmet","replace","c","r","Math","random","toString"],"sourceRoot":""}