{"version":3,"file":"static/js/3429.e5ccfb14.chunk.js","mappings":"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","sources":["sections/invoice/invoice-new-edit-details.js","sections/invoice/invoice-new-edit-address.js","sections/invoice/invoice-new-edit-status-date.js","sections/invoice/invoice-new-edit-form.js","sections/invoice/view/appointment-edit-view.js","sections/invoice/view/appointment-create-view.js","sections/invoice/invoice-pdf.js","sections/invoice/invoice-details.js"],"sourcesContent":["import sum from 'lodash/sum';\r\nimport { useCallback, useEffect } from 'react';\r\nimport { useFormContext, useFieldArray } from 'react-hook-form';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport { inputBaseClasses } from '@mui/material/InputBase';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from 'src/_mock';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditDetails() {\r\n  const { control, setValue, watch, resetField } = useFormContext();\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'items',\r\n  });\r\n\r\n  const values = watch();\r\n\r\n  const totalOnRow = values.items.map((item) => item.quantity * item.price);\r\n\r\n  const subTotal = sum(totalOnRow);\r\n\r\n  const totalAmount = subTotal - values.discount - values.shipping + values.taxes;\r\n\r\n  useEffect(() => {\r\n    setValue('totalAmount', totalAmount);\r\n  }, [setValue, totalAmount]);\r\n\r\n  const handleAdd = () => {\r\n    append({\r\n      title: '',\r\n      description: '',\r\n      service: '',\r\n      quantity: 1,\r\n      price: 0,\r\n      total: 0,\r\n    });\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    remove(index);\r\n  };\r\n\r\n  const handleClearService = useCallback(\r\n    (index) => {\r\n      resetField(`items[${index}].quantity`);\r\n      resetField(`items[${index}].price`);\r\n      resetField(`items[${index}].total`);\r\n    },\r\n    [resetField]\r\n  );\r\n\r\n  const handleSelectService = useCallback(\r\n    (index, option) => {\r\n      setValue(\r\n        `items[${index}].price`,\r\n        INVOICE_SERVICE_OPTIONS.find((service) => service.name === option)?.price\r\n      );\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const handleChangeQuantity = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].quantity`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const handleChangePrice = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].price`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const renderTotal = (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems=\"flex-end\"\r\n      sx={{ mt: 3, textAlign: 'right', typography: 'body2' }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Subtotal</Box>\r\n        <Box sx={{ width: 160, typography: 'subtitle2' }}>{fCurrency(subTotal) || '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Shipping</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(values.shipping && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {values.shipping ? `- ${fCurrency(values.shipping)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Discount</Box>\r\n        <Box\r\n          sx={{\r\n            width: 160,\r\n            ...(values.discount && { color: 'error.main' }),\r\n          }}\r\n        >\r\n          {values.discount ? `- ${fCurrency(values.discount)}` : '-'}\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Taxes</Box>\r\n        <Box sx={{ width: 160 }}>{values.taxes ? fCurrency(values.taxes) : '-'}</Box>\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\" sx={{ typography: 'subtitle1' }}>\r\n        <Box>Total</Box>\r\n        <Box sx={{ width: 160 }}>{fCurrency(totalAmount) || '-'}</Box>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\r\n        Details:\r\n      </Typography>\r\n\r\n      <Stack divider={<Divider flexItem sx={{ borderStyle: 'dashed' }} />} spacing={3}>\r\n        {fields.map((item, index) => (\r\n          <Stack key={item.id} alignItems=\"flex-end\" spacing={1.5}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ width: 1 }}>\r\n              <RHFTextField\r\n                size=\"small\"\r\n                name={`items[${index}].title`}\r\n                label=\"Title\"\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                name={`items[${index}].description`}\r\n                label=\"Description\"\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n\r\n              <RHFSelect\r\n                name={`items[${index}].service`}\r\n                size=\"small\"\r\n                label=\"Service\"\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  maxWidth: { md: 160 },\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  value=\"\"\r\n                  onClick={() => handleClearService(index)}\r\n                  sx={{ fontStyle: 'italic', color: 'text.secondary' }}\r\n                >\r\n                  None\r\n                </MenuItem>\r\n\r\n                <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n                {INVOICE_SERVICE_OPTIONS.map((service) => (\r\n                  <MenuItem\r\n                    key={service.id}\r\n                    value={service.name}\r\n                    onClick={() => handleSelectService(index, service.name)}\r\n                  >\r\n                    {service.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].quantity`}\r\n                label=\"Quantity\"\r\n                placeholder=\"0\"\r\n                onChange={(event) => handleChangeQuantity(event, index)}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].price`}\r\n                label=\"Price\"\r\n                placeholder=\"0.00\"\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>$</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                disabled\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].total`}\r\n                label=\"Total\"\r\n                placeholder=\"0.00\"\r\n                value={values.items[index].total === 0 ? '' : values.items[index].total.toFixed(2)}\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>$</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  maxWidth: { md: 104 },\r\n                  [`& .${inputBaseClasses.input}`]: {\r\n                    textAlign: { md: 'right' },\r\n                  },\r\n                }}\r\n              />\r\n            </Stack>\r\n\r\n            <Button\r\n              size=\"small\"\r\n              color=\"error\"\r\n              startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n              onClick={() => handleRemove(index)}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 3, borderStyle: 'dashed' }} />\r\n\r\n      <Stack\r\n        spacing={3}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n      >\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n          onClick={handleAdd}\r\n          sx={{ flexShrink: 0 }}\r\n        >\r\n          Add Item\r\n        </Button>\r\n\r\n        <Stack\r\n          spacing={2}\r\n          justifyContent=\"flex-end\"\r\n          direction={{ xs: 'column', md: 'row' }}\r\n          sx={{ width: 1 }}\r\n        >\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Shipping($)\"\r\n            name=\"shipping\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Discount($)\"\r\n            name=\"discount\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n\r\n          <RHFTextField\r\n            size=\"small\"\r\n            label=\"Taxes(%)\"\r\n            name=\"taxes\"\r\n            type=\"number\"\r\n            sx={{ maxWidth: { md: 120 } }}\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {renderTotal}\r\n    </Box>\r\n  );\r\n}\r\n","import { useFormContext } from 'react-hook-form';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport { AddressListDialog } from '../address';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditAddress() {\r\n  const {\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const upMd = useResponsive('up', 'md');\r\n\r\n  const values = watch();\r\n\r\n  const { invoiceFrom, invoiceTo } = values;\r\n\r\n  const from = useBoolean();\r\n\r\n  const to = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={{ xs: 3, md: 5 }}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        divider={\r\n          <Divider\r\n            flexItem\r\n            orientation={upMd ? 'vertical' : 'horizontal'}\r\n            sx={{ borderStyle: 'dashed' }}\r\n          />\r\n        }\r\n        sx={{ p: 3 }}\r\n      >\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              From:\r\n            </Typography>\r\n\r\n            <IconButton onClick={from.onTrue}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\">{invoiceFrom.name}</Typography>\r\n            <Typography variant=\"body2\">{invoiceFrom.fullAddress}</Typography>\r\n            <Typography variant=\"body2\"> {invoiceFrom.phoneNumber}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              To:\r\n            </Typography>\r\n\r\n            <IconButton onClick={to.onTrue}>\r\n              <Iconify icon={invoiceTo ? 'solar:pen-bold' : 'mingcute:add-line'} />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {invoiceTo ? (\r\n            <Stack spacing={1}>\r\n              <Typography variant=\"subtitle2\">{invoiceTo.name}</Typography>\r\n              <Typography variant=\"body2\">{invoiceTo.fullAddress}</Typography>\r\n              <Typography variant=\"body2\"> {invoiceTo.phoneNumber}</Typography>\r\n            </Stack>\r\n          ) : (\r\n            <Typography typography=\"caption\" sx={{ color: 'error.main' }}>\r\n              {errors.invoiceTo?.message}\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={from.value}\r\n        onClose={from.onFalse}\r\n        selected={(selectedId) => invoiceFrom?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceFrom', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={to.value}\r\n        onClose={to.onFalse}\r\n        selected={(selectedId) => invoiceTo?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceTo', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// components\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditStatusDate() {\r\n  const { control, watch } = useFormContext();\r\n\r\n  const values = watch();\r\n\r\n  return (\r\n    <Stack\r\n      spacing={2}\r\n      direction={{ xs: 'column', sm: 'row' }}\r\n      sx={{ p: 3, bgcolor: 'background.neutral' }}\r\n    >\r\n      <RHFTextField\r\n        disabled\r\n        name=\"invoiceNumber\"\r\n        label=\"Invoice number\"\r\n        value={values.invoiceNumber}\r\n      />\r\n\r\n      <RHFSelect\r\n        fullWidth\r\n        name=\"status\"\r\n        label=\"Status\"\r\n        InputLabelProps={{ shrink: true }}\r\n        PaperPropsSx={{ textTransform: 'capitalize' }}\r\n      >\r\n        {['paid', 'pending', 'overdue', 'draft'].map((option) => (\r\n          <MenuItem key={option} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </RHFSelect>\r\n\r\n      <Controller\r\n        name=\"createDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"Date create\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        name=\"dueDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"Due date\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport FormProvider from 'src/components/hook-form';\r\n//\r\nimport InvoiceNewEditDetails from './invoice-new-edit-details';\r\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\r\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditForm({ currentInvoice }) {\r\n  const router = useRouter();\r\n\r\n  const loadingSave = useBoolean();\r\n\r\n  const loadingSend = useBoolean();\r\n\r\n  const NewInvoiceSchema = Yup.object().shape({\r\n    invoiceTo: Yup.mixed().nullable().required('Invoice to is required'),\r\n    createDate: Yup.mixed().nullable().required('Create date is required'),\r\n    dueDate: Yup.mixed()\r\n      .required('Due date is required')\r\n      .test(\r\n        'date-min',\r\n        'Due date must be later than create date',\r\n        (value, { parent }) => value.getTime() > parent.createDate.getTime()\r\n      ),\r\n    // not required\r\n    taxes: Yup.number(),\r\n    status: Yup.string(),\r\n    discount: Yup.number(),\r\n    shipping: Yup.number(),\r\n    invoiceFrom: Yup.mixed(),\r\n    totalAmount: Yup.number(),\r\n    invoiceNumber: Yup.string(),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      invoiceNumber: currentInvoice?.invoiceNumber || 'INV-1990',\r\n      createDate: currentInvoice?.createDate || new Date(),\r\n      dueDate: currentInvoice?.dueDate || null,\r\n      taxes: currentInvoice?.taxes || 0,\r\n      shipping: currentInvoice?.shipping || 0,\r\n      status: currentInvoice?.status || 'draft',\r\n      discount: currentInvoice?.discount || 0,\r\n      invoiceFrom: currentInvoice?.invoiceFrom || _addressBooks[0],\r\n      invoiceTo: currentInvoice?.invoiceTo || null,\r\n      items: currentInvoice?.items || [\r\n        {\r\n          title: '',\r\n          description: '',\r\n          service: '',\r\n          quantity: 1,\r\n          price: 0,\r\n          total: 0,\r\n        },\r\n      ],\r\n      totalAmount: currentInvoice?.totalAmount || 0,\r\n    }),\r\n    [currentInvoice]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewInvoiceSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const handleSaveAsDraft = handleSubmit(async (data) => {\r\n    loadingSave.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSave.onFalse();\r\n      router.push(paths.dashboard.invoice.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSave.onFalse();\r\n    }\r\n  });\r\n\r\n  const handleCreateAndSend = handleSubmit(async (data) => {\r\n    loadingSend.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSend.onFalse();\r\n      router.push(paths.dashboard.invoice.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSend.onFalse();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormProvider methods={methods}>\r\n      <Card>\r\n        <InvoiceNewEditAddress />\r\n\r\n        <InvoiceNewEditStatusDate />\r\n\r\n        <InvoiceNewEditDetails />\r\n      </Card>\r\n\r\n      <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n        <LoadingButton\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          loading={loadingSave.value && isSubmitting}\r\n          onClick={handleSaveAsDraft}\r\n        >\r\n          Save as Draft\r\n        </LoadingButton>\r\n\r\n        <LoadingButton\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          loading={loadingSend.value && isSubmitting}\r\n          onClick={handleCreateAndSend}\r\n        >\r\n          {currentInvoice ? 'Update' : 'Create'} & Send\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nInvoiceNewEditForm.propTypes = {\r\n  currentInvoice: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _invoices } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from '../invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppoinmentEditView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  const currentInvoice = _invoices.find((invoice) => invoice.id === id);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Edit\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          { name: currentInvoice?.invoiceNumber },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm currentInvoice={currentInvoice} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nAppoinmentEditView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from '../invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppointmentCreateView() {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Create a new invoice\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.invoice.root,\r\n          },\r\n          {\r\n            name: 'New Invoice',\r\n          },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm />\r\n    </Container>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\nimport { Page, View, Text, Image, Document, Font, StyleSheet } from '@react-pdf/renderer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFont.register({\r\n  family: 'Roboto',\r\n  fonts: [{ src: '/fonts/Roboto-Regular.ttf' }, { src: '/fonts/Roboto-Bold.ttf' }],\r\n});\r\n\r\nconst useStyles = () =>\r\n  useMemo(\r\n    () =>\r\n      StyleSheet.create({\r\n        col4: { width: '25%' },\r\n        col8: { width: '75%' },\r\n        col6: { width: '50%' },\r\n        mb4: { marginBottom: 4 },\r\n        mb8: { marginBottom: 8 },\r\n        mb40: { marginBottom: 40 },\r\n        h3: { fontSize: 16, fontWeight: 700 },\r\n        h4: { fontSize: 13, fontWeight: 700 },\r\n        body1: { fontSize: 10 },\r\n        body2: { fontSize: 9 },\r\n        subtitle1: { fontSize: 10, fontWeight: 700 },\r\n        subtitle2: { fontSize: 9, fontWeight: 700 },\r\n        alignRight: { textAlign: 'right' },\r\n        page: {\r\n          fontSize: 9,\r\n          lineHeight: 1.6,\r\n          fontFamily: 'Roboto',\r\n          backgroundColor: '#FFFFFF',\r\n          textTransform: 'capitalize',\r\n          padding: '40px 24px 120px 24px',\r\n        },\r\n        footer: {\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          padding: 24,\r\n          margin: 'auto',\r\n          borderTopWidth: 1,\r\n          borderStyle: 'solid',\r\n          position: 'absolute',\r\n          borderColor: '#DFE3E8',\r\n        },\r\n        gridContainer: {\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n        },\r\n        table: {\r\n          display: 'flex',\r\n          width: 'auto',\r\n        },\r\n        tableRow: {\r\n          padding: '8px 0',\r\n          flexDirection: 'row',\r\n          borderBottomWidth: 1,\r\n          borderStyle: 'solid',\r\n          borderColor: '#DFE3E8',\r\n        },\r\n        noBorder: {\r\n          paddingTop: 8,\r\n          paddingBottom: 0,\r\n          borderBottomWidth: 0,\r\n        },\r\n        tableCell_1: {\r\n          width: '5%',\r\n        },\r\n        tableCell_2: {\r\n          width: '50%',\r\n          paddingRight: 16,\r\n        },\r\n        tableCell_3: {\r\n          width: '15%',\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoicePDF({ invoice, currentStatus }) {\r\n  const {\r\n    items,\r\n    taxes,\r\n    dueDate,\r\n    discount,\r\n    shipping,\r\n    invoiceTo,\r\n    createDate,\r\n    totalAmount,\r\n    invoiceFrom,\r\n    invoiceNumber,\r\n    subTotal,\r\n  } = invoice;\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <Image source=\"/logo/logo_single.png\" style={{ width: 48, height: 48 }} />\r\n\r\n          <View style={{ alignItems: 'flex-end', flexDirection: 'column' }}>\r\n            <Text style={styles.h3}>{currentStatus}</Text>\r\n            <Text> {invoiceNumber} </Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice from</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.name}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceFrom.phoneNumber}</Text>\r\n          </View>\r\n\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Invoice to</Text>\r\n            <Text style={styles.body2}>{invoiceTo.name}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.fullAddress}</Text>\r\n            <Text style={styles.body2}>{invoiceTo.phoneNumber}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.mb40]}>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Date create</Text>\r\n            <Text style={styles.body2}>{fDate(createDate)}</Text>\r\n          </View>\r\n          <View style={styles.col6}>\r\n            <Text style={[styles.subtitle2, styles.mb4]}>Due date</Text>\r\n            <Text style={styles.body2}>{fDate(dueDate)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={[styles.subtitle1, styles.mb8]}>Invoice Details</Text>\r\n\r\n        <View style={styles.table}>\r\n          <View>\r\n            <View style={styles.tableRow}>\r\n              <View style={styles.tableCell_1}>\r\n                <Text style={styles.subtitle2}>#</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_2}>\r\n                <Text style={styles.subtitle2}>Description</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Qty</Text>\r\n              </View>\r\n\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.subtitle2}>Unit price</Text>\r\n              </View>\r\n\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.subtitle2}>Total</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View>\r\n            {items.map((item, index) => (\r\n              <View style={styles.tableRow} key={item.id}>\r\n                <View style={styles.tableCell_1}>\r\n                  <Text>{index + 1}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_2}>\r\n                  <Text style={styles.subtitle2}>{item.title}</Text>\r\n                  <Text>{item.description}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.quantity}</Text>\r\n                </View>\r\n\r\n                <View style={styles.tableCell_3}>\r\n                  <Text>{item.price}</Text>\r\n                </View>\r\n\r\n                <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                  <Text>{fCurrency(item.price * item.quantity)}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Subtotal</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(subTotal)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Shipping</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-shipping)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Discount</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(-discount)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text>Taxes</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text>{fCurrency(taxes)}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.tableRow, styles.noBorder]}>\r\n              <View style={styles.tableCell_1} />\r\n              <View style={styles.tableCell_2} />\r\n              <View style={styles.tableCell_3} />\r\n              <View style={styles.tableCell_3}>\r\n                <Text style={styles.h4}>Total</Text>\r\n              </View>\r\n              <View style={[styles.tableCell_3, styles.alignRight]}>\r\n                <Text style={styles.h4}>{fCurrency(totalAmount)}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.gridContainer, styles.footer]} fixed>\r\n          <View style={styles.col8}>\r\n            <Text style={styles.subtitle2}>NOTES</Text>\r\n            <Text>\r\n              We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n            </Text>\r\n          </View>\r\n          <View style={[styles.col4, styles.alignRight]}>\r\n            <Text style={styles.subtitle2}>Have a Question?</Text>\r\n            <Text>support@abcapp.com</Text>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n}\r\n\r\nInvoicePDF.propTypes = {\r\n  currentStatus: PropTypes.string,\r\n  invoice: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport InvoiceToolbar from './invoice-toolbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    textAlign: 'right',\r\n    borderBottom: 'none',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceDetails({ invoice }) {\r\n  const [currentStatus, setCurrentStatus] = useState(invoice.status);\r\n\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  const renderTotal = (\r\n    <>\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          Subtotal\r\n        </TableCell>\r\n        <TableCell width={120} sx={{ typography: 'subtitle2' }}>\r\n          <Box sx={{ mt: 2 }} />\r\n          {fCurrency(invoice.subTotal)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Shipping</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.shipping)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Discount</TableCell>\r\n        <TableCell width={120} sx={{ color: 'error.main', typography: 'body2' }}>\r\n          {fCurrency(-invoice.discount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ color: 'text.secondary' }}>Taxes</TableCell>\r\n        <TableCell width={120}>{fCurrency(invoice.taxes)}</TableCell>\r\n      </StyledTableRow>\r\n\r\n      <StyledTableRow>\r\n        <TableCell colSpan={3} />\r\n        <TableCell sx={{ typography: 'subtitle1' }}>Total</TableCell>\r\n        <TableCell width={140} sx={{ typography: 'subtitle1' }}>\r\n          {fCurrency(invoice.totalAmount)}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n    </>\r\n  );\r\n\r\n  const renderFooter = (\r\n    <Grid container>\r\n      <Grid xs={12} md={9} sx={{ py: 3 }}>\r\n        <Typography variant=\"subtitle2\">NOTES</Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          We appreciate your business. Should you need us to add VAT or extra notes let us know!\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\r\n        <Typography variant=\"subtitle2\">Have a Question?</Typography>\r\n\r\n        <Typography variant=\"body2\">support@minimals.cc</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const renderList = (\r\n    <TableContainer sx={{ overflow: 'unset', mt: 5 }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 960 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={40}>#</TableCell>\r\n\r\n              <TableCell sx={{ typography: 'subtitle2' }}>Description</TableCell>\r\n\r\n              <TableCell>Qty</TableCell>\r\n\r\n              <TableCell align=\"right\">Unit price</TableCell>\r\n\r\n              <TableCell align=\"right\">Total</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {invoice.items.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n\r\n                <TableCell>\r\n                  <Box sx={{ maxWidth: 560 }}>\r\n                    <Typography variant=\"subtitle2\">{row.title}</Typography>\r\n\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n                      {row.description}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n\r\n                <TableCell>{row.quantity}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price)}</TableCell>\r\n\r\n                <TableCell align=\"right\">{fCurrency(row.price * row.quantity)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {renderTotal}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <InvoiceToolbar\r\n        invoice={invoice}\r\n        currentStatus={currentStatus || ''}\r\n        onChangeStatus={handleChangeStatus}\r\n        statusOptions={INVOICE_STATUS_OPTIONS}\r\n      />\r\n\r\n      <Card sx={{ pt: 5, px: 5 }}>\r\n        <Box\r\n          rowGap={5}\r\n          display=\"grid\"\r\n          alignItems=\"center\"\r\n          gridTemplateColumns={{\r\n            xs: 'repeat(1, 1fr)',\r\n            sm: 'repeat(2, 1fr)',\r\n          }}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"logo\"\r\n            src=\"/logo/logo_single.svg\"\r\n            sx={{ width: 48, height: 48 }}\r\n          />\r\n\r\n          <Stack spacing={1} alignItems={{ xs: 'flex-start', md: 'flex-end' }}>\r\n            <Label\r\n              variant=\"soft\"\r\n              color={\r\n                (currentStatus === 'paid' && 'success') ||\r\n                (currentStatus === 'pending' && 'warning') ||\r\n                (currentStatus === 'overdue' && 'error') ||\r\n                'default'\r\n              }\r\n            >\r\n              {currentStatus}\r\n            </Label>\r\n\r\n            <Typography variant=\"h6\">{invoice.invoiceNumber}</Typography>\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice From\r\n            </Typography>\r\n            {invoice.invoiceFrom.name}\r\n            <br />\r\n            {invoice.invoiceFrom.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceFrom.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Invoice To\r\n            </Typography>\r\n            {invoice.invoiceTo.name}\r\n            <br />\r\n            {invoice.invoiceTo.fullAddress}\r\n            <br />\r\n            Phone: {invoice.invoiceTo.phoneNumber}\r\n            <br />\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Date Create\r\n            </Typography>\r\n            {fDate(invoice.createDate)}\r\n          </Stack>\r\n\r\n          <Stack sx={{ typography: 'body2' }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n              Due Date\r\n            </Typography>\r\n            {fDate(invoice.dueDate)}\r\n          </Stack>\r\n        </Box>\r\n\r\n        {renderList}\r\n\r\n        <Divider sx={{ mt: 5, borderStyle: 'dashed' }} />\r\n\r\n        {renderFooter}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceDetails.propTypes = {\r\n  invoice: PropTypes.object,\r\n};\r\n"],"names":["InvoiceNewEditDetails","_useFormContext","useFormContext","control","setValue","watch","resetField","_useFieldArray","useFieldArray","name","fields","append","remove","values","totalOnRow","items","map","item","quantity","price","subTotal","sum","totalAmount","discount","shipping","taxes","useEffect","handleClearService","useCallback","index","concat","handleSelectService","option","_INVOICE_SERVICE_OPTI","INVOICE_SERVICE_OPTIONS","find","service","handleChangeQuantity","event","Number","target","value","handleChangePrice","renderTotal","_jsxs","Stack","spacing","alignItems","sx","mt","textAlign","typography","children","direction","_jsx","Box","color","width","fCurrency","_objectSpread","p","Typography","variant","mb","divider","Divider","flexItem","borderStyle","xs","md","RHFTextField","size","label","InputLabelProps","shrink","RHFSelect","maxWidth","MenuItem","onClick","fontStyle","id","type","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","disabled","total","toFixed","_defineProperty","inputBaseClasses","input","Button","startIcon","Iconify","icon","handleRemove","my","title","description","flexShrink","justifyContent","InvoiceNewEditAddress","_errors$invoiceTo","errors","formState","upMd","useResponsive","invoiceFrom","invoiceTo","from","useBoolean","to","_Fragment","orientation","flexGrow","IconButton","onTrue","fullAddress","phoneNumber","message","AddressListDialog","open","onClose","onFalse","selected","selectedId","onSelect","address","list","_addressBooks","action","alignSelf","InvoiceNewEditStatusDate","sm","bgcolor","invoiceNumber","fullWidth","PaperPropsSx","textTransform","Controller","render","_ref","field","error","fieldState","DatePicker","newValue","slotProps","textField","helperText","_ref2","InvoiceNewEditForm","currentInvoice","router","useRouter","loadingSave","loadingSend","NewInvoiceSchema","Yup","shape","nullable","required","createDate","dueDate","test","parent","getTime","status","defaultValues","useMemo","Date","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","handleSaveAsDraft","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","Promise","resolve","setTimeout","push","paths","dashboard","invoice","root","console","info","JSON","stringify","t0","stop","_x","apply","arguments","handleCreateAndSend","_ref4","_callee2","_context2","_x2","FormProvider","Card","LoadingButton","loading","AppoinmentEditView","settings","useSettingsContext","_invoices","Container","themeStretch","CustomBreadcrumbs","heading","links","href","AppointmentCreateView","Font","register","family","fonts","src","styled","TableRow","theme","borderBottom","paddingTop","paddingBottom"],"sourceRoot":""}