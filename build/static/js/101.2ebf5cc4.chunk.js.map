{"version":3,"file":"static/js/101.2ebf5cc4.chunk.js","mappings":"yOAQe,SAASA,EAAYC,GAA6B,IAA1BC,EAAMD,EAANC,OAAMC,EAAAF,EAAEG,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEE,EAAEJ,EAAFI,GAClDC,EAAeJ,EAAOK,MAAM,EAAGH,GAE/BI,EAAiBN,EAAOO,OAASL,EAEvC,OACEM,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAU,OAAOC,UAAU,MAAMC,WAAW,SAASC,eAAe,WAAWV,GAAIA,EAAGW,SAAA,CAC1FV,EAAaW,KAAI,SAACC,EAAOC,GAAK,OAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAEFhB,GAAI,CACFiB,IAAK,IACLC,MAAO,GACPC,OAAQ,GACRC,QAASP,EACTQ,aAAc,MACdC,OAAQ,SAACC,GAAK,mBAAAC,OAAkBD,EAAME,QAAQC,WAAWC,MAAK,EAC9DC,UAAW,SAACL,GAAK,4BAAAC,QAA2BK,EAAAA,EAAAA,IAAMN,EAAME,QAAQK,OAAOC,MAAO,KAAK,IARhFlB,EAAQC,EAUb,IAGHjB,EAAOO,OAASL,IACfgB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACT,UAAU,OAAOP,GAAI,CAAEgC,WAAY,aAAcrB,SAAA,IAAAa,OAAMrB,OAIpE,C,0HC2EA,GAnGoB8B,EAAAA,EAAAA,aAClB,SAAArC,EAAoEsC,GAAS,IAA1ErC,EAAMD,EAANC,OAAQsC,EAAQvC,EAARuC,SAAUC,EAAaxC,EAAbwC,cAAatC,EAAAF,EAAEG,MAAAA,OAAK,IAAAD,EAAG,OAAMA,EAAEE,EAAEJ,EAAFI,GAAOqC,GAAKC,EAAAA,EAAAA,GAAA1C,EAAA2C,GACxDC,EAAmC,kBAAbL,EAEtBM,GAAeC,EAAAA,EAAAA,cACnB,SAAC7B,GACC,GAAI2B,EACE3B,IAAUsB,GACZC,EAAcvB,OAEX,CACL,IAAM8B,EAAcR,EAASS,SAAS/B,GAClCsB,EAASU,QAAO,SAACC,GAAK,OAAKA,IAAUjC,CAAK,IAAC,GAAAW,QAAAuB,EAAAA,EAAAA,GACvCZ,GAAQ,CAAEtB,IAElBuB,EAAcO,EAChB,CACF,GACA,CAACP,EAAeD,EAAUK,IAG5B,OACEzB,EAAAA,EAAAA,KAACT,EAAAA,GAAK0C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJd,IAAKA,EACL1B,UAAU,MACVyC,QAAQ,cACRjD,IAAEgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACAE,SAAU,QACI,SAAVnD,GAAoB,CACtBmB,MAAe,GAARnB,EACPW,eAAgB,aAEfV,IAEDqC,GAAK,IAAA1B,SAERd,EAAOe,KAAI,SAACC,GACX,IAAMsC,EAAcX,EAAeL,IAAatB,EAAQsB,EAASS,SAAS/B,GAE1E,OACEE,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAETpD,GAAI,CACFkB,MAAO,GACPC,OAAQ,GACRE,aAAc,OAEhBgC,QAAS,WACPZ,EAAa5B,EACf,EAAEF,UAEFI,EAAAA,EAAAA,KAACT,EAAAA,EAAK,CACJG,WAAW,SACXC,eAAe,SACfV,IAAEgD,EAAAA,EAAAA,GAAA,CACA9B,MAAO,GACPC,OAAQ,GACRC,QAASP,EACTQ,aAAc,MACdC,OAAQ,SAACC,GAAK,mBAAAC,QAAkBK,EAAAA,EAAAA,IAAMN,EAAME,QAAQ6B,KAAK,KAAM,KAAK,GAChEH,GAAe,CACjBI,UAAW,aACX3B,UAAU,iBAADJ,QAAmBK,EAAAA,EAAAA,IAAMhB,EAAO,MACzC2C,QAAQ,aAADhC,QAAeK,EAAAA,EAAAA,IAAMhB,EAAO,MACnC4C,WAAY,SAAClC,GAAK,OAChBA,EAAMmC,YAAYC,OAAO,MAAO,CAC9BC,SAAUrC,EAAMmC,YAAYE,SAASC,UACrC,IAENlD,UAEFI,EAAAA,EAAAA,KAAC+C,EAAAA,EAAO,CACN5C,MAAOiC,EAAc,GAAK,EAC1BY,KAAK,qBACL/D,GAAI,CACFa,MAAO,SAACU,GAAK,OAAKA,EAAME,QAAQuC,gBAAgBnD,EAAM,EACtD4C,WAAY,SAAClC,GAAK,OAChBA,EAAMmC,YAAYC,OAAO,MAAO,CAC9BC,SAAUrC,EAAMmC,YAAYE,SAASC,UACrC,QAtCLhD,EA4CX,MAGN,G,wJC7FK,SAASoD,EAAeC,EAAWC,GACxC,IAAMC,GAAiB,IAAIC,MAAOC,cAE5BC,EAAgBL,GAAYM,EAAAA,EAAAA,GAAQN,GAAa,KAEjDO,EAAcN,GAAUK,EAAAA,EAAAA,GAAQL,GAAW,KAE3CO,EAAcN,IAAmBG,GAAiBH,IAAmBK,EAErEE,KAAUT,IAAaC,KAAUS,EAAAA,EAAAA,GAAU,IAAIP,KAAKH,GAAY,IAAIG,KAAKF,IAEzEU,KACJX,IAAaC,KAAUW,EAAAA,EAAAA,GAAY,IAAIT,KAAKH,GAAY,IAAIG,KAAKF,IAEnE,OAAIO,EACEG,EACEF,GACKI,EAAAA,EAAAA,IAAMZ,EAAS,aAElB,GAAN3C,QAAUuD,EAAAA,EAAAA,IAAMb,EAAW,MAAK,OAAA1C,QAAMuD,EAAAA,EAAAA,IAAMZ,EAAS,cAEjD,GAAN3C,QAAUuD,EAAAA,EAAAA,IAAMb,EAAW,UAAS,OAAA1C,QAAMuD,EAAAA,EAAAA,IAAMZ,EAAS,cAGrD,GAAN3C,QAAUuD,EAAAA,EAAAA,IAAMb,EAAW,aAAY,OAAA1C,QAAMuD,EAAAA,EAAAA,IAAMZ,EAAS,aAC9D,C,0BCvBe,SAASa,EAAmBC,EAAOC,GAChD,IAAAC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,GAA8BL,EAAAA,EAAAA,UAASF,GAAIQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCtB,EAAOuB,EAAA,GAAEC,EAAUD,EAAA,GAE1BE,GAAkCR,EAAAA,EAAAA,UAASH,GAAMY,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA1C1B,EAAS2B,EAAA,GAAEC,EAAYD,EAAA,GAExBE,KAAQd,IAASC,IAAM,IAAIb,KAAKY,GAAOe,UAAY,IAAI3B,KAAKa,GAAKc,UAEjEC,GAASvD,EAAAA,EAAAA,cAAY,WACzB8C,GAAQ,EACV,GAAG,IAEGU,GAAUxD,EAAAA,EAAAA,cAAY,WAC1B8C,GAAQ,EACV,GAAG,IAqBH,MAAO,CACLtB,UAAAA,EACAC,QAAAA,EACAgC,mBAtBwBzD,EAAAA,EAAAA,cAAY,SAAC0D,GACrCN,EAAaM,EACf,GAAG,IAqBDC,iBAnBsB3D,EAAAA,EAAAA,cACtB,SAAC0D,GACKL,GACFJ,EAAW,MAEbA,EAAWS,EACb,GACA,CAACL,IAcDR,KAAAA,EACAU,OAAAA,EACAC,QAAAA,EACAI,SAdc5D,EAAAA,EAAAA,cAAY,WAC1BoD,EAAa,MACbH,EAAW,KACb,GAAG,IAaDxD,WAAY+B,KAAeC,EAC3B4B,MAAAA,EAEAQ,MAAM,GAAD/E,QAAKuD,EAAAA,EAAAA,IAAMb,GAAU,OAAA1C,QAAMuD,EAAAA,EAAAA,IAAMZ,IACtCqC,WAAYvC,EAAeC,EAAWC,GAEtC2B,aAAAA,EACAH,WAAAA,EAEJ,C,gJC/Ce,SAASc,EAAqB7G,GAczC,IAAD8G,EAAA9G,EAbD+G,MAAAA,OAAK,IAAAD,EAAG,oBAAmBA,EAAAE,EAAAhH,EAC3BiH,QAAAA,OAAO,IAAAD,EAAG,QAAOA,EAEjB1C,EAAStE,EAATsE,UACAC,EAAOvE,EAAPuE,QAEAgC,EAAiBvG,EAAjBuG,kBACAE,EAAezG,EAAfyG,gBAEAd,EAAI3F,EAAJ2F,KACAW,EAAOtG,EAAPsG,QAEAH,EAAKnG,EAALmG,MAEMe,GAAOC,EAAAA,EAAAA,GAAc,KAAM,MAE3BC,EAA6B,aAAZH,EAEvB,OACExG,EAAAA,EAAAA,MAAC4G,EAAAA,EAAM,CACLC,WAAS,EACTC,UAAUH,GAAyB,KACnCzB,KAAMA,EACNW,QAASA,EACTkB,WAAY,CACVpH,IAAEgD,EAAAA,EAAAA,GAAA,GACIgE,GAAkB,CACpBG,SAAU,OAGdxG,SAAA,EAEFI,EAAAA,EAAAA,KAACsG,EAAAA,EAAW,CAACrH,GAAI,CAAEsH,GAAI,GAAI3G,SAAEgG,KAE7BtG,EAAAA,EAAAA,MAACkH,EAAAA,EAAa,CACZvH,IAAEgD,EAAAA,EAAAA,GAAA,GACIgE,GACFF,GAAQ,CACNU,SAAU,UAEd7G,SAAA,EAEFI,EAAAA,EAAAA,KAACT,EAAAA,EAAK,CACJI,eAAe,SACf+G,QAAST,EAAiB,EAAI,EAC9BxG,UAAWwG,GAAkBF,EAAO,MAAQ,SAC5C9G,GAAI,CAAE0H,GAAI,GAAI/G,SAEbqG,GACC3G,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAhH,SAAA,EACEI,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CACJf,QAAQ,WACR7G,GAAI,CACFqB,aAAc,EACdwG,YAAa,UACbC,YAAa,UACbnH,UAEFI,EAAAA,EAAAA,KAACgH,EAAAA,EAAY,CAACjF,MAAOoB,EAAW8D,SAAU7B,OAG5CpF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CACJf,QAAQ,WACR7G,GAAI,CACFqB,aAAc,EACdwG,YAAa,UACbC,YAAa,UACbnH,UAEFI,EAAAA,EAAAA,KAACgH,EAAAA,EAAY,CAACjF,MAAOqB,EAAS6D,SAAU3B,UAI5ChG,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAhH,SAAA,EACEI,EAAAA,EAAAA,KAACkH,EAAAA,EAAU,CAAC1B,MAAM,aAAazD,MAAOoB,EAAW8D,SAAU7B,KAE3DpF,EAAAA,EAAAA,KAACkH,EAAAA,EAAU,CAAC1B,MAAM,WAAWzD,MAAOqB,EAAS6D,SAAU3B,SAK5DN,IACChF,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAACnC,OAAK,EAAC/F,GAAI,CAAEmI,GAAI,GAAIxH,SAAC,+CAMzCN,EAAAA,EAAAA,MAAC+H,EAAAA,EAAa,CAAAzH,SAAA,EACZI,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACxB,QAAQ,WAAWhG,MAAM,UAAUwC,QAAS6C,EAAQvF,SAAC,YAI7DI,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACC,SAAUvC,EAAOc,QAAQ,YAAYxD,QAAS6C,EAAQvF,SAAC,eAMvE,C,uXC9GM4H,EAAMC,EAAAA,GAAUC,SAEhBC,EAAU,CACdC,mBAAmB,EACnBC,mBAAmB,EACnBC,uBAAuB,GA0BlB,SAAeC,EAAWC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAwBjC,SAAAF,IAFC,OAEDA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAxBO,SAAAC,EAA2BC,GAAS,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QAUzCC,EAAAA,EAAAA,IACErB,GACA,SAACsB,GACC,IAAMC,EAAM,GAAAtI,QAAAuB,EAAAA,EAAAA,GAAO8G,EAAYC,QAAM,CAAEP,IAEvC,OAAAvG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6G,GAAW,IACdC,OAAAA,GAEJ,IACA,GACA,wBAAAL,EAAAM,OAAA,GAAAT,EAAA,MACHL,MAAA,KAAAC,UAAA,CAIM,SAAec,EAAWC,GAAA,OAAAC,EAAAjB,MAAC,KAADC,UAAA,CA0BjC,SAAAgB,IAFC,OAEDA,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MA1BO,SAAAc,EAA2BZ,GAAS,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,QAUzCC,EAAAA,EAAAA,IACErB,GACA,SAACsB,GACC,IAAMC,EAASD,EAAYC,OAAOlJ,KAAI,SAACyJ,GAAK,OAC1CA,EAAMC,KAAOf,EAAUe,IAAEtH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqH,GAAUd,GAAcc,CAAK,IAGhE,OAAArH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6G,GAAW,IACdC,OAAAA,GAEJ,IACA,GACA,wBAAAM,EAAAL,OAAA,GAAAI,EAAA,MACHlB,MAAA,KAAAC,UAAA,CAIM,SAAeqB,EAAWC,GAAA,OAAAC,EAAAxB,MAAC,KAADC,UAAA,CAsBhC,SAAAuB,IAAA,OAAAA,GAAAtB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAtBM,SAAAqB,EAA2BC,GAAO,OAAAvB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,QAUvCC,EAAAA,EAAAA,IACErB,GACA,SAACsB,GACC,IAAMC,EAASD,EAAYC,OAAOjH,QAAO,SAACwH,GAAK,OAAKA,EAAMC,KAAOK,CAAO,IAExE,OAAA3H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6G,GAAW,IACdC,OAAAA,GAEJ,IACA,GACA,wBAAAc,EAAAb,OAAA,GAAAW,EAAA,MACHzB,MAAA,KAAAC,UAAA,C,4EC9GY2B,GAAiBC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,SAAAlL,GAAA,IAAG2B,EAAK3B,EAAL2B,MAAK,MAAQ,CAC1DL,MAAO,mBACP6J,YAAa,EACbC,cAAe,EAEf,QAAS,CACP,qBAAqBnJ,EAAAA,EAAAA,IAAMN,EAAME,QAAQ6B,KAAK,KAAM,KACpD,2BAA4B/B,EAAME,QAAQsE,MAAMkF,KAChD,uBAAuBpJ,EAAAA,EAAAA,IAAMN,EAAME,QAAQ6B,KAAK,KAAM,KACtD,qBAAsB/B,EAAME,QAAQC,WAAWwJ,QAC/C,wBAAyB3J,EAAME,QAAQC,WAAWyJ,QAClD,iCAAkC5J,EAAME,QAAQ2J,OAAOC,MACvD,uBAAwB9J,EAAME,QAAQ2J,OAAOC,OAG/C,4BAA6B,CAAEpI,QAAS,QACxC,UAAW,CAAEpC,MAAOU,EAAME,QAAQ6J,KAAKC,SAGvC,wBAAyB,CACvB3J,UAAU,kBAADJ,OAAoBD,EAAME,QAAQ+J,SAC3C,OAAQ,CAAE3D,YAAa,eACvB,iCAA+B7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1BzB,EAAMS,WAAWyJ,WAAS,IAC7BC,QAAS,YAKb,wBAAsB1I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBzB,EAAMS,WAAW2J,IAAE,IACtBC,gBAAiB,cACjB/K,MAAOU,EAAME,QAAQ6J,KAAKO,YAI5B,kBAAmB,CACjBhE,YAAa,yBACb+D,gBAAiB,0BAEnB,iCAAkC,CAChCF,QAAS,UACTrK,aAAc,EACduK,gBAAiBrK,EAAME,QAAQK,OAAOgK,MACtC,WAAY,CACVC,IAAK,EACLC,KAAM,EACN9K,MAAO,OACP+K,QAAS,KACTC,QAAS,IACT/K,OAAQ,OACRE,aAAc,EACd8K,SAAU,WACVP,gBAAiB,eACjBnI,WAAYlC,EAAMmC,YAAYC,OAAO,CAAC,YACtC,UAAW,CACT,WAAY,CACVuI,QAAS,QAKjB,uCAAwC,CACtCE,SAAU,GACVC,WAAY,OACZxJ,OAAQ,oBAEV,0CAA2C,CACzC2E,SAAU,SACV8E,WAAY,SACZC,aAAc,YAEhB,iCAAkC,CAChC/E,SAAU,QACVgF,WAAYjL,EAAMS,WAAWyK,gBAI/B,oBAAqB,CACnBnL,OAAQ,EACRkG,SAAU,SACV5F,UAAWL,EAAMmL,cAAcC,SAC/BtL,aAAyC,IAA3BE,EAAMqL,MAAMvL,aAC1BuK,gBAAiBrK,EAAME,QAAQC,WAAWC,OAE5C,4BAA0BqB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrBzB,EAAMS,WAAWyJ,WAAS,IAC7BC,QAASnK,EAAMkG,QAAQ,GACvBmE,iBAAiB/J,EAAAA,EAAAA,IAAMN,EAAME,QAAQ6B,KAAK,KAAM,OAElD,0BAA2B,CACzB4I,QAAS,IACTzI,WAAYlC,EAAMmC,YAAYC,OAAO,CAAC,YACtC,UAAW,CAAEuI,QAAS,IAExB,0CAA2C,CACzCR,QAASnK,EAAMkG,QAAQ,IAEzB,yBAA0B,CACxB,uEAAwE,CACtEoF,OAAQ,UAKZ,0CAA2C,CACzCX,QAAS,EACT,2BAA4B,CAC1BrL,MAAOU,EAAME,QAAQ6J,KAAKhD,WAG9B,gCAA8BtF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBzB,EAAMS,WAAW8K,OAAK,IACzBpB,QAASnK,EAAMkG,QAAQ,EAAG,EAAG,KAE/B,0BAA2B,CACzBsF,UAAW,GAEb,+EAAgF,CAC9EhC,WAAY,EACZiC,YAAa,GAEf,+BAA6BhK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACxBzB,EAAMS,WAAWiL,SAAO,IAC3BpM,MAAOU,EAAME,QAAQ6J,KAAKO,UAC1B,UAAW,CACTD,gBAAiB,QACjBsB,eAAgB,YAChBrM,MAAOU,EAAME,QAAQ6J,KAAKC,QAC1BiB,WAAYjL,EAAMS,WAAWmL,oBAKjC,mCAAiCnK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC5BzB,EAAMS,WAAW8K,OAAK,IACzBjM,MAAOU,EAAME,QAAQ6J,KAAKO,YAE5B,yCAAuC7I,EAAAA,EAAAA,GAAA,GAClCzB,EAAMS,WAAW8K,OAItB,kKAAgK9J,EAAAA,EAAAA,GAAA,GAEzJzB,EAAMS,WAAWyJ,WAExB,wBAAsBzI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBzB,EAAMS,WAAW8K,OAAK,IACzB,wBAAyB,CACvBjM,MAAOU,EAAME,QAAQ6J,KAAKO,aAG9B,uBAAwB,CACtB,WAAY,CACVhE,YAAa,gBAGlB,I,+JCvIc,SAASuF,GAAYxN,GAA2C,IAAxCyN,EAAYzN,EAAZyN,aAAcC,EAAY1N,EAAZ0N,aAAcpH,EAAOtG,EAAPsG,QACzDqH,GAAoBC,EAAAA,GAAAA,MAApBD,gBAEFE,EAAcC,EAAAA,KAAad,MAAM,CACrCjG,MAAO+G,EAAAA,KAAaC,IAAI,KAAKC,SAAS,qBACtCC,YAAaH,EAAAA,KAAaC,IAAI,IAAM,+CAEpC9M,MAAO6M,EAAAA,KACPI,OAAQJ,EAAAA,KACRzI,MAAOyI,EAAAA,KACPxI,IAAKwI,EAAAA,OAGDK,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYT,GACtBU,cAAed,IAIfe,EAKEL,EALFK,MACAC,EAIEN,EAJFM,MACAC,EAGEP,EAHFO,QACAC,EAEER,EAFFQ,aACaC,EACXT,EADFU,UAAaD,aAGTE,EAASL,IAETM,KAAYD,EAAOzJ,QAASyJ,EAAOxJ,MAAMwJ,EAAOzJ,MAAQyJ,EAAOxJ,IAE/D0J,EAAWL,EAAY,eAAAM,GAAA1F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOwF,GAAI,IAAAvF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAStC,GARKJ,EAAY,CAChBe,GAAgB,OAAZ+C,QAAY,IAAZA,GAAAA,EAAc/C,GAAiB,OAAZ+C,QAAY,IAAZA,OAAY,EAAZA,EAAc/C,IAAKyE,EAAAA,GAAAA,KAC1ClO,MAAW,OAAJiO,QAAI,IAAJA,OAAI,EAAJA,EAAMjO,MACb8F,MAAW,OAAJmI,QAAI,IAAJA,OAAI,EAAJA,EAAMnI,MACbmH,OAAY,OAAJgB,QAAI,IAAJA,OAAI,EAAJA,EAAMhB,OACdD,YAAiB,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMjB,YACnB3I,IAAS,OAAJ4J,QAAI,IAAJA,OAAI,EAAJA,EAAM5J,IACXD,MAAW,OAAJ6J,QAAI,IAAJA,OAAI,EAAJA,EAAM7J,OACdwE,EAAAC,KAAA,EAGMiF,EAAU,CAADlF,EAAAE,KAAA,YACI,OAAZ0D,QAAY,IAAZA,IAAAA,EAAc/C,GAAE,CAAAb,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACZK,EAAYT,GAAW,KAAD,EAC5BgE,EAAgB,mBAAmB9D,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAE7Bb,EAAYS,GAAW,KAAD,GAC5BgE,EAAgB,mBAAmB,QAErCrH,IACAkI,IAAQ,QAAA3E,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuF,GAAAvF,EAAA,SAGVwF,QAAQlJ,MAAK0D,EAAAuF,IAAQ,yBAAAvF,EAAAM,OAAA,GAAAT,EAAA,mBAExB,gBAAAP,GAAA,OAAA8F,EAAA5F,MAAA,KAAAC,UAAE,CAAF,CA1B4B,IA4BvBgG,GAAWxM,EAAAA,EAAAA,cAAWyG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAc,IAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAV,KAAA,EAAAU,EAAAT,KAAA,EAEnBY,EAAY,GAAD/I,OAAgB,OAAZ6L,QAAY,IAAZA,OAAY,EAAZA,EAAc/C,KAAM,KAAD,EACxCiD,EAAgB,mBAChBrH,IAAUkE,EAAAT,KAAA,gBAAAS,EAAAV,KAAA,EAAAU,EAAA4E,GAAA5E,EAAA,SAEV6E,QAAQlJ,MAAKqE,EAAA4E,IAAQ,yBAAA5E,EAAAL,OAAA,GAAAI,EAAA,kBAEtB,CAAa,OAAZkD,QAAY,IAAZA,OAAY,EAAZA,EAAc/C,GAAIiD,EAAiBrH,IAEvC,OACE7F,EAAAA,GAAAA,MAAC8O,GAAAA,GAAY,CAACpB,QAASA,EAASa,SAAUA,EAASjO,SAAA,EACjDN,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACmH,QAAS,EAAGzH,GAAI,CAAEmI,GAAI,GAAIxH,SAAA,EAC/BI,EAAAA,GAAAA,KAACqO,GAAAA,GAAY,CAACC,KAAK,QAAQ9I,MAAM,WAEjCxF,EAAAA,GAAAA,KAACqO,GAAAA,GAAY,CAACC,KAAK,cAAc9I,MAAM,cAAc+I,WAAS,EAACC,KAAM,KAErExO,EAAAA,GAAAA,KAACyO,GAAAA,GAAS,CAACH,KAAK,SAAS9I,MAAM,aAE/BxF,EAAAA,GAAAA,KAAC0O,EAAAA,GAAU,CACTJ,KAAK,QACLf,QAASA,EACToB,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OACd7O,EAAAA,GAAAA,KAAC8O,EAAAA,GAAoB7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf4M,GAAK,IACT9M,MAAO,IAAIuB,KAAKuL,EAAM9M,OACtBkF,SAAU,SAAC5B,GACLA,GACFwJ,EAAM5H,UAAS8H,EAAAA,EAAAA,IAAW1J,GAE9B,EACAG,MAAM,aACNwJ,OAAO,qBACPC,UAAW,CACTC,UAAW,CACT/I,WAAW,MAGf,KAINnG,EAAAA,GAAAA,KAAC0O,EAAAA,GAAU,CACTJ,KAAK,MACLf,QAASA,EACToB,OAAQ,SAAAQ,GAAA,IAAGN,EAAKM,EAALN,MAAK,OACd7O,EAAAA,GAAAA,KAAC8O,EAAAA,GAAoB7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf4M,GAAK,IACT9M,MAAO,IAAIuB,KAAKuL,EAAM9M,OACtBkF,SAAU,SAAC5B,GACLA,GACFwJ,EAAM5H,UAAS8H,EAAAA,EAAAA,IAAW1J,GAE9B,EACAG,MAAM,WACNwJ,OAAO,qBACPC,UAAW,CACTC,UAAW,CACT/I,WAAW,EACXnB,MAAO4I,EACPwB,WAAYxB,GAAa,6CAG7B,KAIN5N,EAAAA,GAAAA,KAAC0O,EAAAA,GAAU,CACTJ,KAAK,QACLf,QAASA,EACToB,OAAQ,SAAAU,GAAA,IAAGR,EAAKQ,EAALR,MAAK,OACd7O,EAAAA,GAAAA,KAACsP,GAAAA,EAAW,CACVlO,SAAUyN,EAAM9M,MAChBV,cAAe,SAACvB,GAAK,OAAK+O,EAAM5H,SAASnH,EAAM,EAC/ChB,OAAQyN,GACR,QAKRjN,EAAAA,GAAAA,MAAC+H,GAAAA,EAAa,CAAAzH,SAAA,GACG,OAAZ0M,QAAY,IAAZA,IAAAA,EAAc/C,MACfvJ,EAAAA,GAAAA,KAACuP,EAAAA,EAAO,CAAC3J,MAAM,eAAchG,UAC3BI,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAAS6L,EAASvO,UAC5BI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,oCAKpBhD,EAAAA,GAAAA,KAACC,EAAAA,EAAG,CAAChB,GAAI,CAAEwQ,SAAU,MAErBzP,EAAAA,GAAAA,KAACsH,EAAAA,EAAM,CAACxB,QAAQ,WAAWhG,MAAM,UAAUwC,QAAS6C,EAAQvF,SAAC,YAI7DI,EAAAA,GAAAA,KAAC0P,EAAAA,EAAa,CACZC,KAAK,SACL7J,QAAQ,YACR8J,QAASnC,EACTlG,SAAUqG,EAAUhO,SACrB,sBAMT,C,wCC7KMiQ,GAAe,CACnB,CACE9N,MAAO,eACPyD,MAAO,QACPxC,KAAM,gCAER,CAAEjB,MAAO,eAAgByD,MAAO,OAAQxC,KAAM,+BAC9C,CAAEjB,MAAO,cAAeyD,MAAO,MAAOxC,KAAM,8BAC5C,CACEjB,MAAO,WACPyD,MAAO,SACPxC,KAAM,sCAMK,SAAS8M,GAAejR,GASnC,IARFkR,EAAIlR,EAAJkR,KACAC,EAAInR,EAAJmR,KACAJ,EAAO/Q,EAAP+Q,QACAK,EAAOpR,EAAPoR,QACAC,EAAUrR,EAAVqR,WACAC,EAAUtR,EAAVsR,WACAC,EAAYvR,EAAZuR,aACAC,EAAaxR,EAAbwR,cAEMC,GAAOtK,EAAAA,EAAAA,GAAc,KAAM,MAE3BuK,GAAUC,EAAAA,GAAAA,KAEVC,EAAeZ,GAAa/N,QAAO,SAAC4O,GAAI,OAAKA,EAAK3O,QAAUiO,CAAI,IAAE,GAExE,OACE1Q,EAAAA,GAAAA,MAAAsH,GAAAA,SAAA,CAAAhH,SAAA,EACEN,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CACJE,UAAU,MACVC,WAAW,SACXC,eAAe,gBACfV,GAAI,CAAE0R,EAAG,IAAKC,GAAI,EAAGxF,SAAU,YAAaxL,SAAA,CAE3C0Q,IACCtQ,EAAAA,GAAAA,KAACsH,EAAAA,EAAM,CACLuJ,KAAK,QACL/Q,MAAM,UACNwC,QAASiO,EAAQrL,OACjB4L,WAAW9Q,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAMyN,EAAazN,OACvC+N,SAAS/Q,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,8BAA8B/D,GAAI,CAAEiB,IAAK,MAAUN,SAEzE6Q,EAAajL,SAIlBlG,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACE,UAAU,MAAMC,WAAW,SAASgH,QAAS,EAAE9G,SAAA,EACpDI,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAAS6N,EAAWvQ,UAC9BI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,+BAGhBhD,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,KAAIlG,UAAEoE,EAAAA,EAAAA,IAAM+L,MAEhC/P,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAAS4N,EAAWtQ,UAC9BI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,qCAIlB1D,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACE,UAAU,MAAMC,WAAW,SAASgH,QAAS,EAAE9G,SAAA,EACpDI,EAAAA,GAAAA,KAACsH,EAAAA,EAAM,CAACuJ,KAAK,QAAQ/Q,MAAM,QAAQgG,QAAQ,YAAYxD,QAAS2N,EAAQrQ,SAAC,WAIzEI,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAAS+N,EAAczQ,UACjCI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,8BAIjB4M,IACC5P,EAAAA,GAAAA,KAACiR,GAAAA,EAAc,CACbnR,MAAM,UACNb,GAAI,CACFmB,OAAQ,EACRD,MAAO,EACPiL,SAAU,WACV8F,OAAQ,EACRjG,KAAM,SAMdjL,EAAAA,GAAAA,KAACmR,GAAAA,EAAa,CACZ3M,KAAM+L,EAAQ/L,KACdW,QAASoL,EAAQpL,QACjBiM,MAAM,WACNnS,GAAI,CAAEkB,MAAO,KAAMP,SAElBiQ,GAAahQ,KAAI,SAACwR,GAAU,OAC3B/R,EAAAA,GAAAA,MAACgS,GAAAA,EAAQ,CAEPlQ,SAAUiQ,EAAWtP,QAAUiO,EAC/B1N,QAAS,WACPiO,EAAQpL,UACRiL,EAAaiB,EAAWtP,MAC1B,EAAEnC,SAAA,EAEFI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAMqO,EAAWrO,OACzBqO,EAAW7L,QARP6L,EAAWtP,MASP,QAKrB,C,+GCzGe,SAASwP,GAAe1S,GAenC,IAdF2F,EAAI3F,EAAJ2F,KACAW,EAAOtG,EAAPsG,QAEAqM,EAAO3S,EAAP2S,QACAC,EAAS5S,EAAT4S,UAEAC,EAAQ7S,EAAR6S,SACAC,EAAc9S,EAAd8S,eAEA/D,EAAS/O,EAAT+O,UAEA7E,EAAMlK,EAANkK,OACAwD,EAAY1N,EAAZ0N,aACAqF,EAAY/S,EAAZ+S,aAEMC,GAAqBlQ,EAAAA,EAAAA,cACzB,SAAC0D,GACCoM,EAAU,SAAUpM,EACtB,GACA,CAACoM,IAGGK,GAAwBnQ,EAAAA,EAAAA,cAC5B,SAAC0D,GACCoM,EAAU,YAAapM,EACzB,GACA,CAACoM,IAGGM,GAAsBpQ,EAAAA,EAAAA,cAC1B,SAAC0D,GACCoM,EAAU,UAAWpM,EACvB,GACA,CAACoM,IAGGO,GACJ1S,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CACJE,UAAU,MACVC,WAAW,SACXC,eAAe,gBACfV,GAAI,CAAEgT,GAAI,EAAGrB,GAAI,EAAGsB,GAAI,KAAMtS,SAAA,EAE9BI,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,KAAK7G,GAAI,CAAEwQ,SAAU,GAAI7P,SAAC,aAI9CI,EAAAA,GAAAA,KAACuP,EAAAA,EAAO,CAAC3J,MAAM,QAAOhG,UACpBI,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAASqP,EAAe/R,UAClCI,EAAAA,GAAAA,KAACmS,GAAAA,EAAK,CAACrS,MAAM,QAAQgG,QAAQ,MAAMsM,WAAYV,EAAS9R,UACtDI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,8BAKpBhD,EAAAA,GAAAA,KAACwP,EAAAA,EAAU,CAAClN,QAAS6C,EAAQvF,UAC3BI,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,6BAKd9D,GACJI,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACmH,QAAS,EAAGzH,GAAI,CAAEoT,GAAI,EAAGjL,GAAI,KAAMxH,SAAA,EACxCI,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,YAAWlG,SAAC,YAChCI,EAAAA,GAAAA,KAACsP,GAAAA,EAAW,CACVxQ,OAAQyN,EACRnL,SAAUoQ,EAAQ1S,OAClBuC,cAAewQ,OAKfS,GACJhT,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACmH,QAAS,IAAKzH,GAAI,CAAEsT,GAAI,EAAGnL,GAAI,KAAMxH,SAAA,EAC1CI,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,YAAWlG,SAAC,WAEhCN,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACmH,QAAS,EAAE9G,SAAA,EAChBI,EAAAA,GAAAA,KAACkH,GAAAA,EAAU,CAAC1B,MAAM,aAAazD,MAAOyP,EAAQrO,UAAW8D,SAAU6K,KAEnE9R,EAAAA,GAAAA,KAACkH,GAAAA,EAAU,CACT1B,MAAM,WACNzD,MAAOyP,EAAQpO,QACf6D,SAAU8K,EACV9C,UAAW,CACTC,UAAW,CACTlK,MAAO4I,EACPwB,WAAYxB,GAAa,mDAQ/B4E,GACJlT,EAAAA,GAAAA,MAAAsH,GAAAA,SAAA,CAAAhH,SAAA,EACEN,EAAAA,GAAAA,MAAC0R,EAAAA,EAAU,CAAClL,QAAQ,YAAY7G,GAAI,CAAEmI,GAAI,IAAKmL,GAAI,GAAI3S,SAAA,CAAC,WAC7CmJ,EAAO1J,OAAO,QAGzBW,EAAAA,GAAAA,KAACyS,GAAAA,EAAS,CAACxT,GAAI,CAAEmB,OAAQ,GAAIR,SAC1B8S,KAAQ3J,EAAQ,CAAC,OAAQ,CAAC,SAASlJ,KAAI,SAACyJ,GAAK,OAC5ChK,EAAAA,GAAAA,MAACqT,GAAAA,EAAc,CAEbrQ,QAAS,kBAAMsP,EAAa,GAADnR,OAAI6I,EAAMC,IAAK,EAC1CtK,GAAI,CACFgT,GAAI,IACJW,aAAc,SAACpS,GAAK,oBAAAC,OAAmBD,EAAME,QAAQ+J,QAAO,GAC5D7K,SAAA,EAEFI,EAAAA,GAAAA,KAACC,EAAAA,EAAG,CACFhB,GAAI,CACF+L,IAAK,GACLC,KAAM,EACN9K,MAAO,EACPC,OAAQ,EACRgL,SAAU,WACVyH,YAAa,yBACbC,UAAU,cAADrS,OAAgB6I,EAAMxJ,WAInCE,EAAAA,GAAAA,KAAC+S,GAAAA,EAAY,CACXC,mBAAiB,EACjBxI,SACExK,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,YAAY7G,GAAI,CAAEoM,SAAU,GAAI4H,GAAI,IAAMrT,SAC3D0J,EAAM1D,QAGXkF,WACE9K,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CACTlL,QAAQ,UACRtG,UAAU,MACVP,GAAI,CAAEoM,SAAU,GAAIvL,MAAO,iBAAkBF,SAE5C0J,EAAMyD,QACLmG,EAAAA,EAAAA,IAAU5J,EAAMpF,MAAO,cAEvBlE,EAAAA,GAAAA,KAAA4G,GAAAA,SAAA,CAAAhH,SAAA,GAAAa,QACMyS,EAAAA,EAAAA,IAAU5J,EAAMpF,MAAO,eAAc,OAAAzD,QAAMyS,EAAAA,EAAAA,IAC7C5J,EAAMnF,IACN,oBAMVlF,GAAI,CAAEiD,QAAS,OAAQiR,cAAe,sBA5CnC7J,EAAMC,GA8CI,SAMzB,OACEjK,EAAAA,GAAAA,MAAC8T,GAAAA,GAAM,CACLC,OAAO,QACP7O,KAAMA,EACNW,QAASA,EACT8J,UAAW,CACTqE,SAAU,CAAElB,WAAW,IAEzB/L,WAAY,CACVpH,GAAI,CAAEkB,MAAO,MACbP,SAAA,CAEDoS,GAEDhS,EAAAA,GAAAA,KAACuT,GAAAA,EAAO,CAACtU,GAAI,CAAE8H,YAAa,YAE3B7H,EAEAoT,EAEAE,IAGP,C,kJC7Le,SAASgB,GAAqB3U,GASzC,IARF2S,EAAO3S,EAAP2S,QACAC,EAAS5S,EAAT4S,UAEAC,EAAQ7S,EAAR6S,SACAC,EAAc9S,EAAd8S,eAEA8B,EAAO5U,EAAP4U,QACGnS,GAAKC,EAAAA,GAAAA,GAAA1C,EAAA2C,IAEFiE,GAAavC,EAAAA,GAAAA,IAAesO,EAAQrO,UAAWqO,EAAQpO,SAY7D,OACE9D,EAAAA,GAAAA,MAACC,EAAAA,GAAK0C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACyE,QAAS,KAASpF,GAAK,IAAA1B,SAAA,EAC5BN,EAAAA,GAAAA,MAACW,EAAAA,EAAG,CAAChB,GAAI,CAAEgC,WAAY,SAAUrB,SAAA,EAC/BI,EAAAA,GAAAA,KAAA,UAAAJ,SAAS6T,KACTzT,EAAAA,GAAAA,KAACC,EAAAA,EAAG,CAACT,UAAU,OAAOP,GAAI,CAAEa,MAAO,iBAAkBI,GAAI,KAAON,SAAC,sBAKnEN,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CAACkQ,SAAU,EAAG/I,QAAS,EAAGjH,UAAU,MAAM0C,SAAS,OAAOzC,WAAW,SAAQE,SAAA,GAC9E4R,EAAQ1S,OAAOO,SAChBW,EAAAA,GAAAA,KAAC0T,GAAK,CAAClO,MAAM,UAAS5F,SACnB4R,EAAQ1S,OAAOe,KAAI,SAAC6Q,GAAI,OACvB1Q,EAAAA,GAAAA,KAAC2T,GAAAA,EAAI,CAEH9C,KAAK,QACLrL,OACExF,EAAAA,GAAAA,KAACC,EAAAA,EAAG,CACFhB,GAAI,CACFiB,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,QAASqQ,EACTpQ,aAAc,MACdC,OAAQ,SAACC,GAAK,mBAAAC,QAAkBK,EAAAA,EAAAA,IAAMN,EAAME,QAAQK,OAAOgK,MAAO,KAAK,KAI7EoD,SAAU,kBAtCE,SAACyF,GACzB,IAAMvO,EAAWmM,EAAQ1S,OAAOgD,QAAO,SAAC4O,GAAI,OAAKA,IAASkD,CAAU,IACpEnC,EAAU,SAAUpM,EACtB,CAmC8BwO,CAAkBnD,EAAK,GAdlCA,EAeL,MAKPc,EAAQrO,WAAaqO,EAAQpO,UAC5BpD,EAAAA,GAAAA,KAAC0T,GAAK,CAAClO,MAAM,QAAO5F,UAClBI,EAAAA,GAAAA,KAAC2T,GAAAA,EAAI,CAAC9C,KAAK,QAAQrL,MAAOC,EAAY0I,SAzCvB,WACvBsD,EAAU,YAAa,MACvBA,EAAU,UAAW,KACvB,MA0COC,IACC1R,EAAAA,GAAAA,KAACsH,EAAAA,EAAM,CACLxH,MAAM,QACNwC,QAASqP,EACTb,WAAW9Q,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,+BAAgCpD,SAC1D,gBAOX,CAYA,SAAS8T,GAAK5F,GAAqC,IAAlCtI,EAAKsI,EAALtI,MAAO5F,EAAQkO,EAARlO,SAAUX,EAAE6O,EAAF7O,GAAOqC,GAAKC,EAAAA,GAAAA,GAAAuM,EAAAgG,IAC5C,OACExU,EAAAA,GAAAA,MAACC,EAAAA,GAAK0C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJzC,UAAWqH,GAAAA,EACXf,QAAQ,WACRY,QAAS,EACTjH,UAAU,MACVR,IAAEgD,EAAAA,EAAAA,GAAA,CACA0O,EAAG,EACHrQ,aAAc,EACdmG,SAAU,SACVM,YAAa,UACV9H,IAEDqC,GAAK,IAAA1B,SAAA,EAETI,EAAAA,GAAAA,KAACC,EAAAA,EAAG,CAACT,UAAU,OAAOP,GAAI,CAAEgC,WAAY,aAAcrB,SACnD4F,KAGHxF,EAAAA,GAAAA,KAACT,EAAAA,EAAK,CAACmH,QAAS,EAAGjH,UAAU,MAAM0C,SAAS,OAAMvC,SAC/CA,OAIT,CCtFA,IAAMmU,GAAiB,CACrBjV,OAAQ,GACRqE,UAAW,KACXC,QAAS,MAKI,SAAS4Q,KACtB,IAAMxT,GAAQyT,EAAAA,EAAAA,KAERC,GAAWC,EAAAA,EAAAA,MAEX7D,GAAOtK,EAAAA,EAAAA,GAAc,KAAM,MAE3BoO,GAAcC,EAAAA,EAAAA,KAEpBjQ,GAA8BC,EAAAA,EAAAA,UAAS0P,IAAezP,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CoN,EAAOlN,EAAA,GAAEgQ,EAAUhQ,EAAA,GAE1BiQ,EN3CK,WACL,IAAAC,GAAiDC,EAAAA,EAAAA,IAAOjN,EAAKkN,EAAAA,GAAS/M,GAA9DoG,EAAIyG,EAAJzG,KAAM4G,EAASH,EAATG,UAAW3P,EAAKwP,EAALxP,MAAO4P,EAAYJ,EAAZI,aAiBhC,OAfsBC,EAAAA,EAAAA,UAAQ,WAM5B,MAAO,CACL9L,QANiB,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,OAAOlJ,KAAI,SAACyJ,GAAK,OAAArH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjCqH,GAAK,IACRwL,UAAWxL,EAAMxJ,OAAK,MAIJ,GAClBiV,cAAeJ,EACfK,YAAahQ,EACbiQ,iBAAkBL,EAClBM,aAAcP,KAAkB,OAAJ5G,QAAI,IAAJA,GAAAA,EAAMhF,OAAO1J,QAE7C,GAAG,CAAK,OAAJ0O,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,OAAQ/D,EAAO2P,EAAWC,GAGtC,CMwBoCO,GAA1BpM,EAAMwL,EAANxL,OAAQgM,EAAaR,EAAbQ,cAEVnH,KACJ4D,EAAQrO,YAAaqO,EAAQpO,UACzBoO,EAAQrO,UAAU8B,UAAYuM,EAAQpO,QAAQ6B,UAGpDmQ,ECzDa,WACb,IAAMC,GAAcC,EAAAA,EAAAA,QAAO,MAErBC,EAAaF,EAAYG,QAEzBlF,GAAOtK,EAAAA,EAAAA,GAAc,KAAM,MAEjC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAIf,MAAOgB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC2L,EAAIzL,EAAA,GAAEmR,EAAOnR,EAAA,GAEpBI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCgR,EAAQ/Q,EAAA,GAAEgR,EAAWhR,EAAA,GAE5BE,GAA0CR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA/C+Q,EAAa9Q,EAAA,GAAE+Q,EAAgB/Q,EAAA,GAEtCgR,GAA0CzR,EAAAA,EAAAA,UAAS,MAAK0R,GAAAxR,EAAAA,EAAAA,GAAAuR,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAAwB7R,EAAAA,EAAAA,UAASiM,EAAO,eAAiB,YAAW6F,GAAA5R,EAAAA,EAAAA,GAAA2R,EAAA,GAA7DlG,EAAImG,EAAA,GAAEC,EAAOD,EAAA,GAEdE,GAAa1U,EAAAA,EAAAA,cAAY,WAC7BgU,GAAY,EACd,GAAG,IAEGW,GAAc3U,EAAAA,EAAAA,cAAY,WAC9BgU,GAAY,GACZM,EAAiB,MACjBJ,EAAiB,GACnB,GAAG,IAEGU,GAAgB5U,EAAAA,EAAAA,cAAY,WAChC,GAAI4T,EAAY,CACd,IAAMiB,EAAcjB,EAAWkB,SAEzBC,EAAUpG,EAAO,eAAiB,WACxCkG,EAAYG,WAAWD,GACvBN,EAAQM,EACV,CACF,GAAG,CAACnB,EAAYjF,IAEVF,GAAezO,EAAAA,EAAAA,cACnB,SAAC+U,GACKnB,IACkBA,EAAWkB,SAEnBE,WAAWD,GACvBN,EAAQM,GAEZ,GACA,CAACnB,IAGGqB,GAAcjV,EAAAA,EAAAA,cAAY,WAC9B,GAAI4T,EAAY,CACd,IAAMiB,EAAcjB,EAAWkB,SAE/BD,EAAYK,QACZpB,EAAQe,EAAYM,UACtB,CACF,GAAG,CAACvB,IAEEwB,GAAapV,EAAAA,EAAAA,cAAY,WAC7B,GAAI4T,EAAY,CACd,IAAMiB,EAAcjB,EAAWkB,SAE/BD,EAAY7N,OACZ8M,EAAQe,EAAYM,UACtB,CACF,GAAG,CAACvB,IAEEyB,GAAarV,EAAAA,EAAAA,cAAY,WAC7B,GAAI4T,EAAY,CACd,IAAMiB,EAAcjB,EAAWkB,SAE/BD,EAAY5N,OACZ6M,EAAQe,EAAYM,UACtB,CACF,GAAG,CAACvB,IAEE0B,GAAgBtV,EAAAA,EAAAA,cACpB,SAACuV,GACK3B,GACkBA,EAAWkB,SAEnBU,WAEdd,IACAJ,EAAiB,CACf/R,OAAO6K,EAAAA,EAAAA,IAAWmI,EAAIhT,OACtBC,KAAK4K,EAAAA,EAAAA,IAAWmI,EAAI/S,MAExB,GACA,CAACoR,EAAYc,IAGTzE,GAAejQ,EAAAA,EAAAA,cACnB,SAACuV,GACC,IAAQ5N,EAAU4N,EAAV5N,MAER+M,IACAR,EAAiBvM,EAAMC,GACzB,GACA,CAAC8M,IAGGe,GAAgBzV,EAAAA,EAAAA,cAAY,SAACuV,EAAKjO,GACtC,IAAQK,EAAU4N,EAAV5N,MAERL,EAAY,CACVM,GAAID,EAAMC,GACVwD,OAAQzD,EAAMyD,OACd7I,OAAO6K,EAAAA,EAAAA,IAAWzF,EAAMpF,OACxBC,KAAK4K,EAAAA,EAAAA,IAAWzF,EAAMnF,MAE1B,GAAG,IAEGkT,GAAc1V,EAAAA,EAAAA,cAAY,SAACuV,EAAKjO,GACpC,IAAQK,EAAU4N,EAAV5N,MAERL,EAAY,CACVM,GAAID,EAAMC,GACVwD,OAAQzD,EAAMyD,OACd7I,OAAO6K,EAAAA,EAAAA,IAAWzF,EAAMpF,OACxBC,KAAK4K,EAAAA,EAAAA,IAAWzF,EAAMnF,MAE1B,GAAG,IAEGmT,GAAwB3V,EAAAA,EAAAA,cAC5B,SAACiI,GACKA,IACFyM,IACAR,EAAiBjM,GAErB,GACA,CAACyM,IAGH,MAAO,CACLhB,YAAAA,EAEArF,KAAAA,EACAD,KAAAA,EAEAgH,WAAAA,EACAC,WAAAA,EACAJ,YAAAA,EACAS,YAAAA,EACAzF,aAAAA,EACAxB,aAAAA,EACA6G,cAAAA,EACAG,cAAAA,EACAb,cAAAA,EAEAb,SAAAA,EACAW,WAAAA,EACAC,YAAAA,EAEAV,cAAAA,EACAI,cAAAA,EAEAsB,sBAAAA,EAEJ,CD9EMC,GAvBFlC,EAAWD,EAAXC,YAEArF,EAAIoF,EAAJpF,KACAD,EAAIqF,EAAJrF,KAEAgH,EAAU3B,EAAV2B,WACAC,EAAU5B,EAAV4B,WACAJ,EAAWxB,EAAXwB,YACAS,EAAWjC,EAAXiC,YACAjH,EAAYgF,EAAZhF,aACA6G,EAAa7B,EAAb6B,cACArF,EAAYwD,EAAZxD,aACAwF,GAAahC,EAAbgC,cACAb,GAAanB,EAAbmB,cAEAb,GAAQN,EAARM,SACAW,GAAUjB,EAAViB,WACAC,GAAWlB,EAAXkB,YAEAV,GAAaR,EAAbQ,cACAI,GAAaZ,EAAbY,cAEAsB,GAAqBlC,EAArBkC,sBAGIhL,GEpFO,SAAkBvD,EAAQ6M,EAAeI,EAAeN,GACrE,IAAMpJ,EAAevD,EAAOyO,MAAK,SAAClO,GAAK,OAAKA,EAAMC,KAAOqM,CAAa,IAEhExI,GAAgByH,EAAAA,EAAAA,UACpB,iBAAO,CACLtL,GAAI,GACJ3D,MAAO,GACPkH,YAAa,GACbhN,MAAO2X,EAAAA,EAAuB,GAC9B1K,QAAQ,EACR7I,MAAO8R,EAAgBA,EAAc9R,OAAQ,IAAIZ,MAAO2B,UACxDd,IAAK6R,EAAgBA,EAAc7R,KAAM,IAAIb,MAAO2B,UACrD,GACD,CAAC+Q,IAGH,GAAKN,EAIL,OAAIpJ,GAAgB0J,EACX0B,IAAM,CAAC,EAAGtK,EAAed,GAG3Bc,CACT,CF2DuBuK,CAAS5O,EAAQ6M,GAAeI,GAAeN,KAEpEkC,EAAAA,EAAAA,YAAU,WACRrB,IACF,GAAG,CAACA,KAEJ,IAAMsB,IAAgBlW,EAAAA,EAAAA,cAAY,SAAC2M,EAAMvM,GACvCuS,GAAW,SAACwD,GAAS,OAAA7V,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB6V,GAAS,IAAAC,EAAAA,EAAAA,GAAA,GACXzJ,EAAOvM,GAAK,GAEjB,GAAG,IAEGiW,IAAqBrW,EAAAA,EAAAA,cAAY,WACrC2S,EAAWP,GACb,GAAG,IAEGrC,KAAaF,EAAQ1S,OAAOO,UAAamS,EAAQrO,aAAeqO,EAAQpO,QAExE6U,GAsIR,SAAoBpZ,GAAqC,IAAlCqZ,EAASrZ,EAATqZ,UAAW1G,EAAO3S,EAAP2S,QAAS5D,EAAS/O,EAAT+O,UACjC9O,EAA+B0S,EAA/B1S,OAAQqE,EAAuBqO,EAAvBrO,UAAWC,EAAYoO,EAAZpO,QAErB+U,EAAiBD,EAAUrY,KAAI,SAACuY,EAAIrY,GAAK,MAAK,CAACqY,EAAIrY,EAAM,IAE/DmY,EAAYC,EAAetY,KAAI,SAACuY,GAAE,OAAKA,EAAG,EAAE,IAExCtZ,EAAOO,SACT6Y,EAAYA,EAAUpW,QAAO,SAACwH,GAAK,OAAKxK,EAAO+C,SAASyH,EAAMxJ,MAAM,KAGjE8N,GACCzK,GAAaC,IACf8U,EAAYA,EAAUpW,QACpB,SAACwH,GAAK,OACJyF,EAAAA,EAAAA,IAAWzF,EAAMpF,SAAU6K,EAAAA,EAAAA,IAAW5L,KACtC4L,EAAAA,EAAAA,IAAWzF,EAAMnF,OAAQ4K,EAAAA,EAAAA,IAAW3L,EAAQ,KAKpD,OAAO8U,CACT,CA5JuBG,CAAY,CAC/BH,UAAWnP,EACXyI,QAAAA,EACA5D,UAAAA,IAGI0K,IACJtY,EAAAA,GAAAA,KAACwT,GAAqB,CACpBhC,QAASA,EACTC,UAAWoG,GAEXnG,SAAUA,GACVC,eAAgBqG,GAEhBvE,QAASwE,GAAa5Y,OACtBJ,GAAI,CAAEsT,GAAI,CAAEgG,GAAI,EAAGC,GAAI,MAI3B,OACElZ,EAAAA,GAAAA,MAAAsH,GAAAA,SAAA,CAAAhH,SAAA,EACEN,EAAAA,GAAAA,MAACmZ,EAAAA,EAAS,CAACrS,UAAU8N,EAASwE,cAAuB,KAAK9Y,SAAA,EACxDN,EAAAA,GAAAA,MAACC,EAAAA,EAAK,CACJE,UAAU,MACVC,WAAW,SACXC,eAAe,gBACfV,GAAI,CACFsT,GAAI,CAAEgG,GAAI,EAAGC,GAAI,IACjB5Y,SAAA,EAEFI,EAAAA,GAAAA,KAACgR,EAAAA,EAAU,CAAClL,QAAQ,KAAIlG,SAAC,cACzBI,EAAAA,GAAAA,KAACsH,EAAAA,EAAM,CACLxB,QAAQ,YACRgL,WAAW9Q,EAAAA,GAAAA,KAAC+C,EAAAA,EAAO,CAACC,KAAK,sBACzBV,QAAS+T,GAAWzW,SACrB,iBAKF8R,IAAY4G,IAEbtY,EAAAA,GAAAA,KAAC2Y,EAAAA,EAAI,CAAA/Y,UACHN,EAAAA,GAAAA,MAACwK,EAAc,CAAAlK,SAAA,EACbI,EAAAA,GAAAA,KAAC8P,GAAe,CACdC,KAAMA,EACNC,KAAMA,EACNJ,QAASmF,EACT7E,WAAY8G,EACZ7G,WAAY4G,EACZ9G,QAAS2G,EACTxG,aAAcA,EACdC,cAAe+D,EAAYwE,UAG7B5Y,EAAAA,GAAAA,KAAC6Y,EAAAA,EAAQ,CACPC,UAAQ,EACRC,UAAQ,EACRC,WAAS,EACTC,YAAU,EACVC,cAAe,GACfC,wBAAsB,EACtBC,yBAAuB,EACvBjY,IAAKkU,EACLgE,YAAatJ,EACbuJ,YAAatJ,EACbuJ,gBAAiB,EACjBC,aAAa,QACbzQ,OAAQkP,GACRwB,eAAe,EACfC,OAAQzC,EACR0C,WAAY/H,EACZxR,OAAQkQ,EAAO,IAAM,OACrBsJ,UAAW,SAAC1C,GACVG,EAAYH,EAAKjO,EACnB,EACA4Q,YAAa,SAAC3C,GACZE,GAAcF,EAAKjO,EACrB,EACA6Q,QAAS,CACPC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,eAOV7a,EAAAA,GAAAA,MAAC4G,EAAAA,EAAM,CACLC,WAAS,EACTC,SAAS,KACT5B,KAAMkR,GACNvQ,QAASmR,GACT8D,mBAAoB,CAClBC,MAAO7Z,EAAMmC,YAAYE,SAASC,SAClCwX,KAAM9Z,EAAMmC,YAAYE,SAASC,SAAW,IAC5ClD,SAAA,EAEFI,EAAAA,GAAAA,KAACsG,EAAAA,EAAW,CAACrH,GAAI,CAAEsb,UAAW,IAAK3a,SAChC8V,KAAYpW,EAAAA,GAAAA,MAAAsH,GAAAA,SAAA,CAAAhH,SAAA,CAAE,IAAc,OAAZ0M,SAAY,IAAZA,IAAAA,GAAc/C,GAAK,aAAe,kBAGrDvJ,EAAAA,GAAAA,KAACqM,GAAY,CACXC,aAAcA,GACdC,aAAckL,EAAAA,EACdtS,QAASmR,SAIbtW,EAAAA,GAAAA,KAACuR,GAAe,CACd/M,KAAM4P,EAAYrS,MAClBoD,QAASiP,EAAYoG,QAErBhJ,QAASA,EACTC,UAAWoG,GAEXnG,SAAUA,GACVC,eAAgBqG,GAEhBpK,UAAWA,EAEX7E,OAAQA,EACRwD,aAAckL,EAAAA,EACd7F,aAAc0F,OAItB,CG1Oe,SAASmD,KACtB,OACEnb,EAAAA,GAAAA,MAAAsH,GAAAA,SAAA,CAAAhH,SAAA,EACEI,EAAAA,GAAAA,KAAC0a,EAAAA,GAAM,CAAA9a,UACLI,EAAAA,GAAAA,KAAA,SAAAJ,SAAO,4BAGTI,EAAAA,GAAAA,KAACgU,GAAY,MAGnB,C,wBCbe,SAAShG,IACtB,MAAO,uCAAuC2M,QAAQ,SAAS,SAAUC,GACvE,IAAMC,EAAqB,GAAhBC,KAAKC,SAAiB,EAEjC,OADY,MAANH,EAAYC,EAAS,EAAJA,EAAW,GACzBG,SAAS,GACpB,GACF,C","sources":["components/color-utils/color-preview.js","components/color-utils/color-picker.js","components/custom-date-range-picker/utils.js","components/custom-date-range-picker/use-date-range-picker.js","components/custom-date-range-picker/custom-date-range-picker.js","api/calendar.js","sections/calendar/styles.js","sections/calendar/calendar-form.js","sections/calendar/calendar-toolbar.js","sections/calendar/calendar-filters.js","sections/calendar/calendar-filters-result.js","sections/calendar/view/calendar-view.js","sections/calendar/hooks/use-calendar.js","sections/calendar/hooks/use-event.js","pages/dashboard/calendar.js","utils/uuidv4.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ColorPreview({ colors, limit = 3, sx }) {\r\n  const renderColors = colors.slice(0, limit);\r\n\r\n  const remainingColor = colors.length - limit;\r\n\r\n  return (\r\n    <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={sx}>\r\n      {renderColors.map((color, index) => (\r\n        <Box\r\n          key={color + index}\r\n          sx={{\r\n            ml: -0.75,\r\n            width: 16,\r\n            height: 16,\r\n            bgcolor: color,\r\n            borderRadius: '50%',\r\n            border: (theme) => `solid 2px ${theme.palette.background.paper}`,\r\n            boxShadow: (theme) => `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`,\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {colors.length > limit && (\r\n        <Box component=\"span\" sx={{ typography: 'subtitle2' }}>{`+${remainingColor}`}</Box>\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nColorPreview.propTypes = {\r\n  colors: PropTypes.arrayOf(PropTypes.string),\r\n  limit: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef, useCallback } from 'react';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\n//\r\nimport Iconify from '../iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ColorPicker = forwardRef(\r\n  ({ colors, selected, onSelectColor, limit = 'auto', sx, ...other }, ref) => {\r\n    const singleSelect = typeof selected === 'string';\r\n\r\n    const handleSelect = useCallback(\r\n      (color) => {\r\n        if (singleSelect) {\r\n          if (color !== selected) {\r\n            onSelectColor(color);\r\n          }\r\n        } else {\r\n          const newSelected = selected.includes(color)\r\n            ? selected.filter((value) => value !== color)\r\n            : [...selected, color];\r\n\r\n          onSelectColor(newSelected);\r\n        }\r\n      },\r\n      [onSelectColor, selected, singleSelect]\r\n    );\r\n\r\n    return (\r\n      <Stack\r\n        ref={ref}\r\n        direction=\"row\"\r\n        display=\"inline-flex\"\r\n        sx={{\r\n          flexWrap: 'wrap',\r\n          ...(limit !== 'auto' && {\r\n            width: limit * 36,\r\n            justifyContent: 'flex-end',\r\n          }),\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        {colors.map((color) => {\r\n          const hasSelected = singleSelect ? selected === color : selected.includes(color);\r\n\r\n          return (\r\n            <ButtonBase\r\n              key={color}\r\n              sx={{\r\n                width: 36,\r\n                height: 36,\r\n                borderRadius: '50%',\r\n              }}\r\n              onClick={() => {\r\n                handleSelect(color);\r\n              }}\r\n            >\r\n              <Stack\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                sx={{\r\n                  width: 20,\r\n                  height: 20,\r\n                  bgcolor: color,\r\n                  borderRadius: '50%',\r\n                  border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\r\n                  ...(hasSelected && {\r\n                    transform: 'scale(1.3)',\r\n                    boxShadow: `4px 4px 8px 0 ${alpha(color, 0.48)}`,\r\n                    outline: `solid 2px ${alpha(color, 0.08)}`,\r\n                    transition: (theme) =>\r\n                      theme.transitions.create('all', {\r\n                        duration: theme.transitions.duration.shortest,\r\n                      }),\r\n                  }),\r\n                }}\r\n              >\r\n                <Iconify\r\n                  width={hasSelected ? 12 : 0}\r\n                  icon=\"eva:checkmark-fill\"\r\n                  sx={{\r\n                    color: (theme) => theme.palette.getContrastText(color),\r\n                    transition: (theme) =>\r\n                      theme.transitions.create('all', {\r\n                        duration: theme.transitions.duration.shortest,\r\n                      }),\r\n                  }}\r\n                />\r\n              </Stack>\r\n            </ButtonBase>\r\n          );\r\n        })}\r\n      </Stack>\r\n    );\r\n  }\r\n);\r\n\r\nColorPicker.propTypes = {\r\n  colors: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n  limit: PropTypes.number,\r\n  onSelectColor: PropTypes.func,\r\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default ColorPicker;\r\n","import { isSameDay, isSameMonth, getYear } from 'date-fns';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function shortDateLabel(startDate, endDate) {\r\n  const getCurrentYear = new Date().getFullYear();\r\n\r\n  const startDateYear = startDate ? getYear(startDate) : null;\r\n\r\n  const endDateYear = endDate ? getYear(endDate) : null;\r\n\r\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\r\n\r\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  const sameMonth =\r\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  if (currentYear) {\r\n    if (sameMonth) {\r\n      if (sameDay) {\r\n        return fDate(endDate, 'dd MMM yy');\r\n      }\r\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n    }\r\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n  }\r\n\r\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n}\r\n","import { useState, useCallback } from 'react';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n//\r\nimport { shortDateLabel } from './utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useDateRangePicker(start, end) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [endDate, setEndDate] = useState(end);\r\n\r\n  const [startDate, setStartDate] = useState(start);\r\n\r\n  const error = start && end ? new Date(start).getTime() > new Date(end).getTime() : false;\r\n\r\n  const onOpen = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const onClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const onChangeStartDate = useCallback((newValue) => {\r\n    setStartDate(newValue);\r\n  }, []);\r\n\r\n  const onChangeEndDate = useCallback(\r\n    (newValue) => {\r\n      if (error) {\r\n        setEndDate(null);\r\n      }\r\n      setEndDate(newValue);\r\n    },\r\n    [error]\r\n  );\r\n\r\n  const onReset = useCallback(() => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n  }, []);\r\n\r\n  return {\r\n    startDate,\r\n    endDate,\r\n    onChangeStartDate,\r\n    onChangeEndDate,\r\n    //\r\n    open,\r\n    onOpen,\r\n    onClose,\r\n    onReset,\r\n    //\r\n    selected: !!startDate && !!endDate,\r\n    error,\r\n    //\r\n    label: `${fDate(startDate)} - ${fDate(endDate)}`,\r\n    shortLabel: shortDateLabel(startDate, endDate),\r\n    //\r\n    setStartDate,\r\n    setEndDate,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\n// hooks\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomDateRangePicker({\r\n  title = 'Select date range',\r\n  variant = 'input',\r\n  //\r\n  startDate,\r\n  endDate,\r\n  //\r\n  onChangeStartDate,\r\n  onChangeEndDate,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  error,\r\n}) {\r\n  const mdUp = useResponsive('up', 'md');\r\n\r\n  const isCalendarView = variant === 'calendar';\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={isCalendarView ? false : 'xs'}\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{\r\n        sx: {\r\n          ...(isCalendarView && {\r\n            maxWidth: 720,\r\n          }),\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      <DialogContent\r\n        sx={{\r\n          ...(isCalendarView &&\r\n            mdUp && {\r\n              overflow: 'unset',\r\n            }),\r\n        }}\r\n      >\r\n        <Stack\r\n          justifyContent=\"center\"\r\n          spacing={isCalendarView ? 3 : 2}\r\n          direction={isCalendarView && mdUp ? 'row' : 'column'}\r\n          sx={{ pt: 1 }}\r\n        >\r\n          {isCalendarView ? (\r\n            <>\r\n              <Paper\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderRadius: 2,\r\n                  borderColor: 'divider',\r\n                  borderStyle: 'dashed',\r\n                }}\r\n              >\r\n                <DateCalendar value={startDate} onChange={onChangeStartDate} />\r\n              </Paper>\r\n\r\n              <Paper\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderRadius: 2,\r\n                  borderColor: 'divider',\r\n                  borderStyle: 'dashed',\r\n                }}\r\n              >\r\n                <DateCalendar value={endDate} onChange={onChangeEndDate} />\r\n              </Paper>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <DatePicker label=\"Start date\" value={startDate} onChange={onChangeStartDate} />\r\n\r\n              <DatePicker label=\"End date\" value={endDate} onChange={onChangeEndDate} />\r\n            </>\r\n          )}\r\n        </Stack>\r\n\r\n        {error && (\r\n          <FormHelperText error sx={{ px: 2 }}>\r\n            End date must be later than start date\r\n          </FormHelperText>\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button disabled={error} variant=\"contained\" onClick={onClose}>\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nCustomDateRangePicker.propTypes = {\r\n  error: PropTypes.bool,\r\n  onChangeEndDate: PropTypes.func,\r\n  onChangeStartDate: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  variant: PropTypes.oneOf(['input', 'calendar']),\r\n  startDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\r\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\r\n};\r\n","import { useMemo } from 'react';\r\nimport useSWR, { mutate } from 'swr';\r\n// utils\r\nimport { fetcher, endpoints } from 'src/utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst URL = endpoints.calendar;\r\n\r\nconst options = {\r\n  revalidateIfStale: false,\r\n  revalidateOnFocus: false,\r\n  revalidateOnReconnect: false,\r\n};\r\n\r\nexport function useGetEvents() {\r\n  const { data, isLoading, error, isValidating } = useSWR(URL, fetcher, options);\r\n\r\n  const memoizedValue = useMemo(() => {\r\n    const events = data?.events.map((event) => ({\r\n      ...event,\r\n      textColor: event.color,\r\n    }));\r\n\r\n    return {\r\n      events: events || [],\r\n      eventsLoading: isLoading,\r\n      eventsError: error,\r\n      eventsValidating: isValidating,\r\n      eventsEmpty: !isLoading && !data?.events.length,\r\n    };\r\n  }, [data?.events, error, isLoading, isValidating]);\r\n\r\n  return memoizedValue;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function createEvent(eventData) {\r\n  /**\r\n   * Work on server\r\n   */\r\n  // const data = { eventData };\r\n  // await axios.post(URL, data);\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    URL,\r\n    (currentData) => {\r\n      const events = [...currentData.events, eventData];\r\n\r\n      return {\r\n        ...currentData,\r\n        events,\r\n      };\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function updateEvent(eventData) {\r\n  /**\r\n   * Work on server\r\n   */\r\n  // const data = { eventData };\r\n  // await axios.put(endpoints.calendar, data);\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    URL,\r\n    (currentData) => {\r\n      const events = currentData.events.map((event) =>\r\n        event.id === eventData.id ? { ...event, ...eventData } : event\r\n      );\r\n\r\n      return {\r\n        ...currentData,\r\n        events,\r\n      };\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport async function deleteEvent(eventId) {\r\n  /**\r\n   * Work on server\r\n   */\r\n  // const data = { eventId };\r\n  // await axios.patch(endpoints.calendar, data);\r\n\r\n  /**\r\n   * Work in local\r\n   */\r\n  mutate(\r\n    URL,\r\n    (currentData) => {\r\n      const events = currentData.events.filter((event) => event.id !== eventId);\r\n\r\n      return {\r\n        ...currentData,\r\n        events,\r\n      };\r\n    },\r\n    false\r\n  );\r\n}\r\n","import { styled, alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const StyledCalendar = styled('div')(({ theme }) => ({\r\n  width: 'calc(100% + 2px)',\r\n  marginLeft: -1,\r\n  marginBottom: -1,\r\n\r\n  '& .fc': {\r\n    '--fc-border-color': alpha(theme.palette.grey[500], 0.16),\r\n    '--fc-now-indicator-color': theme.palette.error.main,\r\n    '--fc-today-bg-color': alpha(theme.palette.grey[500], 0.08),\r\n    '--fc-page-bg-color': theme.palette.background.default,\r\n    '--fc-neutral-bg-color': theme.palette.background.neutral,\r\n    '--fc-list-event-hover-bg-color': theme.palette.action.hover,\r\n    '--fc-highlight-color': theme.palette.action.hover,\r\n  },\r\n\r\n  '& .fc .fc-license-message': { display: 'none' },\r\n  '& .fc a': { color: theme.palette.text.primary },\r\n\r\n  // Table Head\r\n  '& .fc .fc-col-header ': {\r\n    boxShadow: `inset 0 -1px 0 ${theme.palette.divider}`,\r\n    '& th': { borderColor: 'transparent' },\r\n    '& .fc-col-header-cell-cushion': {\r\n      ...theme.typography.subtitle2,\r\n      padding: '13px 0',\r\n    },\r\n  },\r\n\r\n  // List Empty\r\n  '& .fc .fc-list-empty': {\r\n    ...theme.typography.h6,\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  // Event\r\n  '& .fc .fc-event': {\r\n    borderColor: 'transparent !important',\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  '& .fc .fc-event .fc-event-main': {\r\n    padding: '2px 4px',\r\n    borderRadius: 6,\r\n    backgroundColor: theme.palette.common.white,\r\n    '&:before': {\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      content: \"''\",\r\n      opacity: 0.24,\r\n      height: '100%',\r\n      borderRadius: 6,\r\n      position: 'absolute',\r\n      backgroundColor: 'currentColor',\r\n      transition: theme.transitions.create(['opacity']),\r\n      '&:hover': {\r\n        '&:before': {\r\n          opacity: 0.32,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  '& .fc .fc-event .fc-event-main-frame': {\r\n    fontSize: 13,\r\n    lineHeight: '20px',\r\n    filter: 'brightness(0.48)',\r\n  },\r\n  '& .fc .fc-daygrid-event .fc-event-title': {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  '& .fc .fc-event .fc-event-time': {\r\n    overflow: 'unset',\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n\r\n  // Popover\r\n  '& .fc .fc-popover': {\r\n    border: 0,\r\n    overflow: 'hidden',\r\n    boxShadow: theme.customShadows.dropdown,\r\n    borderRadius: theme.shape.borderRadius * 1.5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  '& .fc .fc-popover-header': {\r\n    ...theme.typography.subtitle2,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: alpha(theme.palette.grey[500], 0.08),\r\n  },\r\n  '& .fc .fc-popover-close': {\r\n    opacity: 0.48,\r\n    transition: theme.transitions.create(['opacity']),\r\n    '&:hover': { opacity: 1 },\r\n  },\r\n  '& .fc .fc-more-popover .fc-popover-body': {\r\n    padding: theme.spacing(1),\r\n  },\r\n  '& .fc .fc-popover-body': {\r\n    '& .fc-daygrid-event.fc-event-start, & .fc-daygrid-event.fc-event-end': {\r\n      margin: '2px 0',\r\n    },\r\n  },\r\n\r\n  // Month View\r\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\r\n    opacity: 1,\r\n    '& .fc-daygrid-day-number': {\r\n      color: theme.palette.text.disabled,\r\n    },\r\n  },\r\n  '& .fc .fc-daygrid-day-number': {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1, 1, 0),\r\n  },\r\n  '& .fc .fc-daygrid-event': {\r\n    marginTop: 4,\r\n  },\r\n  '& .fc .fc-daygrid-event.fc-event-start, & .fc .fc-daygrid-event.fc-event-end': {\r\n    marginLeft: 4,\r\n    marginRight: 4,\r\n  },\r\n  '& .fc .fc-daygrid-more-link': {\r\n    ...theme.typography.caption,\r\n    color: theme.palette.text.secondary,\r\n    '&:hover': {\r\n      backgroundColor: 'unset',\r\n      textDecoration: 'underline',\r\n      color: theme.palette.text.primary,\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n  },\r\n\r\n  // Week & Day View\r\n  '& .fc .fc-timegrid-axis-cushion': {\r\n    ...theme.typography.body2,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  '& .fc .fc-timegrid-slot-label-cushion': {\r\n    ...theme.typography.body2,\r\n  },\r\n\r\n  // Agenda View\r\n  '& .fc-direction-ltr .fc-list-day-text, .fc-direction-rtl .fc-list-day-side-text, .fc-direction-ltr .fc-list-day-side-text, .fc-direction-rtl .fc-list-day-text':\r\n    {\r\n      ...theme.typography.subtitle2,\r\n    },\r\n  '& .fc .fc-list-event': {\r\n    ...theme.typography.body2,\r\n    '& .fc-list-event-time': {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  '& .fc .fc-list-table': {\r\n    '& th, td': {\r\n      borderColor: 'transparent',\r\n    },\r\n  },\r\n}));\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DialogActions from '@mui/material/DialogActions';\r\n// utils\r\nimport uuidv4 from 'src/utils/uuidv4';\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// api\r\nimport { createEvent, updateEvent, deleteEvent } from 'src/api/calendar';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport { ColorPicker } from 'src/components/color-utils';\r\nimport FormProvider, { RHFTextField, RHFSwitch } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarForm({ currentEvent, colorOptions, onClose }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const EventSchema = Yup.object().shape({\r\n    title: Yup.string().max(255).required('Title is required'),\r\n    description: Yup.string().max(5000, 'Description must be at most 5000 characters'),\r\n    // not required\r\n    color: Yup.string(),\r\n    allDay: Yup.boolean(),\r\n    start: Yup.mixed(),\r\n    end: Yup.mixed(),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(EventSchema),\r\n    defaultValues: currentEvent,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const dateError = values.start && values.end ? values.start > values.end : false;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    const eventData = {\r\n      id: currentEvent?.id ? currentEvent?.id : uuidv4(),\r\n      color: data?.color,\r\n      title: data?.title,\r\n      allDay: data?.allDay,\r\n      description: data?.description,\r\n      end: data?.end,\r\n      start: data?.start,\r\n    };\r\n\r\n    try {\r\n      if (!dateError) {\r\n        if (currentEvent?.id) {\r\n          await updateEvent(eventData);\r\n          enqueueSnackbar('Update success!');\r\n        } else {\r\n          await createEvent(eventData);\r\n          enqueueSnackbar('Create success!');\r\n        }\r\n        onClose();\r\n        reset();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  const onDelete = useCallback(async () => {\r\n    try {\r\n      await deleteEvent(`${currentEvent?.id}`);\r\n      enqueueSnackbar('Delete success!');\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [currentEvent?.id, enqueueSnackbar, onClose]);\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      <Stack spacing={3} sx={{ px: 3 }}>\r\n        <RHFTextField name=\"title\" label=\"Title\" />\r\n\r\n        <RHFTextField name=\"description\" label=\"Description\" multiline rows={3} />\r\n\r\n        <RHFSwitch name=\"allDay\" label=\"All day\" />\r\n\r\n        <Controller\r\n          name=\"start\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <MobileDateTimePicker\r\n              {...field}\r\n              value={new Date(field.value)}\r\n              onChange={(newValue) => {\r\n                if (newValue) {\r\n                  field.onChange(fTimestamp(newValue));\r\n                }\r\n              }}\r\n              label=\"Start date\"\r\n              format=\"dd/MM/yyyy hh:mm a\"\r\n              slotProps={{\r\n                textField: {\r\n                  fullWidth: true,\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"end\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <MobileDateTimePicker\r\n              {...field}\r\n              value={new Date(field.value)}\r\n              onChange={(newValue) => {\r\n                if (newValue) {\r\n                  field.onChange(fTimestamp(newValue));\r\n                }\r\n              }}\r\n              label=\"End date\"\r\n              format=\"dd/MM/yyyy hh:mm a\"\r\n              slotProps={{\r\n                textField: {\r\n                  fullWidth: true,\r\n                  error: dateError,\r\n                  helperText: dateError && 'End date must be later than start date',\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"color\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <ColorPicker\r\n              selected={field.value}\r\n              onSelectColor={(color) => field.onChange(color)}\r\n              colors={colorOptions}\r\n            />\r\n          )}\r\n        />\r\n      </Stack>\r\n\r\n      <DialogActions>\r\n        {!!currentEvent?.id && (\r\n          <Tooltip title=\"Delete Event\">\r\n            <IconButton onClick={onDelete}>\r\n              <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n          disabled={dateError}\r\n        >\r\n          Save Changes\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nCalendarForm.propTypes = {\r\n  colorOptions: PropTypes.arrayOf(PropTypes.string),\r\n  currentEvent: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n// hooks\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst VIEW_OPTIONS = [\r\n  {\r\n    value: 'dayGridMonth',\r\n    label: 'Month',\r\n    icon: 'mingcute:calendar-month-line',\r\n  },\r\n  { value: 'timeGridWeek', label: 'Week', icon: 'mingcute:calendar-week-line' },\r\n  { value: 'timeGridDay', label: 'Day', icon: 'mingcute:calendar-day-line' },\r\n  {\r\n    value: 'listWeek',\r\n    label: 'Agenda',\r\n    icon: 'fluent:calendar-agenda-24-regular',\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarToolbar({\r\n  date,\r\n  view,\r\n  loading,\r\n  onToday,\r\n  onNextDate,\r\n  onPrevDate,\r\n  onChangeView,\r\n  onOpenFilters,\r\n}) {\r\n  const smUp = useResponsive('up', 'sm');\r\n\r\n  const popover = usePopover();\r\n\r\n  const selectedItem = VIEW_OPTIONS.filter((item) => item.value === view)[0];\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 2.5, pr: 2, position: 'relative' }}\r\n      >\r\n        {smUp && (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"inherit\"\r\n            onClick={popover.onOpen}\r\n            startIcon={<Iconify icon={selectedItem.icon} />}\r\n            endIcon={<Iconify icon=\"eva:arrow-ios-downward-fill\" sx={{ ml: -0.5 }} />}\r\n          >\r\n            {selectedItem.label}\r\n          </Button>\r\n        )}\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <IconButton onClick={onPrevDate}>\r\n            <Iconify icon=\"eva:arrow-ios-back-fill\" />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\">{fDate(date)}</Typography>\r\n\r\n          <IconButton onClick={onNextDate}>\r\n            <Iconify icon=\"eva:arrow-ios-forward-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <Button size=\"small\" color=\"error\" variant=\"contained\" onClick={onToday}>\r\n            Today\r\n          </Button>\r\n\r\n          <IconButton onClick={onOpenFilters}>\r\n            <Iconify icon=\"ic:round-filter-list\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        {loading && (\r\n          <LinearProgress\r\n            color=\"inherit\"\r\n            sx={{\r\n              height: 2,\r\n              width: 1,\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              left: 0,\r\n            }}\r\n          />\r\n        )}\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"top-left\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        {VIEW_OPTIONS.map((viewOption) => (\r\n          <MenuItem\r\n            key={viewOption.value}\r\n            selected={viewOption.value === view}\r\n            onClick={() => {\r\n              popover.onClose();\r\n              onChangeView(viewOption.value);\r\n            }}\r\n          >\r\n            <Iconify icon={viewOption.icon} />\r\n            {viewOption.label}\r\n          </MenuItem>\r\n        ))}\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nCalendarToolbar.propTypes = {\r\n  date: PropTypes.object,\r\n  loading: PropTypes.bool,\r\n  onChangeView: PropTypes.func,\r\n  onNextDate: PropTypes.func,\r\n  onOpenFilters: PropTypes.func,\r\n  onPrevDate: PropTypes.func,\r\n  onToday: PropTypes.func,\r\n  view: PropTypes.oneOf(['dayGridMonth', 'timeGridWeek', 'timeGridDay', 'listWeek']),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport orderBy from 'lodash/orderBy';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Badge from '@mui/material/Badge';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n// utils\r\nimport { fDateTime } from 'src/utils/format-time';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ColorPicker } from 'src/components/color-utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarFilters({\r\n  open,\r\n  onClose,\r\n  //\r\n  filters,\r\n  onFilters,\r\n  //\r\n  canReset,\r\n  onResetFilters,\r\n  //\r\n  dateError,\r\n  //\r\n  events,\r\n  colorOptions,\r\n  onClickEvent,\r\n}) {\r\n  const handleFilterColors = useCallback(\r\n    (newValue) => {\r\n      onFilters('colors', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterStartDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('startDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterEndDate = useCallback(\r\n    (newValue) => {\r\n      onFilters('endDate', newValue);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const renderHead = (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n      sx={{ py: 2, pr: 1, pl: 2.5 }}\r\n    >\r\n      <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n        Filters\r\n      </Typography>\r\n\r\n      <Tooltip title=\"Reset\">\r\n        <IconButton onClick={onResetFilters}>\r\n          <Badge color=\"error\" variant=\"dot\" invisible={!canReset}>\r\n            <Iconify icon=\"solar:restart-bold\" />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <IconButton onClick={onClose}>\r\n        <Iconify icon=\"mingcute:close-line\" />\r\n      </IconButton>\r\n    </Stack>\r\n  );\r\n\r\n  const renderColors = (\r\n    <Stack spacing={1} sx={{ my: 3, px: 2.5 }}>\r\n      <Typography variant=\"subtitle2\">Colors</Typography>\r\n      <ColorPicker\r\n        colors={colorOptions}\r\n        selected={filters.colors}\r\n        onSelectColor={handleFilterColors}\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  const renderDateRange = (\r\n    <Stack spacing={1.5} sx={{ mb: 3, px: 2.5 }}>\r\n      <Typography variant=\"subtitle2\">Range</Typography>\r\n\r\n      <Stack spacing={2}>\r\n        <DatePicker label=\"Start date\" value={filters.startDate} onChange={handleFilterStartDate} />\r\n\r\n        <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              error: dateError,\r\n              helperText: dateError && 'End date must be later than start date',\r\n            },\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderEvents = (\r\n    <>\r\n      <Typography variant=\"subtitle2\" sx={{ px: 2.5, mb: 1 }}>\r\n        Events ({events.length})\r\n      </Typography>\r\n\r\n      <Scrollbar sx={{ height: 1 }}>\r\n        {orderBy(events, ['end'], ['desc']).map((event) => (\r\n          <ListItemButton\r\n            key={event.id}\r\n            onClick={() => onClickEvent(`${event.id}`)}\r\n            sx={{\r\n              py: 1.5,\r\n              borderBottom: (theme) => `dashed 1px ${theme.palette.divider}`,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                top: 16,\r\n                left: 0,\r\n                width: 0,\r\n                height: 0,\r\n                position: 'absolute',\r\n                borderRight: '10px solid transparent',\r\n                borderTop: `10px solid ${event.color}`,\r\n              }}\r\n            />\r\n\r\n            <ListItemText\r\n              disableTypography\r\n              primary={\r\n                <Typography variant=\"subtitle2\" sx={{ fontSize: 13, mt: 0.5 }}>\r\n                  {event.title}\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"div\"\r\n                  sx={{ fontSize: 11, color: 'text.disabled' }}\r\n                >\r\n                  {event.allDay ? (\r\n                    fDateTime(event.start, 'dd MMM yy')\r\n                  ) : (\r\n                    <>\r\n                      {`${fDateTime(event.start, 'dd MMM yy p')} - ${fDateTime(\r\n                        event.end,\r\n                        'dd MMM yy p'\r\n                      )}`}\r\n                    </>\r\n                  )}\r\n                </Typography>\r\n              }\r\n              sx={{ display: 'flex', flexDirection: 'column-reverse' }}\r\n            />\r\n          </ListItemButton>\r\n        ))}\r\n      </Scrollbar>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={open}\r\n      onClose={onClose}\r\n      slotProps={{\r\n        backdrop: { invisible: true },\r\n      }}\r\n      PaperProps={{\r\n        sx: { width: 320 },\r\n      }}\r\n    >\r\n      {renderHead}\r\n\r\n      <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n      {renderColors}\r\n\r\n      {renderDateRange}\r\n\r\n      {renderEvents}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nCalendarFilters.propTypes = {\r\n  canReset: PropTypes.bool,\r\n  colorOptions: PropTypes.arrayOf(PropTypes.string),\r\n  dateError: PropTypes.bool,\r\n  events: PropTypes.array,\r\n  filters: PropTypes.object,\r\n  onClickEvent: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  open: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  canReset,\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveColor = (inputValue) => {\r\n    const newValue = filters.colors.filter((item) => item !== inputValue);\r\n    onFilters('colors', newValue);\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {!!filters.colors.length && (\r\n          <Block label=\"Colors:\">\r\n            {filters.colors.map((item) => (\r\n              <Chip\r\n                key={item}\r\n                size=\"small\"\r\n                label={\r\n                  <Box\r\n                    sx={{\r\n                      ml: -0.5,\r\n                      width: 18,\r\n                      height: 18,\r\n                      bgcolor: item,\r\n                      borderRadius: '50%',\r\n                      border: (theme) => `solid 1px ${alpha(theme.palette.common.white, 0.24)}`,\r\n                    }}\r\n                  />\r\n                }\r\n                onDelete={() => handleRemoveColor(item)}\r\n              />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        {canReset && (\r\n          <Button\r\n            color=\"error\"\r\n            onClick={onResetFilters}\r\n            startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n          >\r\n            Clear\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nCalendarFiltersResult.propTypes = {\r\n  canReset: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import Calendar from '@fullcalendar/react'; // => request placed at the top\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\n//\r\nimport { useState, useEffect, useCallback } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// _mock\r\nimport { CALENDAR_COLOR_OPTIONS } from 'src/_mock/_calendar';\r\n// api\r\nimport { useGetEvents, updateEvent } from 'src/api/calendar';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { useSettingsContext } from 'src/components/settings';\r\n//\r\nimport { useCalendar, useEvent } from '../hooks';\r\nimport { StyledCalendar } from '../styles';\r\nimport CalendarForm from '../calendar-form';\r\nimport CalendarToolbar from '../calendar-toolbar';\r\nimport CalendarFilters from '../calendar-filters';\r\nimport CalendarFiltersResult from '../calendar-filters-result';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst defaultFilters = {\r\n  colors: [],\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarView() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const smUp = useResponsive('up', 'sm');\r\n\r\n  const openFilters = useBoolean();\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const { events, eventsLoading } = useGetEvents();\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const {\r\n    calendarRef,\r\n    //\r\n    view,\r\n    date,\r\n    //\r\n    onDatePrev,\r\n    onDateNext,\r\n    onDateToday,\r\n    onDropEvent,\r\n    onChangeView,\r\n    onSelectRange,\r\n    onClickEvent,\r\n    onResizeEvent,\r\n    onInitialView,\r\n    //\r\n    openForm,\r\n    onOpenForm,\r\n    onCloseForm,\r\n    //\r\n    selectEventId,\r\n    selectedRange,\r\n    //\r\n    onClickEventInFilters,\r\n  } = useCalendar();\r\n\r\n  const currentEvent = useEvent(events, selectEventId, selectedRange, openForm);\r\n\r\n  useEffect(() => {\r\n    onInitialView();\r\n  }, [onInitialView]);\r\n\r\n  const handleFilters = useCallback((name, value) => {\r\n    setFilters((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  const canReset = !!filters.colors.length || (!!filters.startDate && !!filters.endDate);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: events,\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const renderResults = (\r\n    <CalendarFiltersResult\r\n      filters={filters}\r\n      onFilters={handleFilters}\r\n      //\r\n      canReset={canReset}\r\n      onResetFilters={handleResetFilters}\r\n      //\r\n      results={dataFiltered.length}\r\n      sx={{ mb: { xs: 3, md: 5 } }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\">Calendar</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            onClick={onOpenForm}\r\n          >\r\n            New Event\r\n          </Button>\r\n        </Stack>\r\n\r\n        {canReset && renderResults}\r\n\r\n        <Card>\r\n          <StyledCalendar>\r\n            <CalendarToolbar\r\n              date={date}\r\n              view={view}\r\n              loading={eventsLoading}\r\n              onNextDate={onDateNext}\r\n              onPrevDate={onDatePrev}\r\n              onToday={onDateToday}\r\n              onChangeView={onChangeView}\r\n              onOpenFilters={openFilters.onTrue}\r\n            />\r\n\r\n            <Calendar\r\n              weekends\r\n              editable\r\n              droppable\r\n              selectable\r\n              rerenderDelay={10}\r\n              allDayMaintainDuration\r\n              eventResizableFromStart\r\n              ref={calendarRef}\r\n              initialDate={date}\r\n              initialView={view}\r\n              dayMaxEventRows={3}\r\n              eventDisplay=\"block\"\r\n              events={dataFiltered}\r\n              headerToolbar={false}\r\n              select={onSelectRange}\r\n              eventClick={onClickEvent}\r\n              height={smUp ? 720 : 'auto'}\r\n              eventDrop={(arg) => {\r\n                onDropEvent(arg, updateEvent);\r\n              }}\r\n              eventResize={(arg) => {\r\n                onResizeEvent(arg, updateEvent);\r\n              }}\r\n              plugins={[\r\n                listPlugin,\r\n                dayGridPlugin,\r\n                timelinePlugin,\r\n                timeGridPlugin,\r\n                interactionPlugin,\r\n              ]}\r\n            />\r\n          </StyledCalendar>\r\n        </Card>\r\n      </Container>\r\n\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n        open={openForm}\r\n        onClose={onCloseForm}\r\n        transitionDuration={{\r\n          enter: theme.transitions.duration.shortest,\r\n          exit: theme.transitions.duration.shortest - 80,\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ minHeight: 76 }}>\r\n          {openForm && <> {currentEvent?.id ? 'Edit Event' : 'Add Event'}</>}\r\n        </DialogTitle>\r\n\r\n        <CalendarForm\r\n          currentEvent={currentEvent}\r\n          colorOptions={CALENDAR_COLOR_OPTIONS}\r\n          onClose={onCloseForm}\r\n        />\r\n      </Dialog>\r\n\r\n      <CalendarFilters\r\n        open={openFilters.value}\r\n        onClose={openFilters.onFalse}\r\n        //\r\n        filters={filters}\r\n        onFilters={handleFilters}\r\n        //\r\n        canReset={canReset}\r\n        onResetFilters={handleResetFilters}\r\n        //\r\n        dateError={dateError}\r\n        //\r\n        events={events}\r\n        colorOptions={CALENDAR_COLOR_OPTIONS}\r\n        onClickEvent={onClickEventInFilters}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, filters, dateError }) {\r\n  const { colors, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (colors.length) {\r\n    inputData = inputData.filter((event) => colors.includes(event.color));\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (event) =>\r\n          fTimestamp(event.start) >= fTimestamp(startDate) &&\r\n          fTimestamp(event.end) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { useState, useCallback, useRef } from 'react';\r\n// hooks\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCalendar() {\r\n  const calendarRef = useRef(null);\r\n\r\n  const calendarEl = calendarRef.current;\r\n\r\n  const smUp = useResponsive('up', 'sm');\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [openForm, setOpenForm] = useState(false);\r\n\r\n  const [selectEventId, setSelectEventId] = useState('');\r\n\r\n  const [selectedRange, setSelectedRange] = useState(null);\r\n\r\n  const [view, setView] = useState(smUp ? 'dayGridMonth' : 'listWeek');\r\n\r\n  const onOpenForm = useCallback(() => {\r\n    setOpenForm(true);\r\n  }, []);\r\n\r\n  const onCloseForm = useCallback(() => {\r\n    setOpenForm(false);\r\n    setSelectedRange(null);\r\n    setSelectEventId('');\r\n  }, []);\r\n\r\n  const onInitialView = useCallback(() => {\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      const newView = smUp ? 'dayGridMonth' : 'listWeek';\r\n      calendarApi.changeView(newView);\r\n      setView(newView);\r\n    }\r\n  }, [calendarEl, smUp]);\r\n\r\n  const onChangeView = useCallback(\r\n    (newView) => {\r\n      if (calendarEl) {\r\n        const calendarApi = calendarEl.getApi();\r\n\r\n        calendarApi.changeView(newView);\r\n        setView(newView);\r\n      }\r\n    },\r\n    [calendarEl]\r\n  );\r\n\r\n  const onDateToday = useCallback(() => {\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.today();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  }, [calendarEl]);\r\n\r\n  const onDatePrev = useCallback(() => {\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.prev();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  }, [calendarEl]);\r\n\r\n  const onDateNext = useCallback(() => {\r\n    if (calendarEl) {\r\n      const calendarApi = calendarEl.getApi();\r\n\r\n      calendarApi.next();\r\n      setDate(calendarApi.getDate());\r\n    }\r\n  }, [calendarEl]);\r\n\r\n  const onSelectRange = useCallback(\r\n    (arg) => {\r\n      if (calendarEl) {\r\n        const calendarApi = calendarEl.getApi();\r\n\r\n        calendarApi.unselect();\r\n      }\r\n      onOpenForm();\r\n      setSelectedRange({\r\n        start: fTimestamp(arg.start),\r\n        end: fTimestamp(arg.end),\r\n      });\r\n    },\r\n    [calendarEl, onOpenForm]\r\n  );\r\n\r\n  const onClickEvent = useCallback(\r\n    (arg) => {\r\n      const { event } = arg;\r\n\r\n      onOpenForm();\r\n      setSelectEventId(event.id);\r\n    },\r\n    [onOpenForm]\r\n  );\r\n\r\n  const onResizeEvent = useCallback((arg, updateEvent) => {\r\n    const { event } = arg;\r\n\r\n    updateEvent({\r\n      id: event.id,\r\n      allDay: event.allDay,\r\n      start: fTimestamp(event.start),\r\n      end: fTimestamp(event.end),\r\n    });\r\n  }, []);\r\n\r\n  const onDropEvent = useCallback((arg, updateEvent) => {\r\n    const { event } = arg;\r\n\r\n    updateEvent({\r\n      id: event.id,\r\n      allDay: event.allDay,\r\n      start: fTimestamp(event.start),\r\n      end: fTimestamp(event.end),\r\n    });\r\n  }, []);\r\n\r\n  const onClickEventInFilters = useCallback(\r\n    (eventId) => {\r\n      if (eventId) {\r\n        onOpenForm();\r\n        setSelectEventId(eventId);\r\n      }\r\n    },\r\n    [onOpenForm]\r\n  );\r\n\r\n  return {\r\n    calendarRef,\r\n    //\r\n    view,\r\n    date,\r\n    //\r\n    onDatePrev,\r\n    onDateNext,\r\n    onDateToday,\r\n    onDropEvent,\r\n    onClickEvent,\r\n    onChangeView,\r\n    onSelectRange,\r\n    onResizeEvent,\r\n    onInitialView,\r\n    //\r\n    openForm,\r\n    onOpenForm,\r\n    onCloseForm,\r\n    //\r\n    selectEventId,\r\n    selectedRange,\r\n    //\r\n    onClickEventInFilters,\r\n  };\r\n}\r\n","import { useMemo } from 'react';\r\nimport merge from 'lodash/merge';\r\n// _mock\r\nimport { CALENDAR_COLOR_OPTIONS } from 'src/_mock/_calendar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useEvent(events, selectEventId, selectedRange, openForm) {\r\n  const currentEvent = events.find((event) => event.id === selectEventId);\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      color: CALENDAR_COLOR_OPTIONS[1],\r\n      allDay: false,\r\n      start: selectedRange ? selectedRange.start : new Date().getTime(),\r\n      end: selectedRange ? selectedRange.end : new Date().getTime(),\r\n    }),\r\n    [selectedRange]\r\n  );\r\n\r\n  if (!openForm) {\r\n    return undefined;\r\n  }\r\n\r\n  if (currentEvent || selectedRange) {\r\n    return merge({}, defaultValues, currentEvent);\r\n  }\r\n\r\n  return defaultValues;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport { CalendarView } from 'src/sections/calendar/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CalendarPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Calendar</title>\r\n      </Helmet>\r\n\r\n      <CalendarView />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function uuidv4() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = (Math.random() * 16) | 0,\r\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n"],"names":["ColorPreview","_ref","colors","_ref$limit","limit","sx","renderColors","slice","remainingColor","length","_jsxs","Stack","component","direction","alignItems","justifyContent","children","map","color","index","_jsx","Box","ml","width","height","bgcolor","borderRadius","border","theme","concat","palette","background","paper","boxShadow","alpha","common","black","typography","forwardRef","ref","selected","onSelectColor","other","_objectWithoutProperties","_excluded","singleSelect","handleSelect","useCallback","newSelected","includes","filter","value","_toConsumableArray","_objectSpread","display","flexWrap","hasSelected","ButtonBase","onClick","grey","transform","outline","transition","transitions","create","duration","shortest","Iconify","icon","getContrastText","shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","useDateRangePicker","start","end","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","setEndDate","_useState5","_useState6","setStartDate","error","getTime","onOpen","onClose","onChangeStartDate","newValue","onChangeEndDate","onReset","label","shortLabel","CustomDateRangePicker","_ref$title","title","_ref$variant","variant","mdUp","useResponsive","isCalendarView","Dialog","fullWidth","maxWidth","PaperProps","DialogTitle","pb","DialogContent","overflow","spacing","pt","_Fragment","Paper","borderColor","borderStyle","DateCalendar","onChange","DatePicker","FormHelperText","px","DialogActions","Button","disabled","URL","endpoints","calendar","options","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","createEvent","_x","_createEvent","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","eventData","wrap","_context","prev","next","mutate","currentData","events","stop","updateEvent","_x2","_updateEvent","_callee2","_context2","event","id","deleteEvent","_x3","_deleteEvent","_callee3","eventId","_context3","StyledCalendar","styled","marginLeft","marginBottom","main","default","neutral","action","hover","text","primary","divider","subtitle2","padding","h6","backgroundColor","secondary","white","top","left","content","opacity","position","fontSize","lineHeight","whiteSpace","textOverflow","fontWeight","fontWeightBold","customShadows","dropdown","shape","margin","body2","marginTop","marginRight","caption","textDecoration","fontWeightMedium","CalendarForm","currentEvent","colorOptions","enqueueSnackbar","useSnackbar","EventSchema","Yup","max","required","description","allDay","methods","useForm","resolver","yupResolver","defaultValues","reset","watch","control","handleSubmit","isSubmitting","formState","values","dateError","onSubmit","_ref2","data","uuidv4","t0","console","onDelete","FormProvider","RHFTextField","name","multiline","rows","RHFSwitch","Controller","render","_ref4","field","MobileDateTimePicker","fTimestamp","format","slotProps","textField","_ref5","helperText","_ref6","ColorPicker","Tooltip","IconButton","flexGrow","LoadingButton","type","loading","VIEW_OPTIONS","CalendarToolbar","date","view","onToday","onNextDate","onPrevDate","onChangeView","onOpenFilters","smUp","popover","usePopover","selectedItem","item","p","pr","size","startIcon","endIcon","Typography","LinearProgress","bottom","CustomPopover","arrow","viewOption","MenuItem","CalendarFilters","filters","onFilters","canReset","onResetFilters","onClickEvent","handleFilterColors","handleFilterStartDate","handleFilterEndDate","renderHead","py","pl","Badge","invisible","my","renderDateRange","mb","renderEvents","Scrollbar","orderBy","ListItemButton","borderBottom","borderRight","borderTop","ListItemText","disableTypography","mt","fDateTime","flexDirection","Drawer","anchor","backdrop","Divider","CalendarFiltersResult","results","Block","Chip","inputValue","handleRemoveColor","_excluded2","defaultFilters","CalendarView","useTheme","settings","useSettingsContext","openFilters","useBoolean","setFilters","_useGetEvents","_useSWR","useSWR","fetcher","isLoading","isValidating","useMemo","textColor","eventsLoading","eventsError","eventsValidating","eventsEmpty","useGetEvents","_useCalendar","calendarRef","useRef","calendarEl","current","setDate","openForm","setOpenForm","selectEventId","setSelectEventId","_useState7","_useState8","selectedRange","setSelectedRange","_useState9","_useState10","setView","onOpenForm","onCloseForm","onInitialView","calendarApi","getApi","newView","changeView","onDateToday","today","getDate","onDatePrev","onDateNext","onSelectRange","arg","unselect","onResizeEvent","onDropEvent","onClickEventInFilters","useCalendar","find","CALENDAR_COLOR_OPTIONS","merge","useEvent","useEffect","handleFilters","prevState","_defineProperty","handleResetFilters","dataFiltered","inputData","stabilizedThis","el","applyFilter","renderResults","xs","md","Container","themeStretch","Card","onTrue","Calendar","weekends","editable","droppable","selectable","rerenderDelay","allDayMaintainDuration","eventResizableFromStart","initialDate","initialView","dayMaxEventRows","eventDisplay","headerToolbar","select","eventClick","eventDrop","eventResize","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","transitionDuration","enter","exit","minHeight","onFalse","CalendarPage","Helmet","replace","c","r","Math","random","toString"],"sourceRoot":""}