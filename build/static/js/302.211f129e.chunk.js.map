{"version":3,"file":"static/js/302.211f129e.chunk.js","mappings":"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","sources":["sections/coming-soon/view.js","pages/coming-soon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// _mock\r\nimport { _socials } from 'src/_mock';\r\n// assets\r\nimport { ComingSoonIllustration } from 'src/assets/illustrations';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\nexport default function ComingSoonView() {\r\n  \r\n  const TARGET_COUNT = 278;\r\n  const [waitlistCount, setWaitlistCount] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    const incrementValue = () => {\r\n      if (waitlistCount < TARGET_COUNT * 0.75) {\r\n        return 5;\r\n      } if (waitlistCount < TARGET_COUNT) {\r\n        return 1;\r\n      } \r\n        return 0;\r\n      \r\n    };\r\n    \r\n    const interval = setInterval(() => {\r\n      setWaitlistCount(prevCount => prevCount + incrementValue());\r\n    }, 50);\r\n\r\n    if (waitlistCount >= TARGET_COUNT) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [waitlistCount]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h3\" sx={{ mb: 2, textAlign: 'center' }}>\r\n        Join The Waitlist\r\n      </Typography>\r\n      <TimeBlock value={waitlistCount.toString()} />\r\n\r\n      <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\r\n\r\n\r\n\r\n      <Stack spacing={2} direction=\"column\">\r\n        <TextField label=\"First Name\" fullWidth />\r\n        <TextField label=\"Last Name\" fullWidth />\r\n        <TextField label=\"Age\" fullWidth type=\"number\" />\r\n        <TextField label=\"Gender\" fullWidth select>\r\n          <option value=\"male\">Male</option>\r\n          <option value=\"female\">Female</option>\r\n          <option value=\"other\">Other</option>\r\n        </TextField>\r\n        <TextField label=\"Email\" fullWidth type=\"email\" />\r\n        <TextField label=\"Phone Number\" fullWidth />\r\n        <TextField label=\"Address\" fullWidth multiline rows={3} />\r\n        <Button variant=\"contained\" size=\"large\">\r\n          Join\r\n        </Button>\r\n      </Stack>\r\n\r\n      <Stack spacing={1} alignItems=\"center\" justifyContent=\"center\" direction=\"row\" sx={{ mt: 5 }}>\r\n        {_socials.map((social) => (\r\n          <IconButton\r\n            key={social.name}\r\n            sx={{\r\n              color: social.color,\r\n              '&:hover': {\r\n                bgcolor: alpha(social.color, 0.08),\r\n              },\r\n            }}\r\n          >\r\n            <Iconify icon={social.icon} />\r\n          </IconButton>\r\n        ))}\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TimeBlock({ value }) {\r\n  return (\r\n    <Stack direction=\"column\" spacing={1} alignItems=\"center\">\r\n      <Typography variant=\"h4\" sx={{ color: 'text.primary' }}>\r\n        There are {value} on the waitlist.\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTimeBlock.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport ComingSoonView from 'src/sections/coming-soon/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoonPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Waitlist</title>\r\n      </Helmet>\r\n\r\n      <ComingSoonView />\r\n    </>\r\n  );\r\n}\r\n"],"names":["ComingSoonView","_useState","useState","_useState2","_slicedToArray","waitlistCount","setWaitlistCount","useEffect","interval","setInterval","prevCount","TARGET_COUNT","clearInterval","_jsxs","_Fragment","children","_jsx","Typography","variant","sx","mb","textAlign","TimeBlock","value","toString","ComingSoonIllustration","my","height","Stack","spacing","direction","TextField","label","fullWidth","type","select","multiline","rows","Button","size","alignItems","justifyContent","mt","_socials","map","social","IconButton","color","bgcolor","alpha","Iconify","icon","name","_ref","ComingSoonPage","Helmet"],"sourceRoot":""}