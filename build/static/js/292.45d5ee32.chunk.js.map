{"version":3,"file":"static/js/292.45d5ee32.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","components/text-max-line/use-typography.js","components/text-max-line/text-max-line.js","sections/_examples/mui/table-view/basic-table.js","sections/patients/medication-view.js","sections/patients/user-quick-edit-form.js","sections/patients/user-table-row.js","sections/patients/user-table-toolbar.js","sections/patients/user-table-filters-result.js","sections/patients/view/user-list-view.js","sections/patients/app-widget.js","sections/patients/app-area-installed.js","sections/patients/app-widget-summary.js","sections/patients/app-current-download.js","sections/patients/profile-home.js","sections/patients/profile-cover.js","sections/patients/utils.js","sections/patients/collapsible-table.js","sections/patients/basic-table.js","sections/patients/component-block.js","sections/patients/surgeries.js","sections/patients/allergies.js","sections/patients/immunizations.js","sections/patients/accidents.js","sections/patients/hospitalizations.js","sections/patients/family.js","sections/patients/conditions.js","sections/patients/medication.js","sections/patients/alchohol.js","sections/patients/Smoking.js","sections/patients/exercise.js","sections/patients/Sex.js","sections/patients/work.js","sections/patients/patient-medical.js","sections/patients/vitals-pressure.js","sections/patients/vitals-blood-sugar.js","sections/patients/vitals-oxygen.js","sections/patients/vitals-weight.js","sections/patients/patient-vitals.js","sections/patients/labs-table-filters-result.js","sections/patients/labs-table-row.js","sections/patients/patient-labs.js","sections/patients/prescription-table-row.js","sections/patients/patient-prescriptions.js","sections/patients/patient-doctor-notes.js","sections/patients/patient-actions.js","sections/patients/view/patient-information.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareAscending.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/orderBy.js","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestError.ts","../node_modules/@hookform/resolvers/yup/src/yup.ts"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          '@media (max-width: 475px)': {\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\n// hooks\r\nimport { useWidth } from 'src/hooks/use-responsive';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction remToPx(value) {\r\n  return Math.round(parseFloat(value) * 16);\r\n}\r\n\r\nexport default function useTypography(variant) {\r\n  const theme = useTheme();\r\n\r\n  const breakpoints = useWidth();\r\n\r\n  const key = theme.breakpoints.up(breakpoints === 'xl' ? 'lg' : breakpoints);\r\n\r\n  const hasResponsive =\r\n    variant === 'h1' ||\r\n    variant === 'h2' ||\r\n    variant === 'h3' ||\r\n    variant === 'h4' ||\r\n    variant === 'h5' ||\r\n    variant === 'h6';\r\n\r\n  const getFont =\r\n    hasResponsive && theme.typography[variant][key]\r\n      ? theme.typography[variant][key]\r\n      : theme.typography[variant];\r\n\r\n  const fontSize = remToPx(getFont.fontSize);\r\n\r\n  const lineHeight = Number(theme.typography[variant].lineHeight) * fontSize;\r\n\r\n  const { fontWeight, letterSpacing } = theme.typography[variant];\r\n\r\n  return { fontSize, lineHeight, fontWeight, letterSpacing };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// @mui\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\n//\r\nimport useTypography from './use-typography';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TextMaxLine = forwardRef(\r\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\r\n    const { lineHeight } = useTypography(variant);\r\n\r\n    const styles = {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      display: '-webkit-box',\r\n      WebkitLineClamp: line,\r\n      WebkitBoxOrient: 'vertical',\r\n      ...(persistent && {\r\n        height: lineHeight * line,\r\n      }),\r\n      ...sx,\r\n    };\r\n\r\n    if (asLink) {\r\n      return (\r\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...styles }} {...other}>\r\n          {children}\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Typography ref={ref} variant={variant} sx={{ ...styles }} {...other}>\r\n        {children}\r\n      </Typography>\r\n    );\r\n  }\r\n);\r\n\r\nTextMaxLine.propTypes = {\r\n  asLink: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  line: PropTypes.number,\r\n  persistent: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n  variant: PropTypes.oneOf([\r\n    'body1',\r\n    'body2',\r\n    'button',\r\n    'caption',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'inherit',\r\n    'overline',\r\n    'subtitle1',\r\n    'subtitle2',\r\n  ]),\r\n};\r\n\r\nexport default TextMaxLine;\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Dessert (100g serving)' },\r\n  { id: 'calories', label: 'Calories', align: 'right' },\r\n  { id: 'fat', label: 'Fat (g)', align: 'right' },\r\n  { id: 'carbs', label: 'Carbs (g)', align: 'right' },\r\n  { id: 'protein', label: 'Protein (g)', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BasicTable() {\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {TABLE_DATA.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport React from 'react';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MedicationView({ row }) {\r\n  console.log(row);\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <List>\r\n        <h4>Medication</h4>\r\n        {row.medications.map((medication) => (\r\n          <div key={medication._id}>\r\n            <ListItemButton>\r\n              <ListItemText primary=\"Medication\" secondary={medication.medication} />\r\n            </ListItemButton>\r\n            <Divider />\r\n            <ListItemButton>\r\n              <ListItemText primary=\"Dosage\" secondary={medication.dosage} />\r\n            </ListItemButton>\r\n            <Divider />\r\n            <ListItemButton>\r\n              <ListItemText primary=\"Duration\" secondary={medication.dateStarted} />\r\n            </ListItemButton>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n\r\n        {row.treatmentPlan && row.treatmentPlan.length > 0 ? (\r\n          <>\r\n            <h4>Treatment Plan</h4>\r\n            {row.treatmentPlan.map((plan) => (\r\n              <div key={plan._id}>\r\n                <ListItemButton>\r\n                  <ListItemText primary=\"\" secondary={plan.name} />\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemText primary=\"\" secondary={plan.doctor} />\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemText primary=\"\" secondary={plan.dateStarted} />\r\n                </ListItemButton>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </List>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useMemo } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n// _mock\r\nimport { USER_STATUS_OPTIONS } from 'src/_mock';\r\n// assets\r\nimport { countries } from 'src/assets/data';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport FormProvider, { RHFSelect, RHFTextField, RHFAutocomplete } from 'src/components/hook-form';\r\nimport MedicationView from './medication-view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserQuickEditForm({ currentUser, open, onClose }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    phoneNumber: Yup.string().required('Phone number is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('Country is required'),\r\n    company: Yup.string().required('Company is required'),\r\n    state: Yup.string().required('State is required'),\r\n    city: Yup.string().required('City is required'),\r\n    role: Yup.string().required('Role is required'),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: currentUser?.name || '',\r\n      email: currentUser?.email || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      address: currentUser?.address || '',\r\n      country: currentUser?.country || '',\r\n      state: currentUser?.state || '',\r\n      city: currentUser?.city || '',\r\n      zipCode: currentUser?.zipCode || '',\r\n      status: currentUser?.status,\r\n      company: currentUser?.company || '',\r\n      role: currentUser?.role || '',\r\n    }),\r\n    [currentUser]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      onClose();\r\n      enqueueSnackbar('Update success!');\r\n      console.info('DATA', data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth={false}\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{\r\n        sx: { maxWidth: 720 },\r\n      }}\r\n    >\r\n      <FormProvider methods={methods} onSubmit={onSubmit}>\r\n        <DialogTitle>Condition View</DialogTitle>\r\n\r\n        <DialogContent>\r\n              <MedicationView row={currentUser} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </FormProvider>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nUserQuickEditForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useState, useEffect,useContext } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport axios from 'axios'\r\nimport UserQuickEditForm from './user-quick-edit-form';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableRow({ row, selected, onEditRow, onSelectRow, onDeleteRow }) {\r\n  const { firstName,lastName,email,phoneNumber, gender,age,photo,userID} = row;\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [data,setData] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/${userID}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n    .then(res => {\r\n      setData(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  },[data])\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const quickEdit = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={firstName} src={photo} sx={{ mr: 2 }} />\r\n\r\n          <ListItemText\r\n            primary={`${firstName} ${lastName}`}\r\n            secondary={email}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              component: 'span',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{phoneNumber}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{data.age?data.age:\"N/A\"}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{data.gender}</TableCell>\r\n\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (data.healthStatus === 'Normal' && 'success') ||\r\n              (data.healthStatus === 'Risky' && 'warning') ||\r\n              (data.healthStatus === 'Emergency' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {data.healthStatus}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n          {/* <Tooltip title=\"Quick View\" placement=\"top\" arrow>\r\n            <IconButton color={quickEdit.value ? 'inherit' : 'default'} onClick={quickEdit.onTrue}>\r\n              <Iconify icon=\"solar:eye-bold\" />\r\n            </IconButton>\r\n          </Tooltip> */}\r\n\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <UserQuickEditForm currentUser={row} open={quickEdit.value} onClose={quickEdit.onFalse} />\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n\r\n        >\r\n          Schedule \r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          View Patient\r\n        </MenuItem>\r\n\r\n\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  roleOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterRole = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'role',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        {/* <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 200 },\r\n          }}\r\n        >\r\n          <InputLabel>Role</InputLabel>\r\n\r\n          <Select\r\n            multiple\r\n            value={filters.role}\r\n            onChange={handleFilterRole}\r\n            input={<OutlinedInput label=\"Role\" />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            MenuProps={{\r\n              PaperProps: {\r\n                sx: { maxHeight: 240 },\r\n              },\r\n            }}\r\n          >\r\n            {roleOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.role.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl> */}\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableToolbar.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  roleOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStatus = () => {\r\n    onFilters('status', 'all');\r\n  };\r\n\r\n  const handleRemoveRole = (inputValue) => {\r\n    const newValue = filters.role.filter((item) => item !== inputValue);\r\n    onFilters('role', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {filters.status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.role.length && (\r\n          <Block label=\"Role:\">\r\n            {filters.role.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveRole(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nUserTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\n// @mui\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// _mock\r\nimport { _userList, _roles, USER_STATUS_OPTIONS } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\nimport UserTableRow from '../user-table-row';\r\nimport UserTableToolbar from '../user-table-toolbar';\r\nimport UserTableFiltersResult from '../user-table-filters-result';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\nimport BasicTable from 'src/sections/_examples/mui/table-view/basic-table';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'phoneNumber', label: 'Phone Number', width: 180 },\r\n  { id: 'age', label: 'Age', width: 220 },\r\n  { id: 'gender', label: 'Gender', width: 180 },\r\n  { id: 'status', label: 'Status', width: 100 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  role: [],\r\n  status: 'all',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserListView() {\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setDate] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/primarycare/provider/fetchuser/${user?.providerID}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setDate(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[data, user?.providerID, user?.token])\r\n\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_userList);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: data,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.patients.view(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Patient List\"\r\n          links={[\r\n            { name: 'Dashboard', href: paths.dashboard.root },\r\n            { name: 'Patients', href: paths.dashboard.user.root },\r\n            { name: 'List' },\r\n          ]}\r\n\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card>\r\n\r\n\r\n          <UserTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            roleOptions={_roles}\r\n          />\r\n\r\n          {canReset && (\r\n            <UserTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <UserTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.userID)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { name, status, role } = filters;\r\n\r\n  const stabilizedThis = inputData\r\n    .filter((el) => el !== null) // Filter out null elements\r\n    .map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (user) => user && user.firstName && user.firstName.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== 'all') {\r\n    inputData = inputData.filter((user) => user && user.status === status);\r\n  }\r\n\r\n  if (role.length) {\r\n    inputData = inputData.filter((user) => user && role.includes(user.role));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Stack from '@mui/material/Stack';\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Chart, { useChart } from 'src/components/chart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidget({ title, total, icon, chart, sx, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const { series, options } = chart;\r\n\r\n  // const chartOptions = useChart({\r\n  //   chart: {\r\n  //     sparkline: {\r\n  //       enabled: true,\r\n  //     },\r\n  //   },\r\n  //   legend: {\r\n  //     show: false,\r\n  //   },\r\n  //   fill: {\r\n  //     type: 'gradient',\r\n  //     gradient: {\r\n  //       colorStops: [\r\n  //         { offset: 0, color: theme.palette[color].light },\r\n  //         { offset: 100, color: theme.palette[color].main },\r\n  //       ],\r\n  //     },\r\n  //   },\r\n  //   plotOptions: {\r\n  //     radialBar: {\r\n  //       hollow: {\r\n  //         size: '78%',\r\n  //       },\r\n  //       track: {\r\n  //         margin: 0,\r\n  //       },\r\n  //       dataLabels: {\r\n  //         name: {\r\n  //           show: false,\r\n  //         },\r\n  //         value: {\r\n  //           offsetY: 6,\r\n  //           color: theme.palette.common.white,\r\n  //           fontSize: theme.typography.subtitle2.fontSize,\r\n  //         },\r\n  //       },\r\n  //     },\r\n  //   },\r\n  //   ...options,\r\n  // });\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        p: 3,\r\n        borderRadius: 2,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        color: 'common.white',\r\n        bgcolor: `${total !== \"Normal\"?'error':'success'}.dark`,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n\r\n      <ListItemText\r\n        sx={{ ml: 3 }}\r\n        primary={total?total.toUpperCase():total}\r\n        secondary={title}\r\n        primaryTypographyProps={{\r\n          typography: 'h4',\r\n          component: 'span',\r\n        }}\r\n        secondaryTypographyProps={{\r\n          color: 'inherit',\r\n          component: 'span',\r\n          sx: { opacity: 0.64 },\r\n          typography: 'subtitle2',\r\n        }}\r\n      />\r\n\r\n      <Iconify\r\n        icon={icon}\r\n        sx={{\r\n          width: 112,\r\n          right: -32,\r\n          height: 112,\r\n          opacity: 0.08,\r\n          position: 'absolute',\r\n        }}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nAppWidget.propTypes = {\r\n  chart: PropTypes.object,\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport Card from '@mui/material/Card';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Chart, { useChart } from 'src/components/chart';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppAreaInstalled({ title, subheader, chart, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const {\r\n    colors = [\r\n      [theme.palette.primary.light, theme.palette.primary.main],\r\n      [theme.palette.warning.light, theme.palette.warning.main],\r\n    ],\r\n    categories,\r\n    series,\r\n    options,\r\n  } = chart;\r\n\r\n  const popover = usePopover();\r\n\r\n  const [seriesData, setSeriesData] = useState('2023');\r\n\r\n  const chartOptions = useChart({\r\n    colors: colors.map((colr) => colr[1]),\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        colorStops: colors.map((colr) => [\r\n          { offset: 0, color: colr[0] },\r\n          { offset: 100, color: colr[1] },\r\n        ]),\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories,\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  const handleChangeSeries = useCallback(\r\n    (newValue) => {\r\n      popover.onClose();\r\n      setSeriesData(newValue);\r\n    },\r\n    [popover]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Card {...other}>\r\n        <CardHeader\r\n          title={title}\r\n          subheader={subheader}\r\n          action={\r\n            <ButtonBase\r\n              onClick={popover.onOpen}\r\n              sx={{\r\n                pl: 1,\r\n                py: 0.5,\r\n                pr: 0.5,\r\n                borderRadius: 1,\r\n                typography: 'subtitle2',\r\n                bgcolor: 'background.neutral',\r\n              }}\r\n            >\r\n              {seriesData}\r\n\r\n\r\n            </ButtonBase>\r\n          }\r\n        />\r\n\r\n        {series.map((item) => (\r\n          <Box key={item.year} sx={{ mt: 3, mx: 3 }}>\r\n            {item.year === seriesData && (\r\n              <Chart dir=\"ltr\" type=\"line\" series={item.data} options={chartOptions} height={364} />\r\n            )}\r\n          </Box>\r\n        ))}\r\n      </Card>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nAppAreaInstalled.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\n// utils\r\nimport { fNumber, fPercent } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Chart from 'src/components/chart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppWidgetSummary({ image,title, percent, total, chart, sx, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const {\r\n    colors = [theme.palette.primary.light, theme.palette.primary.main],\r\n    series,\r\n    options,\r\n  } = chart;\r\n\r\n  const chartOptions = {\r\n    colors: colors.map((colr) => colr[1]),\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        colorStops: [\r\n          { offset: 0, color: colors[0] },\r\n          { offset: 100, color: colors[1] },\r\n        ],\r\n      },\r\n    },\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '68%',\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (value) => fNumber(value),\r\n        title: {\r\n          formatter: () => '',\r\n        },\r\n      },\r\n      marker: { show: false },\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, ...sx }} {...other}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n        </Stack>\r\n\r\n        <Typography variant=\"h3\">{total}</Typography>\r\n      </Box>\r\n\r\n      <img alt='image' src={image} width={50}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppWidgetSummary.propTypes = {\r\n  chart: PropTypes.object,\r\n  percent: PropTypes.number,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Card from '@mui/material/Card';\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Chart, { useChart } from 'src/components/chart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_HEIGHT = 400;\r\n\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst StyledChart = styled(Chart)(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  '& .apexcharts-canvas, .apexcharts-inner, svg, foreignObject': {\r\n    height: `100% !important`,\r\n  },\r\n  '& .apexcharts-legend': {\r\n    height: LEGEND_HEIGHT,\r\n    borderTop: `dashed 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`,\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppCurrentDownload({ title, subheader, chart, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const { colors, series, options } = chart;\r\n\r\n  const chartSeries = series.map((i) => i.value);\r\n\r\n  const chartOptions = useChart({\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    colors,\r\n    labels: series.map((i) => i.label),\r\n    stroke: { colors: [theme.palette.background.paper] },\r\n    legend: {\r\n      offsetY: 0,\r\n      floating: true,\r\n      position: 'bottom',\r\n      horizontalAlign: 'center',\r\n    },\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n      y: {\r\n        formatter: (value) => fNumber(value),\r\n        title: {\r\n          formatter: (seriesName) => `${seriesName}`,\r\n        },\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        donut: {\r\n          size: '90%',\r\n          labels: {\r\n            value: {\r\n              formatter: (value) => fNumber(value),\r\n            },\r\n            total: {\r\n              formatter: (w) => {\r\n                const sum = w.globals.seriesTotals.reduce((a, b) => a + b, 0);\r\n                return fNumber(sum);\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 5 }} />\r\n\r\n      <StyledChart\r\n        dir=\"ltr\"\r\n        type=\"donut\"\r\n        series={chartSeries}\r\n        options={chartOptions}\r\n        height={280}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nAppCurrentDownload.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\n// import { useRef } from 'react';\r\n// // @mui\r\n// import { alpha } from '@mui/material/styles';\r\n// import Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Container from '@mui/material/Container';\r\nimport { _appFeatured, _appAuthors, _appInstalled, _appRelated, _appInvoices } from 'src/_mock';\r\n\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\n\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport AppWidget from './app-widget';\r\nimport AppWelcome from './app-welcome';\r\nimport AppFeatured from './app-featured';\r\nimport AppNewInvoice from './app-new-invoice';\r\nimport AppTopAuthors from './app-top-authors';\r\nimport AppTopRelated from './app-top-related';\r\nimport AppAreaInstalled from './app-area-installed';\r\nimport AppWidgetSummary from './app-widget-summary';\r\nimport AppCurrentDownload from './app-current-download';\r\nimport AppTopInstalledCountries from './app-top-installed-countries';\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileHome({ data }) {\r\n\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const activityHistory = [\r\n    { timestamp: '10 minutes ago', activity: 'Paid for a consultation' },\r\n    { timestamp: '1 hour ago', activity: 'Booked an appointment with a Dr. Clinton Borga' },\r\n    { timestamp: '2 hours ago', activity: 'Cancelled an appointment' },\r\n  ];\r\n\r\n  const renderInfo = (\r\n    <Card sx={{ py: 3, textAlign: 'center', typography: 'h4' }}>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n      >\r\n        <Stack width={1} sx={{ color: '#000080' }}>\r\n          {fNumber(data?.age)}\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Age\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack width={1}sx={{ color: '#000080' }}>\r\n          B+\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Blood Type\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderBMI = (\r\n    <Card sx={{ py: 3, textAlign: 'center', typography: 'h4' }}>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n      >\r\n        <Stack width={1}sx={{ color: '#000080' }}>\r\n          Single\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Marital Status\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack width={1}sx={{ color: '#000080' }}>\r\n          Male\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Gender\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderAddress = (\r\n    <Card>\r\n      <CardHeader title=\"Address\" />\r\n\r\n      <Stack spacing={2} sx={{ p: 3 }}>\r\n        {/* <Box sx={{ typography: 'body2' }}>{info.description}</Box> */}\r\n        <Stack direction=\"row\" sx={{ typography: 'body2' }}>\r\n          <Iconify icon=\"fluent:mail-24-filled\" width={24} sx={{ mr: 2 }} />\r\n          {data?.email}\r\n        </Stack>\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"ph:phone-fill\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {data?.phoneNumber}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={2}\r\n          sx={{ display: `${data.address?.Country ? 'flex' : 'none'}` }}\r\n        >\r\n          <Iconify icon=\"clarity:world-solid\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {data.address?.Country}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"iconamoon:location-fill\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {data.address?.region}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={2}\r\n          sx={{ display: `${data.address?.Country ? 'flex' : 'none'}` }}\r\n        >\r\n          <Iconify icon=\"mingcute:location-fill\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {data?.city || ' '}\r\n            </Link>\r\n          </Box>\r\n        </Stack>\r\n        {/* <Stack direction=\"row\" spacing={2}>\r\n          <Iconify icon=\"dashicons:post-status\" width={24} />\r\n\r\n          <Box sx={{ typography: 'body2' }}>\r\n            <Link variant=\"subtitle2\" color=\"inherit\">\r\n              {data.address?.ghanaPostId}\r\n            </Link>\r\n          </Box>\r\n        </Stack> */}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderAbout = (\r\n    <Card>\r\n      <CardHeader title=\"About\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack spacing={6} sx={{ p: 3 }}>\r\n          <Stack direction=\"column\" spacing={3}>\r\n            {/* {data.about ? (\r\n              info.renderAbout.map((item) => (\r\n                <Box sx={{ display: 'flex', alignItems: 'center', typography: 'body2' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: 8,\r\n                      height: 8,\r\n                      borderRadius: '50%',\r\n                      bgcolor: 'text.primary',\r\n                      mr: 2,\r\n                    }}\r\n                  />{' '}\r\n              \r\n                  {item}\r\n                </Box>\r\n              ))\r\n            ) : (\r\n              <a>.</a>\r\n            )} */}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  const renderPostInputs = (\r\n    <Card>\r\n      <CardHeader title=\"My Activities\" />\r\n\r\n      <Stack spacing={6} sx={{ p: 3 }}>\r\n        <Stack direction=\"column\" spacing={3}>\r\n          {activityHistory.map((entry, index) => (\r\n            <Stack key={index} direction=\"row\" spacing={2} alignItems=\"center\">\r\n              <Iconify icon=\"bi:clock-history\" width={24} />\r\n              <Box sx={{ typography: 'body2', flex: 1 }}>\r\n                {entry.timestamp}: {entry.activity}\r\n              </Box>\r\n            </Stack>\r\n          ))}\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n    <Grid container spacing={3}>\r\n      \r\n\r\n      <Grid xs={12} md={3}>\r\n        <AppWidgetSummary\r\n          title=\"Age\"\r\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8OQp7npX_qlFcgq0ygYeE86ICem-fWgX8JQ&usqp=CAU\"\r\n          percent={2.6}\r\n          total={data.age}\r\n          chart={{\r\n            series: [5, 18, 12, 51, 68, 11, 39, 37, 27, 20],\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3}>\r\n        <AppWidgetSummary\r\n          title=\"Blood Group\"\r\n          percent={0.2}\r\n          image=\"https://cdn2.iconfinder.com/data/icons/healthcare-medical-flat/2048/233_-_Blood-512.png\"\r\n          total={'B+'}\r\n          chart={{\r\n            colors: [theme.palette.info.light, theme.palette.info.main],\r\n            series: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26],\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3}>\r\n        <AppWidgetSummary\r\n          title=\"Gender\"\r\n          image=\"https://cdn-icons-png.flaticon.com/512/6146/6146171.png\"\r\n          percent={-0.1}\r\n          total={data.gender}\r\n          chart={{\r\n            colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n            series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={3}>\r\n        <AppWidgetSummary\r\n          title=\"Ethnicity\"\r\n          image=\"https://cdn2.iconfinder.com/data/icons/diversity-civil-rights-innovicons-color/128/Nationality-ethnicity-race-world-512.png\"\r\n          percent={-0.1}\r\n          total={data.ethnicity?data.ethnicity:'Black'}\r\n          chart={{\r\n            colors: [theme.palette.warning.light, theme.palette.warning.main],\r\n            series: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31],\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n\r\n      <Grid xs={12} md={6} lg={8}>\r\n        <AppAreaInstalled\r\n          title=\"Monthly Risk Assesment Score\"\r\n          chart={{\r\n            categories: [\r\n              'Jan',\r\n              'Feb',\r\n              'Mar',\r\n              'Apr',\r\n              'May',\r\n              'Jun',\r\n              'Jul',\r\n              'Aug',\r\n              'Sep',\r\n              'Oct',\r\n              'Nov',\r\n              'Dec',\r\n            ],\r\n            series: [\r\n              {\r\n                year: '2023',\r\n                data: [\r\n                  {\r\n                    name: 'Diabetes',\r\n                    data: [10, 41, 35, 51, 49, 62, 69, 91, 148, 35, 51, 49],\r\n                  },  \r\n                  {\r\n                    name: 'Hypertension',\r\n                    data: [10, 34, 13, 56, 77, 88, 99, 77, 45, 13, 56, 77],\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                year: '2020',\r\n                data: [\r\n                  {\r\n                    name: 'Diabetes',\r\n                    data: [51, 35, 41, 10, 91, 69, 62, 148, 91, 69, 62, 49],\r\n                  },\r\n                  {\r\n                    name: 'Hypertension',\r\n                    data: [56, 13, 34, 10, 77, 99, 88, 45, 77, 99, 88, 77],\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n      <Grid xs={12} md={12} lg={4}>\r\n       {renderAddress}\r\n       <AppWidget\r\n            title=\"Health Status\"\r\n            total={data.healthStatus}\r\n            icon=\"solar:user-rounded-bold\"\r\n            chart={{\r\n              series: 48,\r\n            }}\r\n          />\r\n      </Grid>\r\n\r\n    </Grid>\r\n  </Container>\r\n  );\r\n}\r\n\r\nProfileHome.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\n// theme\r\nimport { bgGradient } from 'src/theme/css';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileCover({ name, avatarUrl, role, coverUrl }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        ...bgGradient({\r\n          color: alpha(theme.palette.primary.darker, 0.8),\r\n          imgUrl: coverUrl,\r\n        }),\r\n        height: 1,\r\n        color: 'common.white',\r\n      }}\r\n    >\r\n      <Stack\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        sx={{\r\n          left: { md: 24 },\r\n          bottom: { md: 24 },\r\n          zIndex: { md: 10 },\r\n          pt: { xs: 6, md: 0 },\r\n          position: { md: 'absolute' },\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={avatarUrl}\r\n          alt={name}\r\n          sx={{\r\n            mx: 'auto',\r\n            width: { xs: 64, md: 128 },\r\n            height: { xs: 64, md: 128 },\r\n            border: `solid 2px ${theme.palette.common.white}`,\r\n          }}\r\n        />\r\n\r\n        <ListItemText\r\n          sx={{\r\n            mt: 3,\r\n            ml: { md: 3 },\r\n            textAlign: { xs: 'center', md: 'unset' },\r\n          }}\r\n          primary={name}\r\n          secondary={role}\r\n          primaryTypographyProps={{\r\n            typography: 'h4',\r\n          }}\r\n          secondaryTypographyProps={{\r\n            mt: 0.5,\r\n            color: 'inherit',\r\n            component: 'span',\r\n            typography: 'body2',\r\n            sx: { opacity: 0.48 },\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileCover.propTypes = {\r\n  avatarUrl: PropTypes.string,\r\n  coverUrl: PropTypes.string,\r\n  name: PropTypes.string,\r\n  role: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3,\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1,\r\n      },\r\n    ],\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Table from '@mui/material/Table';\r\nimport Paper from '@mui/material/Paper';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\n//\r\nimport createData from './utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt', 159),\r\n  createData('Ice cream sandwich', 23),\r\n  createData('Eclair', 262),\r\n  createData('Cupcake', 305),\r\n  createData('Gingerbread', 356),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>Condition</TableCell>\r\n\r\n              <TableCell align=\"right\">Date Occured</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {TABLE_DATA.map((row) => (\r\n              <CollapsibleTableRow key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction CollapsibleTableRow({ row }) {\r\n  const collapsible = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton\r\n            size=\"small\"\r\n            color={collapsible.value ? 'inherit' : 'default'}\r\n            onClick={collapsible.onToggle}\r\n          >\r\n            <Iconify\r\n              icon={collapsible.value ? 'eva:arrow-ios-upward-fill' : 'eva:arrow-ios-downward-fill'}\r\n            />\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell sx={{ py: 0 }} colSpan={6}>\r\n          <Collapse in={collapsible.value} unmountOnExit>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              sx={{\r\n                py: 2,\r\n                borderRadius: 1.5,\r\n                ...(collapsible.value && {\r\n                  boxShadow: (theme) => theme.customShadows.z20,\r\n                }),\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" sx={{ m: 2, mt: 0 }}>\r\n                History\r\n              </Typography>\r\n\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nCollapsibleTableRow.propTypes = {\r\n  row: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n  { id: 'protein', label: 'Date Occured', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BasicTable() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n      console.log(accidents)\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {pastMedicalConditions?pastMedicalConditions.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.dateOccurred}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComponentBlock({ title, sx, children, ...other }) {\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        borderRadius: 1.5,\r\n        borderStyle: 'dashed',\r\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n      }}\r\n    >\r\n      {title && <CardHeader title={title} />}\r\n\r\n      <Stack\r\n        spacing={3}\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexWrap=\"wrap\"\r\n        sx={{\r\n          p: 5,\r\n          minHeight: 180,\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        {children}\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nComponentBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n  { id: 'protein', label: 'Date Occured', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Surgeries() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n      console.log(accidents)\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {surgeries?surgeries.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.dateOccurred}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n  { id: 'protein', label: 'Effect', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Allergies() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {allergies?allergies.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.reason}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n  { id: 'protein', label: 'Date Occurred', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Immunizations() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.pastMedicalConditions, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {immunizations?immunizations.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.dateOccurred}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n\r\n  { id: 'protein', label: 'Date Occurred' },\r\n\r\n  { id: 'di', label: 'Description', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Accidents() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.pastMedicalConditions, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {accidents?accidents.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell>{row.dateOccurred}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.description}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n\r\n  { id: 'protein', label: 'Date Occurred' },\r\n\r\n  { id: 'di', label: 'Hospital', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Hospitalizations() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.pastMedicalConditions, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {pastHospitalizations?pastHospitalizations.map((row) => (\r\n              <TableRow key={row.reason}>\r\n                <TableCell>{row.reason?row.reason : \"N/A\"}</TableCell>\r\n\r\n                <TableCell>{row.dateOccurred? row.dateOccurred : \"N/A\"}</TableCell>\r\n\r\n                <TableCell align=\"right\">{row.Hospital}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n\r\n\r\n\r\n  { id: 'di', label: 'Relatiojn', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Family() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [medicalConditions,setMedicalConditions] = useState([])\r\n  const [surgeries,setSurgeries] = useState([])\r\n  const [allergies,setAllergies] = useState([])\r\n  const [immunizations,setImmunizations] = useState([])\r\n  const [accidents,setAccidents] = useState([])\r\n  const [pastHospitalizations,setPastHospitalizations] = useState([])\r\n  const [familyMedicalHistory,setFamilyMedicalHistory] = useState([])\r\n  const [pastMedicalConditions,setPastMedicalConditions] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setMedicalConditions(data.medicalConditions)\r\n      setSurgeries(data.surgeries)\r\n      setAllergies(data.allergies)\r\n      setImmunizations(data.immunizations)\r\n      setAccidents(data.accidents)\r\n      setPastHospitalizations(data.pastHospitalizations)\r\n      setFamilyMedicalHistory(data.familyMedicalHistory)\r\n      setPastMedicalConditions(data.pastMedicalConditions)\r\n\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[accidents, data.accidents, data.allergies, data.familyMedicalHistory, data.immunizations, data.medicalConditions, data.pastHospitalizations, data.pastMedicalConditions, data.surgeries, id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {familyMedicalHistory?familyMedicalHistory.map((row) => (\r\n              <TableRow key={row.relation}>\r\n                <TableCell>{row.relation}</TableCell>\r\n\r\n\r\n\r\n                <TableCell align=\"right\">{row.condition[0]?row.condition[0]:'N/A'}</TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport Iconify from 'src/components/iconify';\r\nimport UserQuickEditForm from './user-quick-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Condition' },\r\n\r\n\r\n\r\n  { id: 'protein', label: 'Medication Type' },\r\n\r\n  { id: 'protfein', label: 'Year' },\r\n\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Conditions() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState([])\r\n  const quickEdit = useBoolean();\r\n  const popover = usePopover();\r\n\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/conditions/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.items)\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[id, user?.token])\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {data?data.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.name}</TableCell>\r\n\r\n                <TableCell>{row.onMedication?row.medicationType:\"N/A\"}</TableCell>\r\n\r\n                <TableCell>{row.year}</TableCell>\r\n\r\n                <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n                  <Tooltip title=\"View\" placement=\"top\" arrow>\r\n                    <IconButton color={quickEdit.value ? 'inherit' : 'default'} onClick={quickEdit.onTrue}>\r\n                      <Iconify icon=\"solar:eye-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <UserQuickEditForm currentUser={row} open={quickEdit.value} onClose={quickEdit.onFalse} />\r\n\r\n\r\n\r\n        </TableCell>\r\n              </TableRow>\r\n            )):<a></a>}\r\n\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Medication' },\r\n  { id: 'dessert', label: 'Dosage' },\r\n  { id: 'protein', label: 'Meals' },\r\n  { id: 'protein', label: 'Date Startef',align: 'right' },\r\n  { id: 'di', label: 'Date Completed', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Medication() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState([])\r\n\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/medications/users/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      console.log(\" i Work\")\r\n      console.log(data)\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  })\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n            {data?.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell>{row.drug}</TableCell>\r\n                <TableCell>{row.dosage}</TableCell>\r\n                <TableCell>{row.intakeInstruction}</TableCell>\r\n                <TableCell align=\"right\">{row.dateStarted}</TableCell>\r\n                <TableCell align=\"right\">{row.dateCompleted?row.dateCompleted:\"-\"}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Use' },\r\n  { id: 'dessert', label: 'Per Week' },\r\n  { id: 'protein', label: 'Years Active' },\r\n  { id: 'protein', label: 'Regular Type' },\r\n\r\n  { id: 'di', label: 'Needed To Function', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Alcohol() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [socialHistory,setSocialHistory] = useState({})\r\n  const [alcohol,setalcohol] = useState({})\r\n  const [work,setWork] = useState({})\r\n  const [sex,setSex] = useState({})\r\n  const [smoking,setSmoking] = useState({})\r\n  const [excercise,setExercise] = useState({})\r\n\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setData(res.data.data)\r\n      setSocialHistory(data.socialHistory)\r\n      setalcohol(socialHistory.alcohol)\r\n      setSmoking(socialHistory.smoking)\r\n      setSex(data.sexualHistory)\r\n      setExercise(data.exercise)\r\n      setWork(data.workHabits)\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  })\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n\r\n              <TableRow key={alcohol?.everUsedAlcohol}>\r\n                <TableCell>{alcohol?.everUsedAlcohol ===\"Yes\"? \"Yes\" : \"No\"}</TableCell>\r\n                <TableCell>{alcohol?.howManyDringPerWeek}</TableCell>\r\n                <TableCell>{alcohol?.howManyYearsDrinking}</TableCell>\r\n                <TableCell>{alcohol?.typeOfAlcohol}</TableCell>\r\n                <TableCell align=\"right\">{alcohol?.alcoholNeededInADay}</TableCell>\r\n              </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Smoker?' },\r\n  { id: 'protesin', label: 'Item Smoked' },\r\n  { id: 'protaein', label: 'Years Active' },\r\n  { id: 'di', label: 'Packs Per Week', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Smoking() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [socialHistory,setSocialHistory] = useState({})\r\n  const [alcohol,setalcohol] = useState({})\r\n  const [work,setWork] = useState({})\r\n  const [sex,setSex] = useState({})\r\n  const [smoking,setSmoking] = useState({})\r\n  const [excercise,setExercise] = useState({})\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n      .then(res => {\r\n        setData(res.data.data);\r\n        setSocialHistory(data.socialHistory);\r\n        setalcohol(socialHistory.alcohol);\r\n        setSmoking(socialHistory.smoking);\r\n        setSex(data.sexualHistory);\r\n        setExercise(data.exercise);\r\n        setWork(data.workHabits);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.data);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n              <TableRow key={smoking?.smokingNeededInADay}>\r\n              <TableCell>{smoking?.doYouSmoke === \"Yes\"? \"Yes\" : \"No\"}</TableCell>\r\n                <TableCell>{smoking?.typeOfSmoking}</TableCell>\r\n                <TableCell>{smoking?.howManyYearsOfSmoking}</TableCell>\r\n                <TableCell align=\"right\">{smoking?.howManySmokePerWeek}</TableCell>\r\n              </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Regular Exercise' },\r\n  { id: 'desssert', label: 'Type Of Excercise' },\r\n  { id: 'dsi', label: 'Hours Per Day', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Exercise() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [socialHistory,setSocialHistory] = useState({})\r\n  const [alcohol,setalcohol] = useState({})\r\n  const [work,setWork] = useState({})\r\n  const [sex,setSex] = useState({})\r\n  const [smoking,setSmoking] = useState({})\r\n  const [exercise,setExercise] = useState({})\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n      .then(res => {\r\n        setData(res.data.data);\r\n        setSocialHistory(data.socialHistory);\r\n        setalcohol(socialHistory.alcohol);\r\n        setSmoking(socialHistory.smoking);\r\n        setSex(data.sexualHistory);\r\n        setExercise(data.exercise);\r\n        setWork(data.workHabits);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.data);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n              <TableRow key={exercise?.regularExercise}>\r\n              <TableCell>{exercise?.regularExercise}</TableCell>\r\n                <TableCell>{exercise?.typeOfExercise}</TableCell>\r\n                <TableCell align=\"right\">{2}</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'STDs' },\r\n  { id: 'desssert', label: 'Sexually Active' },\r\n  { id: 'dessefrt', label: 'Partners' },\r\n  { id: 'dessefrt', label: 'Sexual Orientation' },\r\n  { id: 'dsi', label: 'Use Of Protection', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Sex() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [socialHistory,setSocialHistory] = useState({})\r\n  const [alcohol,setalcohol] = useState({})\r\n  const [work,setWork] = useState({})\r\n  const [sex,setSex] = useState({})\r\n  const [smoking,setSmoking] = useState({})\r\n  const [ecercise,setExercise] = useState({})\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n      .then(res => {\r\n        setData(res.data.data);\r\n        setSocialHistory(data.socialHistory);\r\n        setalcohol(socialHistory.alcohol);\r\n        setSmoking(socialHistory.smoking);\r\n        setSex(data.sexualHistory);\r\n        setExercise(data.exercise);\r\n        setWork(data.workHabits);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.data);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n              <TableRow key={sex?.anyHistoryOfStds?.answer}>\r\n                <TableCell>{sex?.anyHistoryOfStds?.answer}</TableCell>\r\n                <TableCell>{sex?.sexuallyActive}</TableCell>          \r\n                <TableCell>{sex?.partnerType}</TableCell>\r\n                <TableCell>{sex?.sexualOrientation}</TableCell>\r\n                <TableCell align=\"right\">{sex?.protectionUsed}</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('Frozen yoghurt'),\r\n  createData('Ice cream sandwich'),\r\n  createData('Eclair'),\r\n  createData('Cupcake'),\r\n  createData('Gingerbread'),\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'dessert', label: 'Occupation' },\r\n\r\n\r\n  { id: 'protein', label: 'Physical' },\r\n\r\n  { id: 'di', label: 'Work Schedule', align: 'right' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Work() {\r\n\r\n  const {id} = useParams()\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setData] = useState({})\r\n  const [socialHistory,setSocialHistory] = useState({})\r\n  const [alcohol,setalcohol] = useState({})\r\n  const [work,setWork] = useState({})\r\n  const [sex,setSex] = useState({})\r\n  const [smoking,setSmoking] = useState({})\r\n  const [ecercise,setExercise] = useState({})\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n      .then(res => {\r\n        setData(res.data.data);\r\n        setSocialHistory(data.socialHistory);\r\n        setalcohol(socialHistory.alcohol);\r\n        setSmoking(socialHistory.smoking);\r\n        setSex(data.sexualHistory);\r\n        setExercise(data.exercise);\r\n        setWork(data.worKHabit);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err.data);\r\n      });\r\n  });\r\n  return (\r\n    <TableContainer sx={{ mt: 3, overflow: 'unset' }}>\r\n      <Scrollbar>\r\n        <Table sx={{ minWidth: 800 }}>\r\n          <TableHeadCustom headLabel={TABLE_HEAD} />\r\n\r\n          <TableBody>\r\n              <TableRow key={work?.typeOfWork}>\r\n              <TableCell>{work?.typeOfWork}</TableCell>\r\n                <TableCell>{work?.isPhysicallyDemanding}</TableCell>\r\n                <TableCell align=\"right\">{work?.workSchedule}</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbar>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';  // Import Typography\r\nimport List from '@mui/material/List';  // Import List\r\nimport ListItem from '@mui/material/ListItem';  // Import ListItem\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport OrderDetailsItems from './order-details-item';\r\n\r\n// components\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\n\r\nimport CollapsibleTable from './collapsible-table';\r\nimport BasicTable from './basic-table';\r\n\r\n//\r\nimport ComponentBlock from './component-block';\r\nimport Surgeries from './surgeries';\r\nimport Allergies from './allergies';\r\nimport Immunizations from './immunizations';\r\nimport Accidents from './accidents';\r\nimport Hospitalizations from './hospitalizations';\r\nimport Family from './family';\r\nimport Conditions from './conditions';\r\nimport Medication from './medication';\r\nimport Alchohol from './alchohol';\r\nimport Smoking from './Smoking';\r\nimport Exercise from './exercise';\r\nimport Sex from './Sex';\r\nimport Work from './work';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst items = [\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 2,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 2,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 3,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n]\r\n\r\nexport default function PatientMedical({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <Stack spacing={3}>\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Past Medical History\" sx={{ textAlign: 'center' }} />\r\n            <BasicTable />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Past Surgical History\" sx={{ textAlign: 'center' }} />\r\n            <Surgeries />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Vaccinations\" sx={{ textAlign: 'center' }} />\r\n            <Immunizations />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Accidents\" sx={{ textAlign: 'center' }} />\r\n            <Accidents />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Hospitalizations\" sx={{ textAlign: 'center' }} />\r\n            <Hospitalizations />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Current Conditions\" sx={{ textAlign: 'center' }} />\r\n            <Conditions />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Current Medication\" sx={{ textAlign: 'center' }} />\r\n            <Medication />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Alcohol History\" sx={{ textAlign: 'center' }} />\r\n            <Alchohol />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Smoking\" sx={{ textAlign: 'center' }} />\r\n            <Smoking />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Sexual History\" sx={{ textAlign: 'center' }} />\r\n            <Sex />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Exercise\" sx={{ textAlign: 'center' }} />\r\n            <Exercise />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Work/Occupation\" sx={{ textAlign: 'center' }} />\r\n            <Work />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Allergies\" sx={{ textAlign: 'center' }} />\r\n            <Allergies />\r\n          </Card>\r\n        </ComponentBlock>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useTable, TablePaginationCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n\r\n  return { name, code, population, size };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('143', '81', '12/03/2022', '8:30 AM'),\r\n  createData('146', '83','12/03/2022' , '8:30 AM'),\r\n  createData('144', '87',  '12/03/2022' , '8:30 AM'),\r\n  createData('141', '80',  '12/03/2022', '8:30 AM'),\r\n  createData('138', '83',  '12/03/2022', '8:30 AM'),\r\n  createData('143', '81', '12/03/2022', '8:30 AM'),\r\n  createData('146', '83','12/03/2022' , '8:30 AM'),\r\n  createData('144', '87',  '12/03/2022' , '8:30 AM'),\r\n  createData('141', '80',  '12/03/2022', '8:30 AM'),\r\n  createData('138', '83',  '12/03/2022', '8:30 AM'),\r\n\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Systolic', minWidth: 170 },\r\n  { id: 'code', label: 'Diastolic', minWidth: 100 },\r\n\r\n  {\r\n    id: 'population',\r\n    label: 'Date Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Time Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VitalsPressure() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar sx={{ maxHeight: 400 }}>\r\n          <Table stickyHeader sx={{ minWidth: 800 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper,\r\n                  }}\r\n                >\r\n                  Metric\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={3}\r\n                  sx={{ background: (theme) => theme.palette.background.paper }}\r\n                >\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ top: 56, minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {TABLE_DATA.slice(\r\n                table.page * table.rowsPerPage,\r\n                table.page * table.rowsPerPage + table.rowsPerPage\r\n              ).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={TABLE_DATA.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useTable, TablePaginationCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('70 mg/dL', 'IN', '21/03/2022', '8:35 AM'),\r\n  createData('73 mg/dL', 'IN', '22/03/2022', '8:35 AM'),\r\n  createData('75 mg/dL', 'IN', '23/03/2022', '8:35 AM'),\r\n  createData('72 mg/dL', 'IN', '24/03/2022', '8:35 AM'),\r\n  createData('71 mg/dL', 'IN', '25/03/2022', '8:35 AM'),\r\n  createData('71 mg/dL', 'IN', '26/03/2022', '8:35 AM'),\r\n  createData('79 mg/dL', 'IN', '27/03/2022', '8:35 AM'),\r\n  createData('77 mg/dL', 'IN', '28/03/2022', '8:35 AM'),\r\n  createData('69 mg/dL', 'IN', '29/03/2022', '8:35 AM'),\r\n  createData('70 mg/dL', 'IN', '30/03/2022', '8:35 AM'),\r\n\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Sugar Level', minWidth: 170 },\r\n\r\n\r\n  {\r\n    id: 'population',\r\n    label: 'Date Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Time Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VitalsBloodSugar() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar sx={{ maxHeight: 400 }}>\r\n          <Table stickyHeader sx={{ minWidth: 800 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper,\r\n                  }}\r\n                >\r\n                  Metric\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={3}\r\n                  sx={{ background: (theme) => theme.palette.background.paper }}\r\n                >\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ top: 56, minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {TABLE_DATA.slice(\r\n                table.page * table.rowsPerPage,\r\n                table.page * table.rowsPerPage + table.rowsPerPage\r\n              ).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={TABLE_DATA.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useTable, TablePaginationCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('97%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('87%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('77%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('89%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('96%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('87%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('97%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('87%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('87%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('97%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('86%', 'IN', '21/03/2022', '8:40 AM'),\r\n  createData('97%', 'IN', '21/03/2022', '8:40 AM'),\r\n\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Blood Oxygen', minWidth: 170 },\r\n\r\n  {\r\n    id: 'population',\r\n    label: 'Date Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Time Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VitalsOxygen() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar sx={{ maxHeight: 400 }}>\r\n          <Table stickyHeader sx={{ minWidth: 800 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper,\r\n                  }}\r\n                >\r\n                  Metric\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={3}\r\n                  sx={{ background: (theme) => theme.palette.background.paper }}\r\n                >\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ top: 56, minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {TABLE_DATA.slice(\r\n                table.page * table.rowsPerPage,\r\n                table.page * table.rowsPerPage + table.rowsPerPage\r\n              ).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={TABLE_DATA.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport Table from '@mui/material/Table';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// components\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { useTable, TablePaginationCustom } from 'src/components/table';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst TABLE_DATA = [\r\n  createData('86 Kg', 'IN', '11/4/2022', '8:25 AM'),\r\n  createData('87 Kg', 'IN', '11/5/2022', '8:25 AM'),\r\n  createData('88 Kg', 'IN', '11/6/2022', '8:25 AM'),\r\n  createData('87 Kg', 'IN', '11/7/2022', '8:25 AM'),\r\n  createData('88 Kg', 'IN', '11/8/2022', '8:25 AM'),\r\n  createData('89 Kg', 'IN', '11/9/2022', '8:25 AM'),\r\n  createData('87 Kg', 'IN', '11/10/2022', '8:25 AM'),\r\n  createData('88 Kg', 'IN', '11/11/2022', '8:25 AM'),\r\n  createData('86 Kg', 'IN', '11/12/2022', '8:25 AM'),\r\n];\r\n\r\nconst COLUMNS = [\r\n  { id: 'name', label: 'Weight', minWidth: 170 },\r\n\r\n  {\r\n    id: 'size',\r\n    label: 'Date Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Time Captured',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VitalsWeight() {\r\n  const table = useTable({ defaultRowsPerPage: 10 });\r\n\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ overflow: 'unset' }}>\r\n        <Scrollbar sx={{ maxHeight: 400 }}>\r\n          <Table stickyHeader sx={{ minWidth: 800 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={2}\r\n                  sx={{\r\n                    background: (theme) => theme.palette.background.paper,\r\n                  }}\r\n                >\r\n                  Metric\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  colSpan={3}\r\n                  sx={{ background: (theme) => theme.palette.background.paper }}\r\n                >\r\n                  Details\r\n                </TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                {COLUMNS.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ top: 56, minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {TABLE_DATA.slice(\r\n                table.page * table.rowsPerPage,\r\n                table.page * table.rowsPerPage + table.rowsPerPage\r\n              ).map((row) => (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {COLUMNS.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n      </TableContainer>\r\n\r\n      <TablePaginationCustom\r\n        count={TABLE_DATA.length}\r\n        page={table.page}\r\n        rowsPerPage={table.rowsPerPage}\r\n        onPageChange={table.onChangePage}\r\n        onRowsPerPageChange={table.onChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Container from '@mui/material/Container';\r\n\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\nimport BasicTable from './basic-table';\r\n\r\n//\r\nimport ComponentBlock from './component-block';\r\nimport Surgeries from './surgeries';\r\nimport Allergies from './allergies';\r\nimport Immunizations from './immunizations';\r\nimport Accidents from './accidents';\r\nimport Hospitalizations from './hospitalizations';\r\nimport Family from './family';\r\nimport VitalsPressure from './vitals-pressure';\r\nimport VitalsBloodSugar from './vitals-blood-sugar';\r\nimport VitalsOxygen from './vitals-oxygen';\r\nimport VitalsWeight from './vitals-weight';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\nexport default function PatientVitals({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container sx={{ my: 10 }}>\r\n      <Stack spacing={3}>\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Blood Pressure\" sx={{ textAlign: 'center' }} />\r\n            <VitalsPressure />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Blood Sugar\" sx={{ textAlign: 'center' }} />\r\n            <VitalsBloodSugar />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Blood Oxygen\" sx={{ textAlign: 'center' }} />\r\n            <VitalsOxygen />\r\n          </Card>\r\n        </ComponentBlock>\r\n\r\n        <ComponentBlock>\r\n          <Card sx={{ width: 1 }}>\r\n            <CardHeader title=\"Weight\" sx={{ textAlign: 'center' }} />\r\n            <VitalsWeight />\r\n          </Card>\r\n        </ComponentBlock>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nPatientVitals.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LabsTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStatus = () => {\r\n    onFilters('status', 'all');\r\n  };\r\n\r\n  const handleRemoveRole = (inputValue) => {\r\n    const newValue = filters.role.filter((item) => item !== inputValue);\r\n    onFilters('role', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {filters.status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.role.length && (\r\n          <Block label=\"Role:\">\r\n            {filters.role.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveRole(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nLabsTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useState, useEffect,useContext } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport axios from 'axios'\r\nimport UserQuickEditForm from './user-quick-edit-form';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LabsTableRow({ row, selected, onEditRow, onSelectRow, onDeleteRow }) {\r\n  const { userID, providerID,orderedBy,category,lab,type,dateOrdered,dateExpected,status} = row;\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [data,setData] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/${userID}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n    .then(res => {\r\n      setData(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  },[data])\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const quickEdit = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n\r\n          <ListItemText\r\n            primary={type}\r\n            secondary={category}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              component: 'span',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{orderedBy}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{lab}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{dateOrdered}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{dateExpected}</TableCell>\r\n\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === 'Completed' && 'success') ||\r\n              (status === 'Processing' && 'warning') ||\r\n              (status === 'Cancelled' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n          {status==\"Completed\"?<Tooltip title=\"Download\" placement=\"top\" arrow>\r\n            <IconButton color={quickEdit.value ? 'inherit' : 'default'} onClick={()=> alert(\"Document Downloaded\")}>\r\n              <Iconify icon=\"solar:download-bold\" />\r\n            </IconButton>\r\n          </Tooltip>:<a></a>}\r\n\r\n          {/* <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> */}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <UserQuickEditForm currentUser={row} open={quickEdit.value} onClose={quickEdit.onFalse} />\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n\r\n        >\r\n          <Iconify icon=\"solar:calendar-bold\" />\r\n          Schedule \r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View Patient\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nLabsTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\n// @mui\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// _mock\r\nimport { _userList, _roles, USER_STATUS_OPTIONS } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\n\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n\r\nimport LabsTableFiltersResult from './labs-table-filters-result';\r\nimport LabsTableRow from './labs-table-row';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Type' },\r\n\r\n  { id: 'phoneNumbser', label: 'Ordered By', width: 180 },\r\n  { id: 'phoneNumbser', label: 'Lab', width: 180 },\r\n  { id: 'age', label: 'Date Ordered', width: 220 },\r\n  { id: 'gender', label: 'Date Expected', width: 180 },\r\n  { id: 'status', label: 'Status', width: 100 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  role: [],\r\n  status: 'all',\r\n};\r\n\r\nconst labSim = [\r\n  {\r\n    id:1,\r\n    userID:'UT-23243',\r\n    providerID: 'MT-32325353',\r\n    orderedBy : 'Dr Collins Kwarteng',\r\n    category : 'Cardiology',\r\n    lab : 'Lancet - Koforidua Branch',\r\n    type : 'EKG',\r\n    dateOrdered : '2023-04-16',\r\n    dateExpected : '2023-05-17',\r\n    status : 'Processing'\r\n  },\r\n  {\r\n    id:2,\r\n    userID:'UT-23243',\r\n    providerID: 'MT-32325353',\r\n    orderedBy : 'Dr Michael Tetteh',\r\n    category : 'Oncology',\r\n    lab : 'Lancet - Koforidua Branch',\r\n    type : 'Biopsy',\r\n    dateOrdered : '2023-04-16',\r\n    dateExpected : '2023-05-17',\r\n    status : 'Completed'\r\n  }\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PatientLabs() {\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setDate] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/primarycare/provider/fetchuser/${user?.providerID}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setDate(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[data, user?.providerID, user?.token])\r\n\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_userList);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: data,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.patients.view(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n\r\n        <Card>\r\n\r\n\r\n          {canReset && (\r\n            <LabsTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {labSim\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <LabsTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.userID)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { name, status, role } = filters;\r\n\r\n  const stabilizedThis = inputData\r\n    .filter((el) => el !== null) // Filter out null elements\r\n    .map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (user) => user && user.firstName && user.firstName.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== 'all') {\r\n    inputData = inputData.filter((user) => user && user.status === status);\r\n  }\r\n\r\n  if (role.length) {\r\n    inputData = inputData.filter((user) => user && role.includes(user.role));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { useState, useEffect,useContext } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport axios from 'axios'\r\nimport UserQuickEditForm from './user-quick-edit-form';\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PrescriptionTableRow({ row, selected, onEditRow, onSelectRow, onDeleteRow }) {\r\n  const { userID, providerID,orderedBy,category,pharmacy,type,dateOrdered,dateExpected,status,dossagePerDay,hourIntervals,meals} = row;\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [data,setData] = useState({})\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://abibiman-api.onrender.com/users/${userID}`, {\r\n      headers: {\r\n        Authorization: `Basic ${user?.token}`,\r\n      },\r\n    })\r\n    .then(res => {\r\n      setData(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  },[data])\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const quickEdit = useBoolean();\r\n\r\n  const popover = usePopover();\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n\r\n          <ListItemText\r\n            primary={type}\r\n            secondary={category}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              component: 'span',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{orderedBy}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{pharmacy}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{dossagePerDay}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{meals}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{`${hourIntervals} Hours`}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{dateOrdered}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{dateExpected}</TableCell>\r\n\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === 'Completed' && 'success') ||\r\n              (status === 'Processing' && 'warning') ||\r\n              (status === 'Cancelled' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell>\r\n\r\n        {/* <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n          {status==\"Completed\"?<Tooltip title=\"Download\" placement=\"top\" arrow>\r\n            <IconButton color={quickEdit.value ? 'inherit' : 'default'} onClick={()=> alert(\"Document Downloaded\")}>\r\n              <Iconify icon=\"solar:download-bold\" />\r\n            </IconButton>\r\n          </Tooltip>:<a></a>}\r\n\r\n           <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton> \r\n        </TableCell>  */}\r\n      </TableRow>\r\n\r\n      <UserQuickEditForm currentUser={row} open={quickEdit.value} onClose={quickEdit.onFalse} />\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n\r\n        >\r\n          <Iconify icon=\"solar:calendar-bold\" />\r\n          Schedule \r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View Patient\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nPrescriptionTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useCallback, useEffect,useContext } from 'react';\r\n// @mui\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// _mock\r\nimport { _userList, _roles, USER_STATUS_OPTIONS } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\n\r\nimport axios from 'axios'\r\nimport { AuthContext } from 'src/auth/context/jwt';\r\n\r\n\r\nimport LabsTableFiltersResult from './labs-table-filters-result';\r\nimport LabsTableRow from './labs-table-row';\r\nimport PrescriptionTableRow from './prescription-table-row';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Type' },\r\n\r\n  { id: 'phoneNumbser', label: 'Ordered By', width: 180 },\r\n  { id: 'phoneNumbser', label: 'Pharmacy', width: 180 },\r\n  { id: 'ages', label: 'Daily Pills', width: 220 },\r\n  { id: 'gendesr', label: 'Taken', width: 180 },\r\n  { id: 'statsus', label: 'Time Intervals', width: 100 },\r\n  { id: 'age', label: 'Date Ordered', width: 220 },\r\n  { id: 'gender', label: 'Date Expected', width: 180 },\r\n  { id: 'status', label: 'Status', width: 100 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  role: [],\r\n  status: 'all',\r\n};\r\n\r\nconst labSim = [\r\n  {\r\n    id:1,\r\n    userID:'UT-23243',\r\n    providerID: 'MT-32325353',\r\n    orderedBy : 'Dr Collins Kwarteng',\r\n    category : 'Cardiology',\r\n    pharmacy : 'Hope Pharmacy',\r\n    type : 'Atenolol ',\r\n    dateOrdered : '2023-04-16',\r\n    dateExpected : '2023-05-17',\r\n    dossagePerDay: '3',\r\n    hourIntervals: '8',\r\n    meals: 'Before Meals',\r\n    status : 'Processing'\r\n  },\r\n  {\r\n    id:2,\r\n    userID:'UT-23243',\r\n    providerID: 'MT-32325353',\r\n    orderedBy : 'Dr Michael Tetteh',\r\n    category : 'Oncology',\r\n    pharmacy : 'Ernest Chemist',\r\n    type : 'Paracetamol ',\r\n    dateOrdered : '2023-04-16',\r\n    dateExpected : '2023-05-17',\r\n    dossagePerDay: '3',\r\n    hourIntervals: '8',\r\n    meals: 'Before Meals',\r\n    status : 'Completed'\r\n  }\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PatientPrescriptions() {\r\n  const { user } = useContext(AuthContext);\r\n  const [data,setDate] = useState([])\r\n\r\n  useEffect(()=> {\r\n    axios.get(`https://abibiman-api.onrender.com/primarycare/provider/fetchuser/${user?.providerID}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n    .then(res =>{\r\n      setDate(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(err.data)\r\n    })\r\n\r\n  },[data, user?.providerID, user?.token])\r\n\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_userList);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: data,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  const handleEditRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.patients.view(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n\r\n        <Card>\r\n\r\n\r\n          {canReset && (\r\n            <LabsTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {labSim\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <PrescriptionTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        onEditRow={() => handleEditRow(row.userID)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { name, status, role } = filters;\r\n\r\n  const stabilizedThis = inputData\r\n    .filter((el) => el !== null) // Filter out null elements\r\n    .map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (user) => user && user.firstName && user.firstName.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== 'all') {\r\n    inputData = inputData.filter((user) => user && user.status === status);\r\n  }\r\n\r\n  if (role.length) {\r\n    inputData = inputData.filter((user) => user && role.includes(user.role));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\n// import { useRef } from 'react';\r\n// // @mui\r\n// import { alpha } from '@mui/material/styles';\r\n// import Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport { useTypography } from 'src/components/text-max-line';\r\nimport Container from '@mui/material/Container';\r\nimport { _appFeatured, _appAuthors, _appInstalled, _appRelated, _appInvoices } from 'src/_mock';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useSettingsContext } from 'src/components/settings';\r\n\r\n\r\n// utils\r\nimport { fNumber } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport AppWidget from './app-widget';\r\nimport AppWelcome from './app-welcome';\r\nimport AppFeatured from './app-featured';\r\nimport AppNewInvoice from './app-new-invoice';\r\nimport AppTopAuthors from './app-top-authors';\r\nimport AppTopRelated from './app-top-related';\r\nimport AppAreaInstalled from './app-area-installed';\r\nimport AppWidgetSummary from './app-widget-summary';\r\nimport AppCurrentDownload from './app-current-download';\r\nimport AppTopInstalledCountries from './app-top-installed-countries';\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TYPOGRAPHYS = [\r\n\r\n  {\r\n    label:\r\n      'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.',\r\n    variant: 'body1',\r\n  }\r\n\r\n];\r\n\r\nexport default function PatientDoctorNotes({ data }) {\r\n\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const activityHistory = [\r\n    { timestamp: '10 minutes ago', activity: 'Paid for a consultation' },\r\n    { timestamp: '1 hour ago', activity: 'Booked an appointment with a Dr. Clinton Borga' },\r\n    { timestamp: '2 hours ago', activity: 'Cancelled an appointment' },\r\n  ];\r\n\r\n  const renderInfo = (\r\n    <Card sx={{ py: 3, textAlign: 'center', typography: 'h4' }}>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n      >\r\n        <Stack width={1} sx={{ color: '#000080' }}>\r\n          {fNumber(data?.age)}\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Age\r\n          </Box>\r\n        </Stack>\r\n\r\n        <Stack width={1}sx={{ color: '#000080' }}>\r\n          B+\r\n          <Box component=\"span\" sx={{ color: '#000000', typography: 'body2' }}>\r\n            Blood Type\r\n          </Box>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n\r\n    <Grid xs={12} md={9}>\r\n            <Stack spacing={3}>\r\n              {TYPOGRAPHYS.map((font) => (\r\n                <BlockVariant key={font.variant} font={font} />\r\n              ))}\r\n            </Stack>\r\n          </Grid>\r\n\r\n\r\n  </Container>\r\n  );\r\n}\r\n\r\nPatientDoctorNotes.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nfunction BlockVariant({ font }) {\r\n  const { variant, label } = font;\r\n\r\n  const { fontSize, lineHeight, fontWeight, letterSpacing = 0 } = useTypography(variant);\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" sx={{ p: 3, borderRadius: 1 }}>\r\n      <Typography variant={variant} gutterBottom>\r\n        {label}\r\n      </Typography>\r\n\r\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        24/06/2023 Dr Collins Kwarteng\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nBlockVariant.propTypes = {\r\n  font: PropTypes.object,\r\n};","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Typography from '@mui/material/Typography';  // Import Typography\r\nimport List from '@mui/material/List';  // Import List\r\nimport ListItem from '@mui/material/ListItem';  // Import ListItem\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _orders, ORDER_STATUS_OPTIONS } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport OrderDetailsItems from './order-details-item';\r\n\r\n// components\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\n\r\nimport CollapsibleTable from './collapsible-table';\r\nimport BasicTable from './basic-table';\r\n\r\n//\r\nimport ComponentBlock from './component-block';\r\nimport Surgeries from './surgeries';\r\nimport Allergies from './allergies';\r\nimport Immunizations from './immunizations';\r\nimport Accidents from './accidents';\r\nimport Hospitalizations from './hospitalizations';\r\nimport Family from './family';\r\nimport Conditions from './conditions';\r\nimport Medication from './medication';\r\nimport Alchohol from './alchohol';\r\nimport Smoking from './Smoking';\r\nimport Exercise from './exercise';\r\nimport Sex from './Sex';\r\nimport Work from './work';\r\nimport EcommerceCurrentBalance from '../overview/e-commerce/ecommerce-current-balance';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst items = [\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 2,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 2,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n  {\r\n    name: 'type1',\r\n    sku: 'unknown',\r\n    id: 3,\r\n    quantity: 2,\r\n    prince: 432\r\n  },\r\n]\r\n\r\nexport default function PatientActions({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n    <Grid container spacing={3}>\r\n\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Prescribe Medication\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Refer Patient\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Add Note\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Update Medical History\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Order Labs\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n\r\n      <Grid xs={12} md={6} lg={4}>\r\n        <EcommerceCurrentBalance\r\n          title=\"Order Imaging\"\r\n          currentBalance={187650}\r\n          sentAmount={25500}\r\n          link=\"\"\r\n        />\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n    </Grid>\r\n  </Container>\r\n  );\r\n}\r\n\r\nPatientActions.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import { useState, useCallback, useEffect, useContext } from \"react\";\r\n// @mui\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { Container, Button } from \"@mui/material\";\r\nimport Tabs, { tabsClasses } from \"@mui/material/Tabs\";\r\n// routes\r\nimport { paths } from \"src/routes/paths\";\r\nimport { RouterLink } from \"src/routes/components\";\r\n\r\n// hooks\r\n// _mock\r\nimport { _userFeeds } from \"src/_mock\";\r\n// components\r\nimport Iconify from \"src/components/iconify\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport CustomBreadcrumbs from \"src/components/custom-breadcrumbs\";\r\n//\r\nimport { AuthContext } from \"src/auth/context/jwt\";\r\nimport ProfileHome from \"../profile-home\";\r\nimport ProfileCover from \"../profile-cover\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport PatientMedical from \"../patient-medical\";\r\nimport PatientVitals from \"../patient-vitals\";\r\nimport PatientLabs from \"../patient-labs\";\r\nimport PatientPrescriptions from \"../patient-prescriptions\";\r\nimport PatientDoctorNotes from \"../patient-doctor-notes\";\r\nimport PatientActions from \"../patient-actions\";\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABS = [\r\n  {\r\n    value: \"bio\",\r\n    label: \"General\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: \"medi\",\r\n    label: \"Medical History\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: \"vitals\",\r\n    label: \"Vitals\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: \"labs\",\r\n    label: \"Lab Orders\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: \"prescriptions\",\r\n    label: \"Prescriptions\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n  {\r\n    value: \"notes\",\r\n    label: \"Doctor's Notes\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n    {\r\n    value: \"actions\",\r\n    label: \"Actions\",\r\n    icon: <Iconify icon=\"solar:user-id-bold\" width={24} />,\r\n  },\r\n\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserProfileView() {\r\n  const { id } = useParams();\r\n  const settings = useSettingsContext();\r\n  const { user } = useContext(AuthContext);\r\n  const [userData, setUserData] = useState({});\r\n  const [userMedical, setUserMedical] = useState({});\r\n  const [userHabits, setUserHabits] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n\r\n    axios\r\n      .get(`https://abibiman-api.onrender.com/users/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUserData(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axios\r\n      .get(`https://abibiman-api.onrender.com/users/medicalhistory/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUserMedical(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.data);\r\n      });\r\n\r\n    axios\r\n      .get(`https://abibiman-api.onrender.com/users/social-habits/${id}`, {\r\n        headers: {\r\n          Authorization: `Basic ${user?.token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUserHabits(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // console.log(data);\r\n\r\n  const [currentTab, setCurrentTab] = useState(\"bio\");\r\n\r\n  const handleChangeTab = useCallback((event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : \"lg\"}>\r\n      <CustomBreadcrumbs\r\n        heading={`${userData?.firstName || \" \"} ${userData?.lastName || \" \"}`}\r\n        links={[\r\n          { name: \"Dashboard\", href: paths.dashboard.root },\r\n          // { name: 'Provider', href: paths.dashboard.providers.root },\r\n          {\r\n            name: `${userData?.firstName || \" \"} ${userData?.lastName || \" \"}`,\r\n          },\r\n        ]}\r\n        action={\r\n          <Button\r\n            component={RouterLink}\r\n            href={`/dashboard/chat/${userData?.userID}`}\r\n            variant=\"primary\"\r\n            startIcon={<Iconify icon=\"basil:chat-solid\" />}\r\n            sx={{ marginLeft: \"5px\" }}\r\n          >\r\n            Chat\r\n          </Button>\r\n        }\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      {/* {loading ? (\r\n        <LoadingScreen />\r\n      ) : ( */}\r\n      <>\r\n        <Card\r\n          sx={{\r\n            mb: 3,\r\n            height: 290,\r\n          }}\r\n        >\r\n          <ProfileCover\r\n            name={`${userData?.firstName || \" \"} ${userData?.lastName || \" \"}`}\r\n            avatarUrl={userData?.photo}\r\n            coverUrl=\"https://images.unsplash.com/photo-1587854692152-cbe660dbde88?q=80&w=2969&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n          />\r\n\r\n          <Tabs\r\n            value={currentTab}\r\n            onChange={handleChangeTab}\r\n            sx={{\r\n              width: 1,\r\n              bottom: 0,\r\n              zIndex: 9,\r\n              position: \"absolute\",\r\n              bgcolor: \"background.paper\",\r\n              [`& .${tabsClasses.flexContainer}`]: {\r\n                pr: { md: 3 },\r\n                justifyContent: {\r\n                  sm: \"center\",\r\n                  md: \"flex-end\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                icon={tab.icon}\r\n                label={tab.label}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Card>\r\n\r\n        {currentTab === \"bio\" && (\r\n          <ProfileHome data={userData} posts={_userFeeds} />\r\n        )}\r\n        {currentTab === \"medi\" && (\r\n          <PatientMedical data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"vitals\" && (\r\n          <PatientVitals data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"labs\" && (\r\n          <PatientLabs data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"prescriptions\" && (\r\n          <PatientPrescriptions data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"notes\" && (\r\n          <PatientDoctorNotes data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"actions\" && (\r\n          <PatientActions data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {/* {currentTab === \"conditions\" && (\r\n          <PatientDoctorNotes data={userData} posts={_userFeeds} />\r\n        )}\r\n\r\n        {currentTab === \"medications\" && (\r\n          <PatientDoctorNotes data={userData} posts={_userFeeds} />\r\n        )} */}\r\n      </>\r\n      {/* )} */}\r\n    </Container>\r\n  );\r\n}\r\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","import {\n  get,\n  FieldError,\n  ResolverOptions,\n  Ref,\n  FieldErrors,\n  FieldValues,\n} from 'react-hook-form';\n\nconst setCustomValidity = (\n  ref: Ref,\n  fieldPath: string,\n  errors: FieldErrors,\n) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors);\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) =>\n        setCustomValidity(ref, fieldPath, errors),\n      );\n    }\n  }\n};\n","import {\n  set,\n  get,\n  FieldErrors,\n  Field,\n  ResolverOptions,\n  FieldValues,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestError = <TFieldValues extends FieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n\n    set(\n      fieldErrors,\n      path,\n      Object.assign(errors[path] || {}, { ref: field && field.ref }),\n    );\n  }\n\n  return fieldErrors;\n};\n","import * as Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport {\n  appendErrors,\n  FieldError,\n  FieldValues,\n  Resolver,\n} from 'react-hook-form';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport function yupResolver<TFieldValues extends FieldValues>(\n  schema: Yup.ObjectSchema<TFieldValues>,\n  schemaOptions: Parameters<(typeof schema)['validate']>[1] = {},\n  resolverOptions: {\n    /**\n     * @default async\n     */\n    mode?: 'async' | 'sync';\n    /**\n     * Return the raw input values rather than the parsed values.\n     * @default false\n     */\n    raw?: boolean;\n  } = {},\n): Resolver<TFieldValues> {\n  return async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.raw ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n}\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexDirection","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","useTypography","value","theme","useTheme","breakpoints","useWidth","key","up","getFont","fontSize","Math","round","parseFloat","lineHeight","Number","_theme$typography$var","fontWeight","letterSpacing","forwardRef","ref","asLink","_ref$variant","_ref$line","line","_ref$persistent","persistent","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","createData","calories","fat","carbs","protein","TABLE_DATA","TABLE_HEAD","id","label","align","BasicTable","TableContainer","Scrollbar","Table","minWidth","TableHeadCustom","headLabel","TableBody","row","TableRow","TableCell","MedicationView","console","log","List","medications","medication","ListItemButton","ListItemText","primary","secondary","Divider","dosage","dateStarted","_id","treatmentPlan","plan","doctor","UserQuickEditForm","currentUser","open","onClose","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","shape","required","email","phoneNumber","address","country","company","state","city","role","defaultValues","useMemo","zipCode","status","methods","useForm","resolver","yupResolver","reset","handleSubmit","onSubmit","formState","isSubmitting","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","Promise","resolve","setTimeout","info","t0","error","stop","_x","apply","arguments","Dialog","fullWidth","maxWidth","PaperProps","FormProvider","DialogTitle","DialogContent","DialogActions","Button","onClick","UserTableRow","selected","onEditRow","onSelectRow","onDeleteRow","firstName","lastName","photo","gender","age","userID","user","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","setData","useEffect","axios","get","concat","headers","Authorization","token","then","res","catch","err","confirm","useBoolean","quickEdit","popover","usePopover","hover","padding","Checkbox","checked","Avatar","alt","src","primaryTypographyProps","secondaryTypographyProps","whiteSpace","Label","healthStatus","px","IconButton","onOpen","Iconify","onFalse","CustomPopover","arrow","MenuItem","onTrue","ConfirmDialog","title","content","UserTableToolbar","filters","onFilters","roleOptions","handleFilterName","useCallback","event","split","spacing","xs","md","p","pr","TextField","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","UserTableFiltersResult","onResetFilters","results","ml","flexWrap","Block","Chip","size","onDelete","item","inputValue","newValue","filter","handleRemoveRole","startIcon","_excluded2","Paper","borderStyle","defaultFilters","UserListView","setDate","providerID","table","useTable","settings","useSettingsContext","router","useRouter","_useState3","_userList","_useState4","tableData","setTableData","_useState5","_useState6","setFilters","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","a","b","order","toLowerCase","indexOf","includes","applyFilter","getComparator","orderBy","dataInPage","slice","page","rowsPerPage","denseHeight","dense","canReset","isEqual","notFound","handleFilters","onResetPage","prevState","_defineProperty","handleDeleteRow","deleteRow","onUpdatePageDeleteRow","handleDeleteRows","deleteRows","onUpdatePageDeleteRows","totalRows","totalRowsInPage","totalRowsFiltered","handleEditRow","push","paths","dashboard","patients","view","handleResetFilters","Container","themeStretch","root","mb","Card","_roles","pt","TableSelectedAction","numSelected","rowCount","onSelectAllRows","Tooltip","onSort","TableEmptyRows","emptyRows","TableNoData","TablePaginationCustom","count","onPageChange","onChangePage","onRowsPerPageChange","onChangeRowsPerPage","onChangeDense","AppWidget","total","chart","series","options","toUpperCase","opacity","right","AppAreaInstalled","subheader","_chart$colors","colors","palette","light","main","warning","categories","seriesData","setSeriesData","chartOptions","useChart","colr","fill","type","gradient","colorStops","offset","xaxis","CardHeader","ButtonBase","pl","py","mx","year","Chart","dir","AppWidgetSummary","image","percent","sparkline","enabled","plotOptions","bar","columnWidth","tooltip","x","show","y","formatter","fNumber","marker","styled","borderTop","divider","top","CHART_HEIGHT","ProfileHome","_data$address","_data$address2","_data$address3","_data$address4","renderAddress","Country","region","timestamp","activity","entry","flex","Grid","container","ethnicity","lg","ProfileCover","avatarUrl","coverUrl","bgGradient","alpha","darker","imgUrl","left","bottom","zIndex","border","common","white","textAlign","price","history","date","customerId","amount","useParams","setMedicalConditions","setSurgeries","_useState7","_useState8","setAllergies","_useState9","_useState10","setImmunizations","_useState11","_useState12","accidents","setAccidents","_useState13","_useState14","setPastHospitalizations","_useState15","_useState16","setFamilyMedicalHistory","_useState17","_useState18","pastMedicalConditions","setPastMedicalConditions","medicalConditions","surgeries","allergies","immunizations","pastHospitalizations","familyMedicalHistory","dateOccurred","ComponentBlock","grey","justifyContent","minHeight","Surgeries","Allergies","reason","Immunizations","Accidents","description","Hospitalizations","Hospital","Conditions","items","onMedication","medicationType","placement","Medication","drug","intakeInstruction","dateCompleted","Alcohol","socialHistory","setSocialHistory","alcohol","setalcohol","setWork","setSex","setSmoking","setExercise","smoking","sexualHistory","exercise","workHabits","everUsedAlcohol","howManyDringPerWeek","howManyYearsDrinking","typeOfAlcohol","alcoholNeededInADay","Smoking","doYouSmoke","typeOfSmoking","howManyYearsOfSmoking","howManySmokePerWeek","smokingNeededInADay","Exercise","regularExercise","typeOfExercise","Sex","_sex$anyHistoryOfStds","_sex$anyHistoryOfStds2","sex","anyHistoryOfStds","answer","sexuallyActive","partnerType","sexualOrientation","protectionUsed","Work","work","worKHabit","typeOfWork","isPhysicallyDemanding","workSchedule","PatientMedical","Alchohol","code","population","COLUMNS","format","toLocaleString","VitalsPressure","defaultRowsPerPage","maxHeight","stickyHeader","TableHead","colSpan","background","paper","column","style","tabIndex","density","toFixed","VitalsBloodSugar","VitalsOxygen","VitalsWeight","PatientVitals","my","LabsTableFiltersResult","LabsTableRow","orderedBy","category","lab","dateOrdered","dateExpected","alert","labSim","PatientLabs","PrescriptionTableRow","pharmacy","dossagePerDay","hourIntervals","meals","PatientPrescriptions","TYPOGRAPHYS","PatientDoctorNotes","font","BlockVariant","_useTypography","PatientActions","EcommerceCurrentBalance","currentBalance","sentAmount","TABS","UserProfileView","userData","setUserData","setUserMedical","setUserHabits","setLoading","fetchData","currentTab","setCurrentTab","handleChangeTab","marginLeft","Tabs","tabsClasses","flexContainer","sm","tab","Tab","posts","_userFeeds","baseEach","require","isArrayLike","module","exports","collection","iteratee","result","Array","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","iteratees","orders","object","array","comparer","isSymbol","valIsDefined","undefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareAscending","objCriteria","criteria","othCriteria","ordersLength","baseOrderBy","guard","e","i","t","f","r","setCustomValidity","message","reportValidity","fields","refs","forEach","shouldUseNativeValidation","o","n","Object","assign","s","c","u","context","mode","abortEarly","values","raw","errors","inner","criteriaMode","reduce","path","types","reject"],"sourceRoot":""}